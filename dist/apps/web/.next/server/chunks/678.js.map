{"version":3,"file":"678.js","mappings":"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","sources":["webpack:///../../node_modules/@radix-ui/react-dialog/dist/index.mjs","webpack:///../../node_modules/@tanstack/query-core/build/lib/queryObserver.mjs","webpack:///../../node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.mjs","webpack:///../../node_modules/@tanstack/react-query/build/lib/isRestoring.mjs","webpack:///../../node_modules/@tanstack/react-query/build/lib/errorBoundaryUtils.mjs","webpack:///../../node_modules/@tanstack/react-query/build/lib/suspense.mjs","webpack:///../../node_modules/@tanstack/react-query/build/lib/useBaseQuery.mjs","webpack:///../../node_modules/@tanstack/react-query/build/lib/useQuery.mjs","webpack:///../../node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs","webpack:///../../node_modules/@tanstack/react-query/build/lib/utils.mjs","webpack:///<anon>"],"sourcesContent":["import $67UHm$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport {useRef as $67UHm$useRef, createElement as $67UHm$createElement, useCallback as $67UHm$useCallback, forwardRef as $67UHm$forwardRef, Children as $67UHm$Children, useEffect as $67UHm$useEffect, Fragment as $67UHm$Fragment} from \"react\";\nimport {composeEventHandlers as $67UHm$composeEventHandlers} from \"@radix-ui/primitive\";\nimport {useComposedRefs as $67UHm$useComposedRefs} from \"@radix-ui/react-compose-refs\";\nimport {createContextScope as $67UHm$createContextScope, createContext as $67UHm$createContext} from \"@radix-ui/react-context\";\nimport {useId as $67UHm$useId} from \"@radix-ui/react-id\";\nimport {useControllableState as $67UHm$useControllableState} from \"@radix-ui/react-use-controllable-state\";\nimport {DismissableLayer as $67UHm$DismissableLayer} from \"@radix-ui/react-dismissable-layer\";\nimport {FocusScope as $67UHm$FocusScope} from \"@radix-ui/react-focus-scope\";\nimport {Portal as $67UHm$Portal} from \"@radix-ui/react-portal\";\nimport {Presence as $67UHm$Presence} from \"@radix-ui/react-presence\";\nimport {Primitive as $67UHm$Primitive} from \"@radix-ui/react-primitive\";\nimport {useFocusGuards as $67UHm$useFocusGuards} from \"@radix-ui/react-focus-guards\";\nimport {RemoveScroll as $67UHm$RemoveScroll} from \"react-remove-scroll\";\nimport {hideOthers as $67UHm$hideOthers} from \"aria-hidden\";\nimport {Slot as $67UHm$Slot} from \"@radix-ui/react-slot\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$DIALOG_NAME = 'Dialog';\nconst [$5d3850c4d0b4e6c7$var$createDialogContext, $5d3850c4d0b4e6c7$export$cc702773b8ea3e41] = $67UHm$createContextScope($5d3850c4d0b4e6c7$var$DIALOG_NAME);\nconst [$5d3850c4d0b4e6c7$var$DialogProvider, $5d3850c4d0b4e6c7$var$useDialogContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$DIALOG_NAME);\nconst $5d3850c4d0b4e6c7$export$3ddf2d174ce01153 = (props)=>{\n    const { __scopeDialog: __scopeDialog , children: children , open: openProp , defaultOpen: defaultOpen , onOpenChange: onOpenChange , modal: modal = true  } = props;\n    const triggerRef = $67UHm$useRef(null);\n    const contentRef = $67UHm$useRef(null);\n    const [open = false, setOpen] = $67UHm$useControllableState({\n        prop: openProp,\n        defaultProp: defaultOpen,\n        onChange: onOpenChange\n    });\n    return /*#__PURE__*/ $67UHm$createElement($5d3850c4d0b4e6c7$var$DialogProvider, {\n        scope: __scopeDialog,\n        triggerRef: triggerRef,\n        contentRef: contentRef,\n        contentId: $67UHm$useId(),\n        titleId: $67UHm$useId(),\n        descriptionId: $67UHm$useId(),\n        open: open,\n        onOpenChange: setOpen,\n        onOpenToggle: $67UHm$useCallback(()=>setOpen((prevOpen)=>!prevOpen\n            )\n        , [\n            setOpen\n        ]),\n        modal: modal\n    }, children);\n};\n/*#__PURE__*/ Object.assign($5d3850c4d0b4e6c7$export$3ddf2d174ce01153, {\n    displayName: $5d3850c4d0b4e6c7$var$DIALOG_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogTrigger\n * -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$TRIGGER_NAME = 'DialogTrigger';\nconst $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88 = /*#__PURE__*/ $67UHm$forwardRef((props, forwardedRef)=>{\n    const { __scopeDialog: __scopeDialog , ...triggerProps } = props;\n    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TRIGGER_NAME, __scopeDialog);\n    const composedTriggerRef = $67UHm$useComposedRefs(forwardedRef, context.triggerRef);\n    return /*#__PURE__*/ $67UHm$createElement($67UHm$Primitive.button, $67UHm$babelruntimehelpersesmextends({\n        type: \"button\",\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": context.open,\n        \"aria-controls\": context.contentId,\n        \"data-state\": $5d3850c4d0b4e6c7$var$getState(context.open)\n    }, triggerProps, {\n        ref: composedTriggerRef,\n        onClick: $67UHm$composeEventHandlers(props.onClick, context.onOpenToggle)\n    }));\n});\n/*#__PURE__*/ Object.assign($5d3850c4d0b4e6c7$export$2e1e1122cf0cba88, {\n    displayName: $5d3850c4d0b4e6c7$var$TRIGGER_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogPortal\n * -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$PORTAL_NAME = 'DialogPortal';\nconst [$5d3850c4d0b4e6c7$var$PortalProvider, $5d3850c4d0b4e6c7$var$usePortalContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, {\n    forceMount: undefined\n});\nconst $5d3850c4d0b4e6c7$export$dad7c95542bacce0 = (props)=>{\n    const { __scopeDialog: __scopeDialog , forceMount: forceMount , children: children , container: container  } = props;\n    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, __scopeDialog);\n    return /*#__PURE__*/ $67UHm$createElement($5d3850c4d0b4e6c7$var$PortalProvider, {\n        scope: __scopeDialog,\n        forceMount: forceMount\n    }, $67UHm$Children.map(children, (child)=>/*#__PURE__*/ $67UHm$createElement($67UHm$Presence, {\n            present: forceMount || context.open\n        }, /*#__PURE__*/ $67UHm$createElement($67UHm$Portal, {\n            asChild: true,\n            container: container\n        }, child))\n    ));\n};\n/*#__PURE__*/ Object.assign($5d3850c4d0b4e6c7$export$dad7c95542bacce0, {\n    displayName: $5d3850c4d0b4e6c7$var$PORTAL_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogOverlay\n * -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$OVERLAY_NAME = 'DialogOverlay';\nconst $5d3850c4d0b4e6c7$export$bd1d06c79be19e17 = /*#__PURE__*/ $67UHm$forwardRef((props, forwardedRef)=>{\n    const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);\n    const { forceMount: forceMount = portalContext.forceMount , ...overlayProps } = props;\n    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);\n    return context.modal ? /*#__PURE__*/ $67UHm$createElement($67UHm$Presence, {\n        present: forceMount || context.open\n    }, /*#__PURE__*/ $67UHm$createElement($5d3850c4d0b4e6c7$var$DialogOverlayImpl, $67UHm$babelruntimehelpersesmextends({}, overlayProps, {\n        ref: forwardedRef\n    }))) : null;\n});\n/*#__PURE__*/ Object.assign($5d3850c4d0b4e6c7$export$bd1d06c79be19e17, {\n    displayName: $5d3850c4d0b4e6c7$var$OVERLAY_NAME\n});\nconst $5d3850c4d0b4e6c7$var$DialogOverlayImpl = /*#__PURE__*/ $67UHm$forwardRef((props, forwardedRef)=>{\n    const { __scopeDialog: __scopeDialog , ...overlayProps } = props;\n    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, __scopeDialog);\n    return(/*#__PURE__*/ // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n    // ie. when `Overlay` and `Content` are siblings\n    $67UHm$createElement($67UHm$RemoveScroll, {\n        as: $67UHm$Slot,\n        allowPinchZoom: true,\n        shards: [\n            context.contentRef\n        ]\n    }, /*#__PURE__*/ $67UHm$createElement($67UHm$Primitive.div, $67UHm$babelruntimehelpersesmextends({\n        \"data-state\": $5d3850c4d0b4e6c7$var$getState(context.open)\n    }, overlayProps, {\n        ref: forwardedRef // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.\n        ,\n        style: {\n            pointerEvents: 'auto',\n            ...overlayProps.style\n        }\n    }))));\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogContent\n * -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$CONTENT_NAME = 'DialogContent';\nconst $5d3850c4d0b4e6c7$export$b6d9565de1e068cf = /*#__PURE__*/ $67UHm$forwardRef((props, forwardedRef)=>{\n    const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);\n    const { forceMount: forceMount = portalContext.forceMount , ...contentProps } = props;\n    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);\n    return /*#__PURE__*/ $67UHm$createElement($67UHm$Presence, {\n        present: forceMount || context.open\n    }, context.modal ? /*#__PURE__*/ $67UHm$createElement($5d3850c4d0b4e6c7$var$DialogContentModal, $67UHm$babelruntimehelpersesmextends({}, contentProps, {\n        ref: forwardedRef\n    })) : /*#__PURE__*/ $67UHm$createElement($5d3850c4d0b4e6c7$var$DialogContentNonModal, $67UHm$babelruntimehelpersesmextends({}, contentProps, {\n        ref: forwardedRef\n    })));\n});\n/*#__PURE__*/ Object.assign($5d3850c4d0b4e6c7$export$b6d9565de1e068cf, {\n    displayName: $5d3850c4d0b4e6c7$var$CONTENT_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$DialogContentModal = /*#__PURE__*/ $67UHm$forwardRef((props, forwardedRef)=>{\n    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);\n    const contentRef = $67UHm$useRef(null);\n    const composedRefs = $67UHm$useComposedRefs(forwardedRef, context.contentRef, contentRef); // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    $67UHm$useEffect(()=>{\n        const content = contentRef.current;\n        if (content) return $67UHm$hideOthers(content);\n    }, []);\n    return /*#__PURE__*/ $67UHm$createElement($5d3850c4d0b4e6c7$var$DialogContentImpl, $67UHm$babelruntimehelpersesmextends({}, props, {\n        ref: composedRefs // we make sure focus isn't trapped once `DialogContent` has been closed\n        ,\n        trapFocus: context.open,\n        disableOutsidePointerEvents: true,\n        onCloseAutoFocus: $67UHm$composeEventHandlers(props.onCloseAutoFocus, (event)=>{\n            var _context$triggerRef$c;\n            event.preventDefault();\n            (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus();\n        }),\n        onPointerDownOutside: $67UHm$composeEventHandlers(props.onPointerDownOutside, (event)=>{\n            const originalEvent = event.detail.originalEvent;\n            const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n            const isRightClick = originalEvent.button === 2 || ctrlLeftClick; // If the event is a right-click, we shouldn't close because\n            // it is effectively as if we right-clicked the `Overlay`.\n            if (isRightClick) event.preventDefault();\n        }) // When focus is trapped, a `focusout` event may still happen.\n        ,\n        onFocusOutside: $67UHm$composeEventHandlers(props.onFocusOutside, (event)=>event.preventDefault()\n        )\n    }));\n});\n/* -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$DialogContentNonModal = /*#__PURE__*/ $67UHm$forwardRef((props, forwardedRef)=>{\n    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);\n    const hasInteractedOutsideRef = $67UHm$useRef(false);\n    const hasPointerDownOutsideRef = $67UHm$useRef(false);\n    return /*#__PURE__*/ $67UHm$createElement($5d3850c4d0b4e6c7$var$DialogContentImpl, $67UHm$babelruntimehelpersesmextends({}, props, {\n        ref: forwardedRef,\n        trapFocus: false,\n        disableOutsidePointerEvents: false,\n        onCloseAutoFocus: (event)=>{\n            var _props$onCloseAutoFoc;\n            (_props$onCloseAutoFoc = props.onCloseAutoFocus) === null || _props$onCloseAutoFoc === void 0 || _props$onCloseAutoFoc.call(props, event);\n            if (!event.defaultPrevented) {\n                var _context$triggerRef$c2;\n                if (!hasInteractedOutsideRef.current) (_context$triggerRef$c2 = context.triggerRef.current) === null || _context$triggerRef$c2 === void 0 || _context$triggerRef$c2.focus(); // Always prevent auto focus because we either focus manually or want user agent focus\n                event.preventDefault();\n            }\n            hasInteractedOutsideRef.current = false;\n            hasPointerDownOutsideRef.current = false;\n        },\n        onInteractOutside: (event)=>{\n            var _props$onInteractOuts, _context$triggerRef$c3;\n            (_props$onInteractOuts = props.onInteractOutside) === null || _props$onInteractOuts === void 0 || _props$onInteractOuts.call(props, event);\n            if (!event.defaultPrevented) {\n                hasInteractedOutsideRef.current = true;\n                if (event.detail.originalEvent.type === 'pointerdown') hasPointerDownOutsideRef.current = true;\n            } // Prevent dismissing when clicking the trigger.\n            // As the trigger is already setup to close, without doing so would\n            // cause it to close and immediately open.\n            const target = event.target;\n            const targetIsTrigger = (_context$triggerRef$c3 = context.triggerRef.current) === null || _context$triggerRef$c3 === void 0 ? void 0 : _context$triggerRef$c3.contains(target);\n            if (targetIsTrigger) event.preventDefault(); // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n            // we will get the pointer down outside event on the trigger, but then a subsequent\n            // focus outside event on the container, we ignore any focus outside event when we've\n            // already had a pointer down outside event.\n            if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) event.preventDefault();\n        }\n    }));\n});\n/* -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$DialogContentImpl = /*#__PURE__*/ $67UHm$forwardRef((props, forwardedRef)=>{\n    const { __scopeDialog: __scopeDialog , trapFocus: trapFocus , onOpenAutoFocus: onOpenAutoFocus , onCloseAutoFocus: onCloseAutoFocus , ...contentProps } = props;\n    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, __scopeDialog);\n    const contentRef = $67UHm$useRef(null);\n    const composedRefs = $67UHm$useComposedRefs(forwardedRef, contentRef); // Make sure the whole tree has focus guards as our `Dialog` will be\n    // the last element in the DOM (beacuse of the `Portal`)\n    $67UHm$useFocusGuards();\n    return /*#__PURE__*/ $67UHm$createElement($67UHm$Fragment, null, /*#__PURE__*/ $67UHm$createElement($67UHm$FocusScope, {\n        asChild: true,\n        loop: true,\n        trapped: trapFocus,\n        onMountAutoFocus: onOpenAutoFocus,\n        onUnmountAutoFocus: onCloseAutoFocus\n    }, /*#__PURE__*/ $67UHm$createElement($67UHm$DismissableLayer, $67UHm$babelruntimehelpersesmextends({\n        role: \"dialog\",\n        id: context.contentId,\n        \"aria-describedby\": context.descriptionId,\n        \"aria-labelledby\": context.titleId,\n        \"data-state\": $5d3850c4d0b4e6c7$var$getState(context.open)\n    }, contentProps, {\n        ref: composedRefs,\n        onDismiss: ()=>context.onOpenChange(false)\n    }))), false);\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogTitle\n * -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$TITLE_NAME = 'DialogTitle';\nconst $5d3850c4d0b4e6c7$export$16f7638e4a34b909 = /*#__PURE__*/ $67UHm$forwardRef((props, forwardedRef)=>{\n    const { __scopeDialog: __scopeDialog , ...titleProps } = props;\n    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TITLE_NAME, __scopeDialog);\n    return /*#__PURE__*/ $67UHm$createElement($67UHm$Primitive.h2, $67UHm$babelruntimehelpersesmextends({\n        id: context.titleId\n    }, titleProps, {\n        ref: forwardedRef\n    }));\n});\n/*#__PURE__*/ Object.assign($5d3850c4d0b4e6c7$export$16f7638e4a34b909, {\n    displayName: $5d3850c4d0b4e6c7$var$TITLE_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogDescription\n * -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME = 'DialogDescription';\nconst $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5 = /*#__PURE__*/ $67UHm$forwardRef((props, forwardedRef)=>{\n    const { __scopeDialog: __scopeDialog , ...descriptionProps } = props;\n    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$DESCRIPTION_NAME, __scopeDialog);\n    return /*#__PURE__*/ $67UHm$createElement($67UHm$Primitive.p, $67UHm$babelruntimehelpersesmextends({\n        id: context.descriptionId\n    }, descriptionProps, {\n        ref: forwardedRef\n    }));\n});\n/*#__PURE__*/ Object.assign($5d3850c4d0b4e6c7$export$94e94c2ec2c954d5, {\n    displayName: $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogClose\n * -----------------------------------------------------------------------------------------------*/ const $5d3850c4d0b4e6c7$var$CLOSE_NAME = 'DialogClose';\nconst $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac = /*#__PURE__*/ $67UHm$forwardRef((props, forwardedRef)=>{\n    const { __scopeDialog: __scopeDialog , ...closeProps } = props;\n    const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CLOSE_NAME, __scopeDialog);\n    return /*#__PURE__*/ $67UHm$createElement($67UHm$Primitive.button, $67UHm$babelruntimehelpersesmextends({\n        type: \"button\"\n    }, closeProps, {\n        ref: forwardedRef,\n        onClick: $67UHm$composeEventHandlers(props.onClick, ()=>context.onOpenChange(false)\n        )\n    }));\n});\n/*#__PURE__*/ Object.assign($5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac, {\n    displayName: $5d3850c4d0b4e6c7$var$CLOSE_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/ function $5d3850c4d0b4e6c7$var$getState(open) {\n    return open ? 'open' : 'closed';\n}\nconst $5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME = 'DialogTitleWarning';\nconst [$5d3850c4d0b4e6c7$export$69b62a49393917d6, $5d3850c4d0b4e6c7$var$useWarningContext] = $67UHm$createContext($5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME, {\n    contentName: $5d3850c4d0b4e6c7$var$CONTENT_NAME,\n    titleName: $5d3850c4d0b4e6c7$var$TITLE_NAME,\n    docsSlug: 'dialog'\n});\nconst $5d3850c4d0b4e6c7$var$TitleWarning = ({ titleId: titleId  })=>{\n    const titleWarningContext = $5d3850c4d0b4e6c7$var$useWarningContext($5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME);\n    const MESSAGE = `\\`${titleWarningContext.contentName}\\` requires a \\`${titleWarningContext.titleName}\\` for the component to be accessible for screen reader users.\n\nIf you want to hide the \\`${titleWarningContext.titleName}\\`, you can wrap it with our VisuallyHidden component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;\n    $67UHm$useEffect(()=>{\n        if (titleId) {\n            const hasTitle = document.getElementById(titleId);\n            if (!hasTitle) throw new Error(MESSAGE);\n        }\n    }, [\n        MESSAGE,\n        titleId\n    ]);\n    return null;\n};\nconst $5d3850c4d0b4e6c7$var$DESCRIPTION_WARNING_NAME = 'DialogDescriptionWarning';\nconst $5d3850c4d0b4e6c7$var$DescriptionWarning = ({ contentRef: contentRef , descriptionId: descriptionId  })=>{\n    const descriptionWarningContext = $5d3850c4d0b4e6c7$var$useWarningContext($5d3850c4d0b4e6c7$var$DESCRIPTION_WARNING_NAME);\n    const MESSAGE = `Warning: Missing \\`Description\\` or \\`aria-describedby={undefined}\\` for {${descriptionWarningContext.contentName}}.`;\n    $67UHm$useEffect(()=>{\n        var _contentRef$current;\n        const describedById = (_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 ? void 0 : _contentRef$current.getAttribute('aria-describedby'); // if we have an id and the user hasn't set aria-describedby={undefined}\n        if (descriptionId && describedById) {\n            const hasDescription = document.getElementById(descriptionId);\n            if (!hasDescription) console.warn(MESSAGE);\n        }\n    }, [\n        MESSAGE,\n        contentRef,\n        descriptionId\n    ]);\n    return null;\n};\nconst $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9 = $5d3850c4d0b4e6c7$export$3ddf2d174ce01153;\nconst $5d3850c4d0b4e6c7$export$41fb9f06171c75f4 = $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88;\nconst $5d3850c4d0b4e6c7$export$602eac185826482c = $5d3850c4d0b4e6c7$export$dad7c95542bacce0;\nconst $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff = $5d3850c4d0b4e6c7$export$bd1d06c79be19e17;\nconst $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2 = $5d3850c4d0b4e6c7$export$b6d9565de1e068cf;\nconst $5d3850c4d0b4e6c7$export$f99233281efd08a0 = $5d3850c4d0b4e6c7$export$16f7638e4a34b909;\nconst $5d3850c4d0b4e6c7$export$393edc798c47379d = $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5;\nconst $5d3850c4d0b4e6c7$export$f39c2d165cd861fe = $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac;\n\n\n\n\nexport {$5d3850c4d0b4e6c7$export$cc702773b8ea3e41 as createDialogScope, $5d3850c4d0b4e6c7$export$3ddf2d174ce01153 as Dialog, $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88 as DialogTrigger, $5d3850c4d0b4e6c7$export$dad7c95542bacce0 as DialogPortal, $5d3850c4d0b4e6c7$export$bd1d06c79be19e17 as DialogOverlay, $5d3850c4d0b4e6c7$export$b6d9565de1e068cf as DialogContent, $5d3850c4d0b4e6c7$export$16f7638e4a34b909 as DialogTitle, $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5 as DialogDescription, $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac as DialogClose, $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9 as Root, $5d3850c4d0b4e6c7$export$41fb9f06171c75f4 as Trigger, $5d3850c4d0b4e6c7$export$602eac185826482c as Portal, $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff as Overlay, $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2 as Content, $5d3850c4d0b4e6c7$export$f99233281efd08a0 as Title, $5d3850c4d0b4e6c7$export$393edc798c47379d as Description, $5d3850c4d0b4e6c7$export$f39c2d165cd861fe as Close, $5d3850c4d0b4e6c7$export$69b62a49393917d6 as WarningProvider};\n//# sourceMappingURL=index.mjs.map\n","import { shallowEqualObjects, noop, isServer, isValidTimeout, timeUntilStale, replaceData } from './utils.mjs';\nimport { notifyManager } from './notifyManager.mjs';\nimport { focusManager } from './focusManager.mjs';\nimport { Subscribable } from './subscribable.mjs';\nimport { canFetch, isCancelledError } from './retryer.mjs';\n\nclass QueryObserver extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.client = client;\n    this.options = options;\n    this.trackedProps = new Set();\n    this.selectError = null;\n    this.bindMethods();\n    this.setOptions(options);\n  }\n\n  bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  }\n\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnReconnect);\n  }\n\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnWindowFocus);\n  }\n\n  destroy() {\n    this.listeners = new Set();\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n    this.currentQuery.removeObserver(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    const prevOptions = this.options;\n    const prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryOptions(options);\n\n    if (process.env.NODE_ENV !== 'production' && typeof (options == null ? void 0 : options.isDataEqual) !== 'undefined') {\n      this.client.getLogger().error(\"The isDataEqual option has been deprecated and will be removed in the next major version. You can achieve the same functionality by passing a function as the structuralSharing option\");\n    }\n\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.currentQuery,\n        observer: this\n      });\n    }\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    const mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    }\n\n    const nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {\n      this.updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n\n  getOptimisticResult(options) {\n    const query = this.client.getQueryCache().build(this.client, options);\n    const result = this.createResult(query, options);\n\n    if (shouldAssignObserverCurrentProperties(this, result, options)) {\n      // this assigns the optimistic result to the current Observer\n      // because if the query function changes, useQuery will be performing\n      // an effect where it would fetch again.\n      // When the fetch finishes, we perform a deep data cloning in order\n      // to reuse objects references. This deep data clone is performed against\n      // the `observer.currentResult.data` property\n      // When QueryKey changes, we refresh the query and get new `optimistic`\n      // result, while we leave the `observer.currentResult`, so when new data\n      // arrives, it finds the old `observer.currentResult` which is related\n      // to the old QueryKey. Which means that currentResult and selectData are\n      // out of sync already.\n      // To solve this, we move the cursor of the currentResult everytime\n      // an observer reads an optimistic value.\n      // When keeping the previous data, the result doesn't change until new\n      // data arrives.\n      this.currentResult = result;\n      this.currentResultOptions = this.options;\n      this.currentResultState = this.currentQuery.state;\n    }\n\n    return result;\n  }\n\n  getCurrentResult() {\n    return this.currentResult;\n  }\n\n  trackResult(result) {\n    const trackedResult = {};\n    Object.keys(result).forEach(key => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackedProps.add(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n\n  getCurrentQuery() {\n    return this.currentQuery;\n  }\n\n  remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  }\n\n  refetch({\n    refetchPage,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        refetchPage\n      }\n    });\n  }\n\n  fetchOptimistic(options) {\n    const defaultedOptions = this.client.defaultQueryOptions(options);\n    const query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    query.isFetchingOptimistic = true;\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n\n  fetch(fetchOptions) {\n    var _fetchOptions$cancelR;\n\n    return this.executeFetch({ ...fetchOptions,\n      cancelRefetch: (_fetchOptions$cancelR = fetchOptions.cancelRefetch) != null ? _fetchOptions$cancelR : true\n    }).then(() => {\n      this.updateResult();\n      return this.currentResult;\n    });\n  }\n\n  executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    let promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions != null && fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  }\n\n  updateStaleTimeout() {\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    const time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    const timeout = time + 1;\n    this.staleTimeoutId = setTimeout(() => {\n      if (!this.currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n\n  computeRefetchInterval() {\n    var _this$options$refetch;\n\n    return typeof this.options.refetchInterval === 'function' ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;\n  }\n\n  updateRefetchInterval(nextInterval) {\n    this.clearRefetchInterval();\n    this.currentRefetchInterval = nextInterval;\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.executeFetch();\n      }\n    }, this.currentRefetchInterval);\n  }\n\n  updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval(this.computeRefetchInterval());\n  }\n\n  clearStaleTimeout() {\n    if (this.staleTimeoutId) {\n      clearTimeout(this.staleTimeoutId);\n      this.staleTimeoutId = undefined;\n    }\n  }\n\n  clearRefetchInterval() {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId);\n      this.refetchIntervalId = undefined;\n    }\n  }\n\n  createResult(query, options) {\n    const prevQuery = this.currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.currentResult;\n    const prevResultState = this.currentResultState;\n    const prevResultOptions = this.currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    const prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    const {\n      state\n    } = query;\n    let {\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      fetchStatus,\n      status\n    } = state;\n    let isPreviousData = false;\n    let isPlaceholderData = false;\n    let data; // Optimistically set result in fetching state if needed\n\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        fetchStatus = canFetch(query.options.networkMode) ? 'fetching' : 'paused';\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n\n      if (options._optimisticResults === 'isRestoring') {\n        fetchStatus = 'idle';\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdatedAt && prevQueryResult != null && prevQueryResult.isSuccess && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n      // Memoize select result\n      if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === this.selectFn) {\n        data = this.selectResult;\n      } else {\n        try {\n          this.selectFn = options.select;\n          data = options.select(state.data);\n          data = replaceData(prevResult == null ? void 0 : prevResult.data, data, options);\n          this.selectResult = data;\n          this.selectError = null;\n        } catch (selectError) {\n          if (process.env.NODE_ENV !== 'production') {\n            this.client.getLogger().error(selectError);\n          }\n\n          this.selectError = selectError;\n        }\n      }\n    } // Use query data\n    else {\n      data = state.data;\n    } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      let placeholderData; // Memoize placeholder data\n\n      if (prevResult != null && prevResult.isPlaceholderData && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n            this.selectError = null;\n          } catch (selectError) {\n            if (process.env.NODE_ENV !== 'production') {\n              this.client.getLogger().error(selectError);\n            }\n\n            this.selectError = selectError;\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = replaceData(prevResult == null ? void 0 : prevResult.data, placeholderData, options);\n        isPlaceholderData = true;\n      }\n    }\n\n    if (this.selectError) {\n      error = this.selectError;\n      data = this.selectResult;\n      errorUpdatedAt = Date.now();\n      status = 'error';\n    }\n\n    const isFetching = fetchStatus === 'fetching';\n    const isLoading = status === 'loading';\n    const isError = status === 'error';\n    const result = {\n      status,\n      fetchStatus,\n      isLoading,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading && isFetching,\n      data,\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      failureReason: state.fetchFailureReason,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isLoading,\n      isLoadingError: isError && state.dataUpdatedAt === 0,\n      isPaused: fetchStatus === 'paused',\n      isPlaceholderData,\n      isPreviousData,\n      isRefetchError: isError && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  }\n\n  updateResult(notifyOptions) {\n    const prevResult = this.currentResult;\n    const nextResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify and update result if something has changed\n\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n\n    this.currentResult = nextResult; // Determine which callbacks to trigger\n\n    const defaultNotifyOptions = {\n      cache: true\n    };\n\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n\n      const {\n        notifyOnChangeProps\n      } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === 'function' ? notifyOnChangeProps() : notifyOnChangeProps;\n\n      if (notifyOnChangePropsValue === 'all' || !notifyOnChangePropsValue && !this.trackedProps.size) {\n        return true;\n      }\n\n      const includedProps = new Set(notifyOnChangePropsValue != null ? notifyOnChangePropsValue : this.trackedProps);\n\n      if (this.options.useErrorBoundary) {\n        includedProps.add('error');\n      }\n\n      return Object.keys(this.currentResult).some(key => {\n        const typedKey = key;\n        const changed = this.currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify({ ...defaultNotifyOptions,\n      ...notifyOptions\n    });\n  }\n\n  updateQuery() {\n    const query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    const prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n\n  onQueryUpdate(action) {\n    const notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = !action.manual;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  }\n\n  notify(notifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        var _this$options$onSucce, _this$options, _this$options$onSettl, _this$options2;\n\n        (_this$options$onSucce = (_this$options = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options, this.currentResult.data);\n        (_this$options$onSettl = (_this$options2 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options2, this.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        var _this$options$onError, _this$options3, _this$options$onSettl2, _this$options4;\n\n        (_this$options$onError = (_this$options3 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options3, this.currentResult.error);\n        (_this$options$onSettl2 = (_this$options4 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options4, undefined, this.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        this.listeners.forEach(({\n          listener\n        }) => {\n          listener(this.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        this.client.getQueryCache().notify({\n          query: this.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  }\n\n}\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\n\nfunction shouldFetchOn(query, options, field) {\n  if (options.enabled !== false) {\n    const value = typeof field === 'function' ? field(query) : field;\n    return value === 'always' || value !== false && isStale(query, options);\n  }\n\n  return false;\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== 'error') && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n} // this function would decide if we will update the observer's 'current'\n// properties after an optimistic reading via getOptimisticResult\n\n\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult, options) {\n  // it is important to keep this condition like this for three reasons:\n  // 1. It will get removed in the v5\n  // 2. it reads: don't update the properties if we want to keep the previous\n  // data.\n  // 3. The opposite condition (!options.keepPreviousData) would fallthrough\n  // and will result in a bad decision\n  if (options.keepPreviousData) {\n    return false;\n  } // this means we want to put some placeholder data when pending and queryKey\n  // changed.\n\n\n  if (options.placeholderData !== undefined) {\n    // re-assign properties only if current data is placeholder data\n    // which means that data did not arrive yet, so, if there is some cached data\n    // we need to \"prepare\" to receive it\n    return optimisticResult.isPlaceholderData;\n  } // if the newly created result isn't what the observer is holding as current,\n  // then we'll need to update the properties as well\n\n\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  } // basically, just keep previous properties if nothing changed\n\n\n  return false;\n}\n\nexport { QueryObserver };\n//# sourceMappingURL=queryObserver.mjs.map\n","'use client';\nimport * as React from 'react';\n\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\n\nconst QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nconst useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext); // COMPONENT\n\nconst QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};\n\nexport { QueryErrorResetBoundary, useQueryErrorResetBoundary };\n//# sourceMappingURL=QueryErrorResetBoundary.mjs.map\n","'use client';\nimport * as React from 'react';\n\nconst IsRestoringContext = /*#__PURE__*/React.createContext(false);\nconst useIsRestoring = () => React.useContext(IsRestoringContext);\nconst IsRestoringProvider = IsRestoringContext.Provider;\n\nexport { IsRestoringProvider, useIsRestoring };\n//# sourceMappingURL=isRestoring.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { shouldThrowError } from './utils.mjs';\n\nconst ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nconst useClearResetErrorBoundary = errorResetBoundary => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nconst getHasError = ({\n  result,\n  errorResetBoundary,\n  useErrorBoundary,\n  query\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(useErrorBoundary, [result.error, query]);\n};\n\nexport { ensurePreventErrorBoundaryRetry, getHasError, useClearResetErrorBoundary };\n//# sourceMappingURL=errorBoundaryUtils.mjs.map\n","const ensureStaleTime = defaultedOptions => {\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n};\nconst willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nconst shouldSuspend = (defaultedOptions, result, isRestoring) => (defaultedOptions == null ? void 0 : defaultedOptions.suspense) && willFetch(result, isRestoring);\nconst fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).then(({\n  data\n}) => {\n  defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n}).catch(error => {\n  errorResetBoundary.clearReset();\n  defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n});\n\nexport { ensureStaleTime, fetchOptimistic, shouldSuspend, willFetch };\n//# sourceMappingURL=suspense.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { notifyManager } from '@tanstack/query-core';\nimport { useSyncExternalStore } from './useSyncExternalStore.mjs';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary.mjs';\nimport { useQueryClient } from './QueryClientProvider.mjs';\nimport { useIsRestoring } from './isRestoring.mjs';\nimport { ensurePreventErrorBoundaryRetry, useClearResetErrorBoundary, getHasError } from './errorBoundaryUtils.mjs';\nimport { ensureStaleTime, shouldSuspend, fetchOptimistic } from './suspense.mjs';\n\nfunction useBaseQuery(options, Observer) {\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = queryClient.defaultQueryOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions._optimisticResults = isRestoring ? 'isRestoring' : 'optimistic'; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  ensureStaleTime(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const [observer] = React.useState(() => new Observer(queryClient, defaultedOptions));\n  const result = observer.getOptimisticResult(defaultedOptions);\n  useSyncExternalStore(React.useCallback(onStoreChange => {\n    const unsubscribe = isRestoring ? () => undefined : observer.subscribe(notifyManager.batchCalls(onStoreChange)); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return unsubscribe;\n  }, [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (shouldSuspend(defaultedOptions, result, isRestoring)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  } // Handle error boundary\n\n\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    useErrorBoundary: defaultedOptions.useErrorBoundary,\n    query: observer.getCurrentQuery()\n  })) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\n\nexport { useBaseQuery };\n//# sourceMappingURL=useBaseQuery.mjs.map\n","'use client';\nimport { parseQueryArgs, QueryObserver } from '@tanstack/query-core';\nimport { useBaseQuery } from './useBaseQuery.mjs';\n\nfunction useQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}\n\nexport { useQuery };\n//# sourceMappingURL=useQuery.mjs.map\n","'use client';\nimport { useSyncExternalStore as useSyncExternalStore$1 } from 'use-sync-external-store/shim/index.js';\n\nconst useSyncExternalStore = useSyncExternalStore$1;\n\nexport { useSyncExternalStore };\n//# sourceMappingURL=useSyncExternalStore.mjs.map\n","function shouldThrowError(_useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params);\n  }\n\n  return !!_useErrorBoundary;\n}\n\nexport { shouldThrowError };\n//# sourceMappingURL=utils.mjs.map\n"],"names":["$5d3850c4d0b4e6c7$var$DIALOG_NAME","$5d3850c4d0b4e6c7$var$createDialogContext","$5d3850c4d0b4e6c7$export$cc702773b8ea3e41","_radix_ui_react_context__WEBPACK_IMPORTED_MODULE_1__","b","$5d3850c4d0b4e6c7$var$DialogProvider","$5d3850c4d0b4e6c7$var$useDialogContext","$5d3850c4d0b4e6c7$export$2e1e1122cf0cba88","react__WEBPACK_IMPORTED_MODULE_0__","forwardRef","props","forwardedRef","__scopeDialog","triggerProps","context","composedTriggerRef","_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_4__","e","triggerRef","createElement","_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_5__","WV","button","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_6__","Z","type","open","contentId","$5d3850c4d0b4e6c7$var$getState","ref","onClick","_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_7__","M","onOpenToggle","$5d3850c4d0b4e6c7$var$PORTAL_NAME","$5d3850c4d0b4e6c7$var$PortalProvider","$5d3850c4d0b4e6c7$var$usePortalContext","forceMount","undefined","$5d3850c4d0b4e6c7$var$OVERLAY_NAME","$5d3850c4d0b4e6c7$export$bd1d06c79be19e17","portalContext","overlayProps","modal","_radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_8__","z","present","$5d3850c4d0b4e6c7$var$DialogOverlayImpl","react_remove_scroll__WEBPACK_IMPORTED_MODULE_10__","as","_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__","g7","allowPinchZoom","shards","contentRef","div","style","pointerEvents","$5d3850c4d0b4e6c7$var$CONTENT_NAME","$5d3850c4d0b4e6c7$export$b6d9565de1e068cf","contentProps","$5d3850c4d0b4e6c7$var$DialogContentModal","$5d3850c4d0b4e6c7$var$DialogContentNonModal","useRef","composedRefs","useEffect","content","current","aria_hidden__WEBPACK_IMPORTED_MODULE_12__","Ry","$5d3850c4d0b4e6c7$var$DialogContentImpl","trapFocus","disableOutsidePointerEvents","onCloseAutoFocus","_context$triggerRef$c","event","preventDefault","focus","onPointerDownOutside","originalEvent","detail","ctrlLeftClick","ctrlKey","onFocusOutside","hasInteractedOutsideRef","hasPointerDownOutsideRef","_props$onCloseAutoFoc","_context$triggerRef$c2","call","defaultPrevented","onInteractOutside","_props$onInteractOuts","_context$triggerRef$c3","target","contains","onOpenAutoFocus","_radix_ui_react_focus_guards__WEBPACK_IMPORTED_MODULE_13__","EW","Fragment","_radix_ui_react_focus_scope__WEBPACK_IMPORTED_MODULE_14__","asChild","loop","trapped","onMountAutoFocus","onUnmountAutoFocus","_radix_ui_react_dismissable_layer__WEBPACK_IMPORTED_MODULE_15__","XB","role","id","descriptionId","titleId","onDismiss","onOpenChange","$5d3850c4d0b4e6c7$var$TITLE_NAME","$5d3850c4d0b4e6c7$export$16f7638e4a34b909","titleProps","h2","$5d3850c4d0b4e6c7$export$94e94c2ec2c954d5","descriptionProps","p","$5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac","closeProps","$5d3850c4d0b4e6c7$export$69b62a49393917d6","$5d3850c4d0b4e6c7$var$useWarningContext","k","contentName","titleName","docsSlug","$5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9","children","openProp","defaultOpen","setOpen","_radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_2__","T","prop","defaultProp","onChange","scope","_radix_ui_react_id__WEBPACK_IMPORTED_MODULE_3__","useCallback","prevOpen","$5d3850c4d0b4e6c7$export$41fb9f06171c75f4","$5d3850c4d0b4e6c7$export$602eac185826482c","container","Children","map","_radix_ui_react_portal__WEBPACK_IMPORTED_MODULE_9__","h","child","$5d3850c4d0b4e6c7$export$c6fdb837b070b4ff","$5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2","$5d3850c4d0b4e6c7$export$f99233281efd08a0","$5d3850c4d0b4e6c7$export$393edc798c47379d","$5d3850c4d0b4e6c7$export$f39c2d165cd861fe","QueryObserver","subscribable","l","constructor","client","options","trackedProps","Set","selectError","bindMethods","setOptions","remove","bind","refetch","onSubscribe","listeners","size","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","hasListeners","destroy","shouldFetchOnReconnect","shouldFetchOn","refetchOnReconnect","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearStaleTimeout","clearRefetchInterval","removeObserver","notifyOptions","prevOptions","prevQuery","defaultQueryOptions","utils","VS","getQueryCache","notify","query","observer","enabled","queryKey","updateQuery","mounted","shouldFetchOptionally","updateResult","staleTime","updateStaleTimeout","nextRefetchInterval","computeRefetchInterval","currentRefetchInterval","updateRefetchInterval","getOptimisticResult","build","result","createResult","keepPreviousData","placeholderData","optimisticResult","isPlaceholderData","getCurrentResult","currentResult","currentResultOptions","currentResultState","state","trackResult","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","get","add","getCurrentQuery","refetchPage","fetch","meta","fetchOptimistic","defaultedOptions","isFetchingOptimistic","then","fetchOptions","_fetchOptions$cancelR","cancelRefetch","promise","throwOnError","catch","ZT","sk","isStale","PN","time","Kp","dataUpdatedAt","staleTimeoutId","setTimeout","_this$options$refetch","refetchInterval","data","nextInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","j","isFocused","clearTimeout","clearInterval","prevResult","prevResultState","prevResultOptions","queryChange","queryInitialState","currentQueryInitialState","prevQueryResult","previousQueryResult","error","errorUpdatedAt","fetchStatus","status","isPreviousData","_optimisticResults","fetchOnMount","fetchOptionally","retryer","Kw","networkMode","isSuccess","select","selectFn","selectResult","oE","Date","now","isFetching","isLoading","isError","isInitialLoading","failureCount","fetchFailureCount","failureReason","fetchFailureReason","errorUpdateCount","isFetched","dataUpdateCount","isFetchedAfterMount","isRefetching","isLoadingError","isPaused","isRefetchError","nextResult","defaultNotifyOptions","cache","shouldNotifyListeners","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","useErrorBoundary","some","changed","has","onQueryUpdate","action","onSuccess","manual","DV","onError","notifyManager","V","batch","_this$options$onSucce","_this$options","_this$options$onSettl","_this$options2","_this$options$onError","_this$options3","_this$options$onSettl2","_this$options4","onSettled","listener","retryOnMount","refetchOnMount","field","value","suspense","isStaleByTime","QueryErrorResetBoundaryContext","React","createValue","isReset","clearReset","reset","useQueryErrorResetBoundary","IsRestoringContext","useIsRestoring","Provider","ensurePreventErrorBoundaryRetry","errorResetBoundary","useClearResetErrorBoundary","getHasError","shouldThrowError","ensureStaleTime","willFetch","isRestoring","shouldSuspend","useQuery","arg1","arg2","arg3","useBaseQuery","Observer","queryClient","useQueryClient","batchCalls","useSyncExternalStore","onStoreChange","unsubscribe","subscribe","parseQueryArgs","useSyncExternalStore$1","_useErrorBoundary","params"],"sourceRoot":""}