{"version":3,"file":"169.js","mappings":"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ACX,EACAC,iBAAkB,WACd,OAAOA,CACX,EACAC,aAAc,WACV,OAAOA,CACX,EACAhJ,uBAAwB,WACpB,OAAOA,CACX,EACAiJ,wBAAyB,WACrB,OAAOA,CACX,EACAC,yBAA0B,WACtB,OAAOA,CACX,EACAC,WAAY,WACR,OAAOA,CACX,EACAC,WAAY,WACR,OAAOA,CACX,EACAC,eAAgB,WACZ,OAAOA,CACX,EACAC,mBAAoB,WAChB,OAAOA,CACX,EACAC,yBAA0B,WACtB,OAAOA,CACX,EACAC,eAAgB,WACZ,OAAOA,CACX,EACAC,mBAAoB,WAChB,OAAOA,CACX,EACAC,0BAA2B,WACvB,OAAOA,CACX,EACAC,+BAAgC,WAC5B,OAAOA,CACX,EACAC,mBAAoB,WAChB,OAAOA,CACX,EACAC,cAAe,WACX,OAAOA,CACX,EACAC,cAAe,WACX,OAAOA,CACX,EACAC,mBAAoB,WAChB,OAAOA,CACX,EACAC,gBAAiB,WACb,OAAOA,CACX,EACAC,gBAAiB,WACb,OAAOA,CACX,EACAC,sBAAuB,WACnB,OAAOA,CACX,EACAC,0BAA2B,WACvB,OAAOA,CACX,EACAC,oBAAqB,WACjB,OAAOA,CACX,EACAC,wBAAyB,WACrB,OAAOA,CACX,EACAC,wBAAyB,WACrB,OAAOA,CACX,EACAC,cAAe,WACX,OAAOA,CACX,EACAC,iBAAkB,WACd,OAAOA,CACX,EACAC,aAAc,WACV,OAAOA,CACX,EACAC,cAAe,WACX,OAAOA,CACX,EACAC,cAAe,WACX,OAAOA,CACX,EACAC,yBAA0B,WACtB,OAAOA,CACX,EACAC,yBAA0B,WACtB,OAAOA,CACX,EACAC,2BAA4B,WACxB,OAAOA,CACX,EACAC,sBAAuB,WACnB,OAAOA,CACX,EACAC,2BAA4B,WACxB,OAAOA,CACX,EACAC,0BAA2B,WACvB,OAAOA,CACX,EACAC,0BAA2B,WACvB,OAAOA,CACX,EACAC,0BAA2B,WACvB,OAAOA,CACX,EACAC,mCAAoC,WAChC,OAAOA,CACX,EACAC,iCAAkC,WAC9B,OAAOA,CACX,EACAC,qCAAsC,WAClC,OAAOA,CACX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","sources":["webpack:///../../node_modules/@sentry/core/esm/integration.js?6ade","webpack:///../../node_modules/@sentry/utils/esm/instrument/_handlers.js?d581","webpack:///../../node_modules/@sentry/utils/esm/instrument/globalError.js?b0da","webpack:///../../node_modules/@sentry/utils/esm/instrument/globalUnhandledRejection.js?b842","webpack:///../../node_modules/@sentry/core/esm/tracing/utils.js?f015","webpack:///../../node_modules/@sentry/core/esm/tracing/errors.js?0b40","webpack:///../../node_modules/@sentry/core/esm/semanticAttributes.js?d974","webpack:///../../node_modules/@sentry/core/esm/utils/hasTracingEnabled.js?34f7","webpack:///../../node_modules/@sentry/core/esm/tracing/sampling.js?ffcc","webpack:///../../node_modules/@sentry/core/esm/utils/handleCallbackErrors.js?c861","webpack:///../../node_modules/@sentry/core/esm/tracing/trace.js?ff9f","webpack:///../../node_modules/@sentry/core/esm/metrics/metric-summary.js?b916","webpack:///../../node_modules/@sentry/core/esm/tracing/spanstatus.js?4551","webpack:///../../node_modules/@sentry/core/esm/tracing/span.js?ac52","webpack:///../../node_modules/@sentry/core/esm/tracing/transaction.js?c571","webpack:///../../node_modules/@sentry/core/esm/tracing/hubextensions.js?ead0","webpack:///../../node_modules/@sentry/core/esm/utils/sdkMetadata.js?7a9e","webpack:///../../node_modules/@sentry/core/esm/integrations/functiontostring.js?2c49","webpack:///../../node_modules/@sentry/core/esm/integrations/inboundfilters.js?7cd0","webpack:///../../node_modules/@sentry/utils/esm/aggregate-errors.js?c792","webpack:///../../node_modules/@sentry/utils/esm/eventbuilder.js?d670","webpack:///../../node_modules/@sentry/core/esm/integrations/linkederrors.js?caa4","webpack:///../../node_modules/@sentry/core/esm/integrations/index.js?543c","webpack:///../../node_modules/@sentry/core/esm/index.js?2b66","webpack:///../../node_modules/@sentry/utils/esm/path.js?855f","webpack:///../../node_modules/@sentry/node/esm/module.js?d0fb","webpack:///../../node_modules/@sentry/utils/esm/instrument/console.js?bae3","webpack:///../../node_modules/@sentry/utils/esm/severity.js?d1d2","webpack:///../../node_modules/@sentry/node/esm/integrations/console.js?cd8a","webpack:///../../node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js?fbfe","webpack:///../../node_modules/@sentry/utils/esm/lru.js?a3f6","webpack:///../../node_modules/@sentry/node/esm/debug-build.js?5369","webpack:///../../node_modules/@sentry/node/esm/integrations/utils/http.js?e817","webpack:///../../node_modules/@sentry/node/esm/integrations/http.js?2326","webpack:///../../node_modules/@sentry/node/esm/integrations/utils/errorhandling.js?9db0","webpack:///../../node_modules/@sentry/node/esm/integrations/onuncaughtexception.js?3e23","webpack:///../../node_modules/@sentry/node/esm/integrations/onunhandledrejection.js?0e5b","webpack:///../../node_modules/@sentry/node/esm/integrations/modules.js?e23a","webpack:///../../node_modules/@sentry/node/esm/integrations/contextlines.js?7f8f","webpack:///../../node_modules/@sentry/node/esm/integrations/context.js?0cbd","webpack:///../../node_modules/@sentry/utils/esm/cookie.js?4d5e","webpack:///../../node_modules/@sentry/utils/esm/url.js?a1fd","webpack:///../../node_modules/@sentry/utils/esm/requestdata.js?9b92","webpack:///../../node_modules/@sentry/core/esm/integrations/requestdata.js?9ec1","webpack:///../../node_modules/@sentry/node/esm/integrations/local-variables/common.js?2b96","webpack:///../../node_modules/@sentry/node/esm/integrations/local-variables/local-variables-sync.js?0216","webpack:///../../node_modules/@sentry/node/esm/integrations/local-variables/index.js?f7df","webpack:///../../node_modules/@sentry/node/esm/integrations/undici/index.js?dffb","webpack:///../../node_modules/@sentry/utils/esm/dsn.js?dec1","webpack:///../../node_modules/@sentry/utils/esm/envelope.js?420f","webpack:///../../node_modules/@sentry/node/esm/integrations/spotlight.js?2b93","webpack:///../../node_modules/@sentry/node/esm/integrations/hapi/index.js?d846","webpack:///../../node_modules/@sentry/node/esm/integrations/index.js?0b53","webpack:///../../node_modules/@sentry-internal/tracing/esm/common/debug-build.js?a2be","webpack:///../../node_modules/@sentry-internal/tracing/esm/node/integrations/utils/node-utils.js?d7b9","webpack:///../../node_modules/@sentry-internal/tracing/esm/node/integrations/apollo.js?f21b","webpack:///../../node_modules/@sentry-internal/tracing/esm/node/integrations/express.js?1cda","webpack:///../../node_modules/@sentry-internal/tracing/esm/node/integrations/graphql.js?1306","webpack:///../../node_modules/@sentry-internal/tracing/esm/node/integrations/mongo.js?c29f","webpack:///../../node_modules/@sentry-internal/tracing/esm/node/integrations/mysql.js?55e7","webpack:///../../node_modules/@sentry-internal/tracing/esm/node/integrations/postgres.js?f638","webpack:///../../node_modules/@sentry-internal/tracing/esm/node/integrations/prisma.js?97ad","webpack:///../../node_modules/@sentry/node/esm/tracing/integrations.js?8d7d","webpack:///../../node_modules/@sentry/node/esm/cron/common.js?0168","webpack:///../../node_modules/@sentry/node/esm/cron/cron.js?ff70","webpack:///../../node_modules/@sentry/node/esm/cron/node-cron.js?e0bf","webpack:///../../node_modules/@sentry/node/esm/cron/node-schedule.js?f094","webpack:///../../node_modules/@sentry/node/esm/index.js?e5a1","webpack:///../../node_modules/@sentry/core/esm/sdk.js?1250","webpack:///../../node_modules/@sentry/node/esm/async/domain.js?0854","webpack:///../../node_modules/@sentry/node/esm/async/hooks.js?7280","webpack:///../../node_modules/@sentry/node/esm/async/index.js?8a22","webpack:///../../node_modules/@sentry/utils/esm/error.js?ded4","webpack:///../../node_modules/@sentry/core/esm/api.js?f7e4","webpack:///../../node_modules/@sentry/core/esm/envelope.js?5968","webpack:///../../node_modules/@sentry/core/esm/metrics/constants.js?1eb5","webpack:///../../node_modules/@sentry/core/esm/metrics/utils.js?5f5f","webpack:///../../node_modules/@sentry/core/esm/metrics/envelope.js?4d7f","webpack:///../../node_modules/@sentry/core/esm/baseclient.js?9b09","webpack:///../../node_modules/@sentry/core/esm/checkin.js?135e","webpack:///../../node_modules/@sentry/core/esm/metrics/instance.js?230b","webpack:///../../node_modules/@sentry/core/esm/metrics/aggregator.js?d0c8","webpack:///../../node_modules/@sentry/core/esm/sessionflusher.js?12a4","webpack:///../../node_modules/@sentry/core/esm/server-runtime-client.js?84d6","webpack:///../../node_modules/@sentry/node/esm/client.js?8164","webpack:///../../node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js?1844","webpack:///../../node_modules/@sentry/utils/esm/promisebuffer.js?b561","webpack:///../../node_modules/@sentry/utils/esm/ratelimit.js?05d8","webpack:///../../node_modules/@sentry/core/esm/transports/base.js?16b9","webpack:///../../node_modules/@sentry/node/esm/proxy/base.js?daf2","webpack:///../../node_modules/@sentry/node/esm/proxy/parse-proxy-response.js?e6cd","webpack:///../../node_modules/@sentry/node/esm/proxy/index.js?8929","webpack:///../../node_modules/@sentry/node/esm/transports/http.js?66e5","webpack:///../../node_modules/@sentry/node/esm/sdk.js?650a","webpack:///../../node_modules/@sentry/nextjs/esm/common/debug-build.js?16f6","webpack:///../../node_modules/@sentry/nextjs/esm/common/getVercelEnv.js?e874","webpack:///../../node_modules/next/dist/api/constants.js?0bb5","webpack:///../../node_modules/@sentry/nextjs/esm/common/utils/isBuild.js?b16c","webpack:///../../node_modules/@sentry/nextjs/esm/server/httpIntegration.js?601c","webpack:///../../node_modules/@sentry/nextjs/esm/server/onUncaughtExceptionIntegration.js?fafb","webpack:///../../node_modules/@sentry/integrations/esm/rewriteframes.js?a3b9","webpack:///../../node_modules/@sentry/utils/esm/vendor/escapeStringForRegex.js?c5da","webpack:///../../node_modules/@sentry/nextjs/esm/server/rewriteFramesIntegration.js?5c10","webpack:///../../node_modules/@sentry/nextjs/esm/server/index.js?1f38","webpack:///../../node_modules/@sentry/utils/esm/buildPolyfills/_optionalChainDelete.js?f8ed","webpack:///../../node_modules/@sentry/node/esm/integrations/anr/worker-script.js?e670","webpack:///../../node_modules/@sentry/node/esm/integrations/anr/index.js?848f","webpack:///../../node_modules/@sentry/node/esm/nodeVersion.js?9b29","webpack:///../../node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js?b3a2","webpack:///../../node_modules/@sentry/utils/esm/node.js?bf90","webpack:///../../node_modules/next/dist/shared/lib/constants.js","webpack:///../../node_modules/next/dist/shared/lib/modern-browserslist-target.js","webpack:///<anon>"],"sourcesContent":["import { arrayify, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { addGlobalEventProcessor } from './eventProcessors.js';\nimport { getClient } from './exports.js';\nimport { getCurrentHub } from './hub.js';\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(client, integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nfunction afterSetupIntegrations(client, integrations) {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(client, integration, integrationIndex) {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    // eslint-disable-next-line deprecation/deprecation\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (client.on && typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) ;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (client.addEventProcessor && typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) ;\n\n    const processor = Object.assign((event, hint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current hub's client. */\nfunction addIntegration(integration) {\n  const client = getClient();\n\n  if (!client || !client.addIntegration) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex(arr, callback) {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Convert a new integration function to the legacy class syntax.\n * In v8, we can remove this and instead export the integration functions directly.\n *\n * @deprecated This will be removed in v8!\n */\nfunction convertIntegrationFnToClass(\n  name,\n  fn,\n) {\n  return Object.assign(\n    function ConvertedIntegration(...args) {\n      return fn(...args);\n    },\n    { id: name },\n  ) ;\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nfunction defineIntegration(fn) {\n  return fn;\n}\n\nexport { addIntegration, afterSetupIntegrations, convertIntegrationFnToClass, defineIntegration, getIntegrationsToSetup, installedIntegrations, setupIntegration, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../logger.js';\nimport { getFunctionName } from '../stacktrace.js';\n\n// We keep the handlers globally\nconst handlers = {};\nconst instrumented = {};\n\n/** Add a handler function. */\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nfunction maybeInstrument(type, instrumentFn) {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nexport { addHandler, maybeInstrument, resetInstrumentationHandlers, triggerHandlers };\n//# sourceMappingURL=_handlers.js.map\n","import { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\nlet _oldOnErrorHandler = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalErrorInstrumentationHandler(handler) {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError() {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  GLOBAL_OBJ.onerror = function (\n    msg,\n    url,\n    line,\n    column,\n    error,\n  ) {\n    const handlerData = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalErrorInstrumentationHandler };\n//# sourceMappingURL=globalError.js.map\n","import { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\nlet _oldOnUnhandledRejectionHandler = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalUnhandledRejectionInstrumentationHandler(\n  handler,\n) {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  GLOBAL_OBJ.onunhandledrejection = function (e) {\n    const handlerData = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalUnhandledRejectionInstrumentationHandler };\n//# sourceMappingURL=globalUnhandledRejection.js.map\n","import { extractTraceparentData as extractTraceparentData$1 } from '@sentry/utils';\nexport { stripUrlQueryAndFragment } from '@sentry/utils';\nimport { getCurrentHub } from '../hub.js';\n\n/**\n * Grabs active transaction off scope.\n *\n * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n */\nfunction getActiveTransaction(maybeHub) {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = maybeHub || getCurrentHub();\n  // eslint-disable-next-line deprecation/deprecation\n  const scope = hub.getScope();\n  // eslint-disable-next-line deprecation/deprecation\n  return scope.getTransaction() ;\n}\n\n/**\n * The `extractTraceparentData` function and `TRACEPARENT_REGEXP` constant used\n * to be declared in this file. It was later moved into `@sentry/utils` as part of a\n * move to remove `@sentry/tracing` dependencies from `@sentry/node` (`extractTraceparentData`\n * is the only tracing function used by `@sentry/node`).\n *\n * These exports are kept here for backwards compatability's sake.\n *\n * See https://github.com/getsentry/sentry-javascript/issues/4642 for more details.\n *\n * @deprecated Import this function from `@sentry/utils` instead\n */\nconst extractTraceparentData = extractTraceparentData$1;\n\nexport { extractTraceparentData, getActiveTransaction };\n//# sourceMappingURL=utils.js.map\n","import { addGlobalErrorInstrumentationHandler, addGlobalUnhandledRejectionInstrumentationHandler, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getActiveTransaction } from './utils.js';\n\nlet errorsInstrumented = false;\n\n/**\n * Configures global error listeners\n */\nfunction registerErrorInstrumentation() {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  errorsInstrumented = true;\n  addGlobalErrorInstrumentationHandler(errorCallback);\n  addGlobalUnhandledRejectionInstrumentationHandler(errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n  // eslint-disable-next-line deprecation/deprecation\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    const status = 'internal_error';\n    DEBUG_BUILD && logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\n// The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n// node.js default exit behaviour\nerrorCallback.tag = 'sentry_tracingErrorCallback';\n\nexport { registerErrorInstrumentation };\n//# sourceMappingURL=errors.js.map\n","/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Use this attribute to represent the sample rate used for a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/**\n * The id of the profile that this span occured in.\n */\nconst SEMANTIC_ATTRIBUTE_PROFILE_ID = 'profile_id';\n\nexport { SEMANTIC_ATTRIBUTE_PROFILE_ID, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE };\n//# sourceMappingURL=semanticAttributes.js.map\n","import { getClient } from '../exports.js';\n\n// Treeshakable guard to remove all code related to tracing\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(\n  maybeOptions,\n) {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const client = getClient();\n  const options = maybeOptions || (client && client.getOptions());\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n\nexport { hasTracingEnabled };\n//# sourceMappingURL=hasTracingEnabled.js.map\n","import { isNaN, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE } from '../semanticAttributes.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\nimport { spanToJSON } from '../utils/spanUtils.js';\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * This method muttes the given `transaction` and will set the `sampled` value on it.\n * It returns the same transaction, for convenience.\n */\nfunction sampleTransaction(\n  transaction,\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  // eslint-disable-next-line deprecation/deprecation\n  if (transaction.sampled !== undefined) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(transaction.sampled));\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(sampleRate));\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(sampleRate));\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, sampleRate);\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    DEBUG_BUILD && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  // eslint-disable-next-line deprecation/deprecation\n  transaction.sampled = Math.random() < (sampleRate );\n\n  // if we're not going to keep it, we're done\n  // eslint-disable-next-line deprecation/deprecation\n  if (!transaction.sampled) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  DEBUG_BUILD &&\n    // eslint-disable-next-line deprecation/deprecation\n    logger.log(`[Tracing] starting ${transaction.op} transaction - ${spanToJSON(transaction).description}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    DEBUG_BUILD &&\n      logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\nexport { isValidSampleRate, sampleTransaction };\n//# sourceMappingURL=sampling.js.map\n","import { isThenable } from '@sentry/utils';\n\n/**\n * Wrap a callback function with error handling.\n * If an error is thrown, it will be passed to the `onError` callback and re-thrown.\n *\n * If the return value of the function is a promise, it will be handled with `maybeHandlePromiseRejection`.\n *\n * If an `onFinally` callback is provided, this will be called when the callback has finished\n * - so if it returns a promise, once the promise resolved/rejected,\n * else once the callback has finished executing.\n * The `onFinally` callback will _always_ be called, no matter if an error was thrown or not.\n */\nfunction handleCallbackErrors\n\n(\n  fn,\n  onError,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onFinally = () => {},\n) {\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = fn();\n  } catch (e) {\n    onError(e);\n    onFinally();\n    throw e;\n  }\n\n  return maybeHandlePromiseRejection(maybePromiseResult, onError, onFinally);\n}\n\n/**\n * Maybe handle a promise rejection.\n * This expects to be given a value that _may_ be a promise, or any other value.\n * If it is a promise, and it rejects, it will call the `onError` callback.\n * Other than this, it will generally return the given value as-is.\n */\nfunction maybeHandlePromiseRejection(\n  value,\n  onError,\n  onFinally,\n) {\n  if (isThenable(value)) {\n    // @ts-expect-error - the isThenable check returns the \"wrong\" type here\n    return value.then(\n      res => {\n        onFinally();\n        return res;\n      },\n      e => {\n        onError(e);\n        onFinally();\n        throw e;\n      },\n    );\n  }\n\n  onFinally();\n  return value;\n}\n\nexport { handleCallbackErrors };\n//# sourceMappingURL=handleCallbackErrors.js.map\n","import { tracingContextFromHeaders, logger, dropUndefinedKeys, addNonEnumerableProperty } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getCurrentHub, runWithAsyncContext, getIsolationScope } from '../hub.js';\nimport { spanToJSON, spanIsSampled, spanTimeInputToSeconds } from '../utils/spanUtils.js';\nimport './errors.js';\nimport './spanstatus.js';\nimport { getDynamicSamplingContextFromSpan } from './dynamicSamplingContext.js';\nimport { getCurrentScope, withScope } from '../exports.js';\nimport { handleCallbackErrors } from '../utils/handleCallbackErrors.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n *\n * This function is meant to be used internally and may break at any time. Use at your own risk.\n *\n * @internal\n * @private\n *\n * @deprecated Use `startSpan` instead.\n */\nfunction trace(\n  context,\n  callback,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onError = () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  afterFinish = () => {},\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n  const scope = getCurrentScope();\n  // eslint-disable-next-line deprecation/deprecation\n  const parentSpan = scope.getSpan();\n\n  const spanContext = normalizeContext(context);\n  const activeSpan = createChildSpanOrTransaction(hub, {\n    parentSpan,\n    spanContext,\n    forceTransaction: false,\n    scope,\n  });\n\n  // eslint-disable-next-line deprecation/deprecation\n  scope.setSpan(activeSpan);\n\n  return handleCallbackErrors(\n    () => callback(activeSpan),\n    error => {\n      activeSpan && activeSpan.setStatus('internal_error');\n      onError(error, activeSpan);\n    },\n    () => {\n      activeSpan && activeSpan.end();\n      // eslint-disable-next-line deprecation/deprecation\n      scope.setSpan(parentSpan);\n      afterFinish();\n    },\n  );\n}\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getSpan()`, as long as the function is executed while the scope is active.\n *\n * If you want to create a span that is not set as active, use {@link startInactiveSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nfunction startSpan(context, callback) {\n  const spanContext = normalizeContext(context);\n\n  return runWithAsyncContext(() => {\n    return withScope(context.scope, scope => {\n      // eslint-disable-next-line deprecation/deprecation\n      const hub = getCurrentHub();\n      // eslint-disable-next-line deprecation/deprecation\n      const parentSpan = scope.getSpan();\n\n      const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? undefined\n        : createChildSpanOrTransaction(hub, {\n            parentSpan,\n            spanContext,\n            forceTransaction: context.forceTransaction,\n            scope,\n          });\n\n      return handleCallbackErrors(\n        () => callback(activeSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet\n          if (activeSpan) {\n            const { status } = spanToJSON(activeSpan);\n            if (!status || status === 'ok') {\n              activeSpan.setStatus('internal_error');\n            }\n          }\n        },\n        () => activeSpan && activeSpan.end(),\n      );\n    });\n  });\n}\n\n/**\n * @deprecated Use {@link startSpan} instead.\n */\nconst startActiveSpan = startSpan;\n\n/**\n * Similar to `Sentry.startSpan`. Wraps a function with a transaction/span, but does not finish the span\n * after the function is done automatically. You'll have to call `span.end()` manually.\n *\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nfunction startSpanManual(\n  context,\n  callback,\n) {\n  const spanContext = normalizeContext(context);\n\n  return runWithAsyncContext(() => {\n    return withScope(context.scope, scope => {\n      // eslint-disable-next-line deprecation/deprecation\n      const hub = getCurrentHub();\n      // eslint-disable-next-line deprecation/deprecation\n      const parentSpan = scope.getSpan();\n\n      const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? undefined\n        : createChildSpanOrTransaction(hub, {\n            parentSpan,\n            spanContext,\n            forceTransaction: context.forceTransaction,\n            scope,\n          });\n\n      function finishAndSetSpan() {\n        activeSpan && activeSpan.end();\n      }\n\n      return handleCallbackErrors(\n        () => callback(activeSpan, finishAndSetSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n          if (activeSpan && activeSpan.isRecording()) {\n            const { status } = spanToJSON(activeSpan);\n            if (!status || status === 'ok') {\n              activeSpan.setStatus('internal_error');\n            }\n          }\n        },\n      );\n    });\n  });\n}\n\n/**\n * Creates a span. This span is not set as active, so will not get automatic instrumentation spans\n * as children or be able to be accessed via `Sentry.getSpan()`.\n *\n * If you want to create a span that is set as active, use {@link startSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate` or `tracesSampler`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nfunction startInactiveSpan(context) {\n  if (!hasTracingEnabled()) {\n    return undefined;\n  }\n\n  const spanContext = normalizeContext(context);\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n  const parentSpan = context.scope\n    ? // eslint-disable-next-line deprecation/deprecation\n      context.scope.getSpan()\n    : getActiveSpan();\n\n  const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n\n  if (shouldSkipSpan) {\n    return undefined;\n  }\n\n  const scope = context.scope || getCurrentScope();\n\n  // Even though we don't actually want to make this span active on the current scope,\n  // we need to make it active on a temporary scope that we use for event processing\n  // as otherwise, it won't pick the correct span for the event when processing it\n  const temporaryScope = (scope ).clone();\n\n  return createChildSpanOrTransaction(hub, {\n    parentSpan,\n    spanContext,\n    forceTransaction: context.forceTransaction,\n    scope: temporaryScope,\n  });\n}\n\n/**\n * Returns the currently active span.\n */\nfunction getActiveSpan() {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentScope().getSpan();\n}\n\nconst continueTrace = (\n  {\n    sentryTrace,\n    baggage,\n  }\n\n,\n  callback,\n) => {\n  // TODO(v8): Change this function so it doesn't do anything besides setting the propagation context on the current scope:\n  /*\n    return withScope((scope) => {\n      const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n      scope.setPropagationContext(propagationContext);\n      return callback();\n    })\n  */\n\n  const currentScope = getCurrentScope();\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { traceparentData, dynamicSamplingContext, propagationContext } = tracingContextFromHeaders(\n    sentryTrace,\n    baggage,\n  );\n\n  currentScope.setPropagationContext(propagationContext);\n\n  if (DEBUG_BUILD && traceparentData) {\n    logger.log(`[Tracing] Continuing trace ${traceparentData.traceId}.`);\n  }\n\n  const transactionContext = {\n    ...traceparentData,\n    metadata: dropUndefinedKeys({\n      dynamicSamplingContext,\n    }),\n  };\n\n  if (!callback) {\n    return transactionContext;\n  }\n\n  return runWithAsyncContext(() => {\n    return callback(transactionContext);\n  });\n};\n\nfunction createChildSpanOrTransaction(\n  hub,\n  {\n    parentSpan,\n    spanContext,\n    forceTransaction,\n    scope,\n  }\n\n,\n) {\n  if (!hasTracingEnabled()) {\n    return undefined;\n  }\n\n  const isolationScope = getIsolationScope();\n\n  let span;\n  if (parentSpan && !forceTransaction) {\n    // eslint-disable-next-line deprecation/deprecation\n    span = parentSpan.startChild(spanContext);\n  } else if (parentSpan) {\n    // If we forced a transaction but have a parent span, make sure to continue from the parent span, not the scope\n    const dsc = getDynamicSamplingContextFromSpan(parentSpan);\n    const { traceId, spanId: parentSpanId } = parentSpan.spanContext();\n    const sampled = spanIsSampled(parentSpan);\n\n    // eslint-disable-next-line deprecation/deprecation\n    span = hub.startTransaction({\n      traceId,\n      parentSpanId,\n      parentSampled: sampled,\n      ...spanContext,\n      metadata: {\n        dynamicSamplingContext: dsc,\n        // eslint-disable-next-line deprecation/deprecation\n        ...spanContext.metadata,\n      },\n    });\n  } else {\n    const { traceId, dsc, parentSpanId, sampled } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    // eslint-disable-next-line deprecation/deprecation\n    span = hub.startTransaction({\n      traceId,\n      parentSpanId,\n      parentSampled: sampled,\n      ...spanContext,\n      metadata: {\n        dynamicSamplingContext: dsc,\n        // eslint-disable-next-line deprecation/deprecation\n        ...spanContext.metadata,\n      },\n    });\n  }\n\n  // We always set this as active span on the scope\n  // In the case of this being an inactive span, we ensure to pass a detached scope in here in the first place\n  // But by having this here, we can ensure that the lookup through `getCapturedScopesOnSpan` results in the correct scope & span combo\n  // eslint-disable-next-line deprecation/deprecation\n  scope.setSpan(span);\n\n  setCapturedScopesOnSpan(span, scope, isolationScope);\n\n  return span;\n}\n\n/**\n * This converts StartSpanOptions to TransactionContext.\n * For the most part (for now) we accept the same options,\n * but some of them need to be transformed.\n *\n * Eventually the StartSpanOptions will be more aligned with OpenTelemetry.\n */\nfunction normalizeContext(context) {\n  if (context.startTime) {\n    const ctx = { ...context };\n    ctx.startTimestamp = spanTimeInputToSeconds(context.startTime);\n    delete ctx.startTime;\n    return ctx;\n  }\n\n  return context;\n}\n\nconst SCOPE_ON_START_SPAN_FIELD = '_sentryScope';\nconst ISOLATION_SCOPE_ON_START_SPAN_FIELD = '_sentryIsolationScope';\n\nfunction setCapturedScopesOnSpan(span, scope, isolationScope) {\n  if (span) {\n    addNonEnumerableProperty(span, ISOLATION_SCOPE_ON_START_SPAN_FIELD, isolationScope);\n    addNonEnumerableProperty(span, SCOPE_ON_START_SPAN_FIELD, scope);\n  }\n}\n\n/**\n * Grabs the scope and isolation scope off a span that were active when the span was started.\n */\nfunction getCapturedScopesOnSpan(span) {\n  return {\n    scope: (span )[SCOPE_ON_START_SPAN_FIELD],\n    isolationScope: (span )[ISOLATION_SCOPE_ON_START_SPAN_FIELD],\n  };\n}\n\nexport { continueTrace, getActiveSpan, getCapturedScopesOnSpan, startActiveSpan, startInactiveSpan, startSpan, startSpanManual, trace };\n//# sourceMappingURL=trace.js.map\n","import { dropUndefinedKeys } from '@sentry/utils';\nimport '../debug-build.js';\nimport '../tracing/errors.js';\nimport '../tracing/spanstatus.js';\nimport { getActiveSpan } from '../tracing/trace.js';\n\n/**\n * key: bucketKey\n * value: [exportKey, MetricSummary]\n */\n\nlet SPAN_METRIC_SUMMARY;\n\nfunction getMetricStorageForSpan(span) {\n  return SPAN_METRIC_SUMMARY ? SPAN_METRIC_SUMMARY.get(span) : undefined;\n}\n\n/**\n * Fetches the metric summary if it exists for the passed span\n */\nfunction getMetricSummaryJsonForSpan(span) {\n  const storage = getMetricStorageForSpan(span);\n\n  if (!storage) {\n    return undefined;\n  }\n  const output = {};\n\n  for (const [, [exportKey, summary]] of storage) {\n    if (!output[exportKey]) {\n      output[exportKey] = [];\n    }\n\n    output[exportKey].push(dropUndefinedKeys(summary));\n  }\n\n  return output;\n}\n\n/**\n * Updates the metric summary on the currently active span\n */\nfunction updateMetricSummaryOnActiveSpan(\n  metricType,\n  sanitizedName,\n  value,\n  unit,\n  tags,\n  bucketKey,\n) {\n  const span = getActiveSpan();\n  if (span) {\n    const storage = getMetricStorageForSpan(span) || new Map();\n\n    const exportKey = `${metricType}:${sanitizedName}@${unit}`;\n    const bucketItem = storage.get(bucketKey);\n\n    if (bucketItem) {\n      const [, summary] = bucketItem;\n      storage.set(bucketKey, [\n        exportKey,\n        {\n          min: Math.min(summary.min, value),\n          max: Math.max(summary.max, value),\n          count: (summary.count += 1),\n          sum: (summary.sum += value),\n          tags: summary.tags,\n        },\n      ]);\n    } else {\n      storage.set(bucketKey, [\n        exportKey,\n        {\n          min: value,\n          max: value,\n          count: 1,\n          sum: value,\n          tags,\n        },\n      ]);\n    }\n\n    if (!SPAN_METRIC_SUMMARY) {\n      SPAN_METRIC_SUMMARY = new WeakMap();\n    }\n\n    SPAN_METRIC_SUMMARY.set(span, storage);\n  }\n}\n\nexport { getMetricSummaryJsonForSpan, updateMetricSummaryOnActiveSpan };\n//# sourceMappingURL=metric-summary.js.map\n","/** The status of an Span.\n *\n * @deprecated Use string literals - if you require type casting, cast to SpanStatusType type\n */\nvar SpanStatus; (function (SpanStatus) {\n  /** The operation completed successfully. */\n  const Ok = 'ok'; SpanStatus[\"Ok\"] = Ok;\n  /** Deadline expired before operation could complete. */\n  const DeadlineExceeded = 'deadline_exceeded'; SpanStatus[\"DeadlineExceeded\"] = DeadlineExceeded;\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  const Unauthenticated = 'unauthenticated'; SpanStatus[\"Unauthenticated\"] = Unauthenticated;\n  /** 403 Forbidden */\n  const PermissionDenied = 'permission_denied'; SpanStatus[\"PermissionDenied\"] = PermissionDenied;\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  const NotFound = 'not_found'; SpanStatus[\"NotFound\"] = NotFound;\n  /** 429 Too Many Requests */\n  const ResourceExhausted = 'resource_exhausted'; SpanStatus[\"ResourceExhausted\"] = ResourceExhausted;\n  /** Client specified an invalid argument. 4xx. */\n  const InvalidArgument = 'invalid_argument'; SpanStatus[\"InvalidArgument\"] = InvalidArgument;\n  /** 501 Not Implemented */\n  const Unimplemented = 'unimplemented'; SpanStatus[\"Unimplemented\"] = Unimplemented;\n  /** 503 Service Unavailable */\n  const Unavailable = 'unavailable'; SpanStatus[\"Unavailable\"] = Unavailable;\n  /** Other/generic 5xx. */\n  const InternalError = 'internal_error'; SpanStatus[\"InternalError\"] = InternalError;\n  /** Unknown. Any non-standard HTTP status code. */\n  const UnknownError = 'unknown_error'; SpanStatus[\"UnknownError\"] = UnknownError;\n  /** The operation was cancelled (typically by the user). */\n  const Cancelled = 'cancelled'; SpanStatus[\"Cancelled\"] = Cancelled;\n  /** Already exists (409) */\n  const AlreadyExists = 'already_exists'; SpanStatus[\"AlreadyExists\"] = AlreadyExists;\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  const FailedPrecondition = 'failed_precondition'; SpanStatus[\"FailedPrecondition\"] = FailedPrecondition;\n  /** The operation was aborted, typically due to a concurrency issue. */\n  const Aborted = 'aborted'; SpanStatus[\"Aborted\"] = Aborted;\n  /** Operation was attempted past the valid range. */\n  const OutOfRange = 'out_of_range'; SpanStatus[\"OutOfRange\"] = OutOfRange;\n  /** Unrecoverable data loss or corruption */\n  const DataLoss = 'data_loss'; SpanStatus[\"DataLoss\"] = DataLoss;\n})(SpanStatus || (SpanStatus = {}));\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nfunction getSpanStatusFromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @deprecated Use {@link spanStatusFromHttpCode} instead.\n * This export will be removed in v8 as the signature contains a typo.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nconst spanStatusfromHttpCode = getSpanStatusFromHttpCode;\n\n/**\n * Sets the Http status attributes on the current span based on the http code.\n * Additionally, the span's status is updated, depending on the http code.\n */\nfunction setHttpStatus(span, httpStatus) {\n  // TODO (v8): Remove these calls\n  // Relay does not require us to send the status code as a tag\n  // For now, just because users might expect it to land as a tag we keep sending it.\n  // Same with data.\n  // In v8, we replace both, simply with\n  // span.setAttribute('http.response.status_code', httpStatus);\n\n  // eslint-disable-next-line deprecation/deprecation\n  span.setTag('http.status_code', String(httpStatus));\n  // eslint-disable-next-line deprecation/deprecation\n  span.setData('http.response.status_code', httpStatus);\n\n  const spanStatus = getSpanStatusFromHttpCode(httpStatus);\n  if (spanStatus !== 'unknown_error') {\n    span.setStatus(spanStatus);\n  }\n}\n\nexport { SpanStatus, getSpanStatusFromHttpCode, setHttpStatus, spanStatusfromHttpCode };\n//# sourceMappingURL=spanstatus.js.map\n","import { uuid4, timestampInSeconds, logger, dropUndefinedKeys } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getMetricSummaryJsonForSpan } from '../metrics/metric-summary.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_PROFILE_ID } from '../semanticAttributes.js';\nimport { getRootSpan } from '../utils/getRootSpan.js';\nimport { TRACE_FLAG_SAMPLED, TRACE_FLAG_NONE, spanToJSON, spanTimeInputToSeconds, spanToTraceHeader, spanToTraceContext } from '../utils/spanUtils.js';\nimport { setHttpStatus } from './spanstatus.js';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nclass SpanRecorder {\n\n   constructor(maxlen = 1000) {\n    this._maxlen = maxlen;\n    this.spans = [];\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n   add(span) {\n    if (this.spans.length > this._maxlen) {\n      // eslint-disable-next-line deprecation/deprecation\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nclass Span  {\n  /**\n   * Tags for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n\n  /**\n   * Data for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  /**\n   * List of spans that were finalized\n   *\n   * @deprecated This property will no longer be public. Span recording will be handled internally.\n   */\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `Sentry.getRootSpan()` instead\n   */\n\n  /**\n   * The instrumenter that created this span.\n   *\n   * TODO (v8): This can probably be replaced by an `instanceOf` check of the span class.\n   *            the instrumenter can only be sentry or otel so we can check the span instance\n   *            to verify which one it is and remove this field entirely.\n   *\n   * @deprecated This field will be removed.\n   */\n\n  /** Epoch timestamp in seconds when the span started. */\n\n  /** Epoch timestamp in seconds when the span ended. */\n\n  /** Internal keeper of the status */\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext = {}) {\n    this._traceId = spanContext.traceId || uuid4();\n    this._spanId = spanContext.spanId || uuid4().substring(16);\n    this._startTime = spanContext.startTimestamp || timestampInSeconds();\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = spanContext.tags ? { ...spanContext.tags } : {};\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = spanContext.data ? { ...spanContext.data } : {};\n    // eslint-disable-next-line deprecation/deprecation\n    this.instrumenter = spanContext.instrumenter || 'sentry';\n\n    this._attributes = {};\n    this.setAttributes({\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanContext.origin || 'manual',\n      [SEMANTIC_ATTRIBUTE_SENTRY_OP]: spanContext.op,\n      ...spanContext.attributes,\n    });\n\n    // eslint-disable-next-line deprecation/deprecation\n    this._name = spanContext.name || spanContext.description;\n\n    if (spanContext.parentSpanId) {\n      this._parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this._sampled = spanContext.sampled;\n    }\n    if (spanContext.status) {\n      this._status = spanContext.status;\n    }\n    if (spanContext.endTimestamp) {\n      this._endTime = spanContext.endTimestamp;\n    }\n    if (spanContext.exclusiveTime) {\n      this._exclusiveTime = spanContext.exclusiveTime;\n    }\n    this._measurements = spanContext.measurements ? { ...spanContext.measurements } : {};\n  }\n\n  // This rule conflicts with another eslint rule :(\n  /* eslint-disable @typescript-eslint/member-ordering */\n\n  /**\n   * An alias for `description` of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n   get name() {\n    return this._name || '';\n  }\n\n  /**\n   * Update the name of the span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n   set name(name) {\n    this.updateName(name);\n  }\n\n  /**\n   * Get the description of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n   get description() {\n    return this._name;\n  }\n\n  /**\n   * Get the description of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n   set description(description) {\n    this._name = description;\n  }\n\n  /**\n   * The ID of the trace.\n   * @deprecated Use `spanContext().traceId` instead.\n   */\n   get traceId() {\n    return this._traceId;\n  }\n\n  /**\n   * The ID of the trace.\n   * @deprecated You cannot update the traceId of a span after span creation.\n   */\n   set traceId(traceId) {\n    this._traceId = traceId;\n  }\n\n  /**\n   * The ID of the span.\n   * @deprecated Use `spanContext().spanId` instead.\n   */\n   get spanId() {\n    return this._spanId;\n  }\n\n  /**\n   * The ID of the span.\n   * @deprecated You cannot update the spanId of a span after span creation.\n   */\n   set spanId(spanId) {\n    this._spanId = spanId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `startSpan` functions instead.\n   */\n   set parentSpanId(string) {\n    this._parentSpanId = string;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON(span).parent_span_id` instead.\n   */\n   get parentSpanId() {\n    return this._parentSpanId;\n  }\n\n  /**\n   * Was this span chosen to be sent as part of the sample?\n   * @deprecated Use `isRecording()` instead.\n   */\n   get sampled() {\n    return this._sampled;\n  }\n\n  /**\n   * Was this span chosen to be sent as part of the sample?\n   * @deprecated You cannot update the sampling decision of a span after span creation.\n   */\n   set sampled(sampled) {\n    this._sampled = sampled;\n  }\n\n  /**\n   * Attributes for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n   get attributes() {\n    return this._attributes;\n  }\n\n  /**\n   * Attributes for the span.\n   * @deprecated Use `setAttributes()` instead.\n   */\n   set attributes(attributes) {\n    this._attributes = attributes;\n  }\n\n  /**\n   * Timestamp in seconds (epoch time) indicating when the span started.\n   * @deprecated Use `spanToJSON()` instead.\n   */\n   get startTimestamp() {\n    return this._startTime;\n  }\n\n  /**\n   * Timestamp in seconds (epoch time) indicating when the span started.\n   * @deprecated In v8, you will not be able to update the span start time after creation.\n   */\n   set startTimestamp(startTime) {\n    this._startTime = startTime;\n  }\n\n  /**\n   * Timestamp in seconds when the span ended.\n   * @deprecated Use `spanToJSON()` instead.\n   */\n   get endTimestamp() {\n    return this._endTime;\n  }\n\n  /**\n   * Timestamp in seconds when the span ended.\n   * @deprecated Set the end time via `span.end()` instead.\n   */\n   set endTimestamp(endTime) {\n    this._endTime = endTime;\n  }\n\n  /**\n   * The status of the span.\n   *\n   * @deprecated Use `spanToJSON().status` instead to get the status.\n   */\n   get status() {\n    return this._status;\n  }\n\n  /**\n   * The status of the span.\n   *\n   * @deprecated Use `.setStatus()` instead to set or update the status.\n   */\n   set status(status) {\n    this._status = status;\n  }\n\n  /**\n   * Operation of the span\n   *\n   * @deprecated Use `spanToJSON().op` to read the op instead.\n   */\n   get op() {\n    return this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] ;\n  }\n\n  /**\n   * Operation of the span\n   *\n   * @deprecated Use `startSpan()` functions to set or `span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_OP, 'op')\n   *             to update the span instead.\n   */\n   set op(op) {\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_OP, op);\n  }\n\n  /**\n   * The origin of the span, giving context about what created the span.\n   *\n   * @deprecated Use `spanToJSON().origin` to read the origin instead.\n   */\n   get origin() {\n    return this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] ;\n  }\n\n  /**\n   * The origin of the span, giving context about what created the span.\n   *\n   * @deprecated Use `startSpan()` functions to set the origin instead.\n   */\n   set origin(origin) {\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, origin);\n  }\n\n  /* eslint-enable @typescript-eslint/member-ordering */\n\n  /** @inheritdoc */\n   spanContext() {\n    const { _spanId: spanId, _traceId: traceId, _sampled: sampled } = this;\n    return {\n      spanId,\n      traceId,\n      traceFlags: sampled ? TRACE_FLAG_SAMPLED : TRACE_FLAG_NONE,\n    };\n  }\n\n  /**\n   * Creates a new `Span` while setting the current `Span.id` as `parentSpanId`.\n   * Also the `sampled` decision will be inherited.\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n   startChild(\n    spanContext,\n  ) {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this._spanId,\n      sampled: this._sampled,\n      traceId: this._traceId,\n    });\n\n    // eslint-disable-next-line deprecation/deprecation\n    childSpan.spanRecorder = this.spanRecorder;\n    // eslint-disable-next-line deprecation/deprecation\n    if (childSpan.spanRecorder) {\n      // eslint-disable-next-line deprecation/deprecation\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    const rootSpan = getRootSpan(this);\n    // TODO: still set span.transaction here until we have a more permanent solution\n    // Probably similarly to the weakmap we hold in node-experimental\n    // eslint-disable-next-line deprecation/deprecation\n    childSpan.transaction = rootSpan ;\n\n    if (DEBUG_BUILD && rootSpan) {\n      const opStr = (spanContext && spanContext.op) || '< unknown op >';\n      const nameStr = spanToJSON(childSpan).description || '< unknown name >';\n      const idStr = rootSpan.spanContext().spanId;\n\n      const logMessage = `[Tracing] Starting '${opStr}' span on transaction '${nameStr}' (${idStr}).`;\n      logger.log(logMessage);\n      this._logMessage = logMessage;\n    }\n\n    return childSpan;\n  }\n\n  /**\n   * Sets the tag attribute on the current span.\n   *\n   * Can also be used to unset a tag, by passing `undefined`.\n   *\n   * @param key Tag key\n   * @param value Tag value\n   * @deprecated Use `setAttribute()` instead.\n   */\n   setTag(key, value) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * Sets the data attribute on the current span\n   * @param key Data key\n   * @param value Data value\n   * @deprecated Use `setAttribute()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setData(key, value) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /** @inheritdoc */\n   setAttribute(key, value) {\n    if (value === undefined) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._attributes[key];\n    } else {\n      this._attributes[key] = value;\n    }\n  }\n\n  /** @inheritdoc */\n   setAttributes(attributes) {\n    Object.keys(attributes).forEach(key => this.setAttribute(key, attributes[key]));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this._status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top-level `setHttpStatus()` instead.\n   */\n   setHttpStatus(httpStatus) {\n    setHttpStatus(this, httpStatus);\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @deprecated Use `.updateName()` instead.\n   */\n   setName(name) {\n    this.updateName(name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateName(name) {\n    this._name = name;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON(span).status === 'ok'` instead.\n   */\n   isSuccess() {\n    return this._status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `.end()` instead.\n   */\n   finish(endTimestamp) {\n    return this.end(endTimestamp);\n  }\n\n  /** @inheritdoc */\n   end(endTimestamp) {\n    // If already ended, skip\n    if (this._endTime) {\n      return;\n    }\n    const rootSpan = getRootSpan(this);\n    if (\n      DEBUG_BUILD &&\n      // Don't call this for transactions\n      rootSpan &&\n      rootSpan.spanContext().spanId !== this._spanId\n    ) {\n      const logMessage = this._logMessage;\n      if (logMessage) {\n        logger.log((logMessage ).replace('Starting', 'Finishing'));\n      }\n    }\n\n    this._endTime = spanTimeInputToSeconds(endTimestamp);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n   toTraceparent() {\n    return spanToTraceHeader(this);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON()` or access the fields directly instead.\n   */\n   toContext() {\n    return dropUndefinedKeys({\n      data: this._getData(),\n      description: this._name,\n      endTimestamp: this._endTime,\n      // eslint-disable-next-line deprecation/deprecation\n      op: this.op,\n      parentSpanId: this._parentSpanId,\n      sampled: this._sampled,\n      spanId: this._spanId,\n      startTimestamp: this._startTime,\n      status: this._status,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: this.tags,\n      traceId: this._traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Update the fields directly instead.\n   */\n   updateWithContext(spanContext) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = spanContext.data || {};\n    // eslint-disable-next-line deprecation/deprecation\n    this._name = spanContext.name || spanContext.description;\n    this._endTime = spanContext.endTimestamp;\n    // eslint-disable-next-line deprecation/deprecation\n    this.op = spanContext.op;\n    this._parentSpanId = spanContext.parentSpanId;\n    this._sampled = spanContext.sampled;\n    this._spanId = spanContext.spanId || this._spanId;\n    this._startTime = spanContext.startTimestamp || this._startTime;\n    this._status = spanContext.status;\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = spanContext.tags || {};\n    this._traceId = spanContext.traceId || this._traceId;\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToTraceContext()` util function instead.\n   */\n   getTraceContext() {\n    return spanToTraceContext(this);\n  }\n\n  /**\n   * Get JSON representation of this span.\n   *\n   * @hidden\n   * @internal This method is purely for internal purposes and should not be used outside\n   * of SDK code. If you need to get a JSON representation of a span,\n   * use `spanToJSON(span)` instead.\n   */\n   getSpanJSON() {\n    return dropUndefinedKeys({\n      data: this._getData(),\n      description: this._name,\n      op: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] ,\n      parent_span_id: this._parentSpanId,\n      span_id: this._spanId,\n      start_timestamp: this._startTime,\n      status: this._status,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this._endTime,\n      trace_id: this._traceId,\n      origin: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] ,\n      _metrics_summary: getMetricSummaryJsonForSpan(this),\n      profile_id: this._attributes[SEMANTIC_ATTRIBUTE_PROFILE_ID] ,\n      exclusive_time: this._exclusiveTime,\n      measurements: Object.keys(this._measurements).length > 0 ? this._measurements : undefined,\n    });\n  }\n\n  /** @inheritdoc */\n   isRecording() {\n    return !this._endTime && !!this._sampled;\n  }\n\n  /**\n   * Convert the object to JSON.\n   * @deprecated Use `spanToJSON(span)` instead.\n   */\n   toJSON() {\n    return this.getSpanJSON();\n  }\n\n  /**\n   * Get the merged data for this span.\n   * For now, this combines `data` and `attributes` together,\n   * until eventually we can ingest `attributes` directly.\n   */\n   _getData()\n\n {\n    // eslint-disable-next-line deprecation/deprecation\n    const { data, _attributes: attributes } = this;\n\n    const hasData = Object.keys(data).length > 0;\n    const hasAttributes = Object.keys(attributes).length > 0;\n\n    if (!hasData && !hasAttributes) {\n      return undefined;\n    }\n\n    if (hasData && hasAttributes) {\n      return {\n        ...data,\n        ...attributes,\n      };\n    }\n\n    return hasData ? data : attributes;\n  }\n}\n\nexport { Span, SpanRecorder };\n//# sourceMappingURL=span.js.map\n","import { dropUndefinedKeys, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getCurrentHub } from '../hub.js';\nimport { getMetricSummaryJsonForSpan } from '../metrics/metric-summary.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE } from '../semanticAttributes.js';\nimport { spanTimeInputToSeconds, spanToJSON, spanToTraceContext } from '../utils/spanUtils.js';\nimport { getDynamicSamplingContextFromSpan } from './dynamicSamplingContext.js';\nimport { Span, SpanRecorder } from './span.js';\nimport { getCapturedScopesOnSpan } from './trace.js';\n\n/** JSDoc */\nclass Transaction extends Span  {\n  /**\n   * The reference to the current hub.\n   */\n\n  // DO NOT yet remove this property, it is used in a hack for v7 backwards compatibility.\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   *\n   * @deprecated Transactions will be removed in v8. Use spans instead.\n   */\n   constructor(transactionContext, hub) {\n    super(transactionContext);\n    this._contexts = {};\n\n    // eslint-disable-next-line deprecation/deprecation\n    this._hub = hub || getCurrentHub();\n\n    this._name = transactionContext.name || '';\n\n    this._metadata = {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.metadata,\n    };\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    // TODO (v8): Replace this with another way to set the root span\n    // eslint-disable-next-line deprecation/deprecation\n    this.transaction = this;\n\n    // If Dynamic Sampling Context is provided during the creation of the transaction, we freeze it as it usually means\n    // there is incoming Dynamic Sampling Context. (Either through an incoming request, a baggage meta-tag, or other means)\n    const incomingDynamicSamplingContext = this._metadata.dynamicSamplingContext;\n    if (incomingDynamicSamplingContext) {\n      // We shallow copy this in case anything writes to the original reference of the passed in `dynamicSamplingContext`\n      this._frozenDynamicSamplingContext = { ...incomingDynamicSamplingContext };\n    }\n  }\n\n  // This sadly conflicts with the getter/setter ordering :(\n  /* eslint-disable @typescript-eslint/member-ordering */\n\n  /**\n   * Getter for `name` property.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n   get name() {\n    return this._name;\n  }\n\n  /**\n   * Setter for `name` property, which also sets `source` as custom.\n   * @deprecated Use `updateName()` and `setMetadata()` instead.\n   */\n   set name(newName) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.setName(newName);\n  }\n\n  /**\n   * Get the metadata for this transaction.\n   * @deprecated Use `spanGetMetadata(transaction)` instead.\n   */\n   get metadata() {\n    // We merge attributes in for backwards compatibility\n    return {\n      // Defaults\n      // eslint-disable-next-line deprecation/deprecation\n      source: 'custom',\n      spanMetadata: {},\n\n      // Legacy metadata\n      ...this._metadata,\n\n      // From attributes\n      ...(this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] && {\n        source: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] ,\n      }),\n      ...(this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] && {\n        sampleRate: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] ,\n      }),\n    };\n  }\n\n  /**\n   * Update the metadata for this transaction.\n   * @deprecated Use `spanGetMetadata(transaction)` instead.\n   */\n   set metadata(metadata) {\n    this._metadata = metadata;\n  }\n\n  /* eslint-enable @typescript-eslint/member-ordering */\n\n  /**\n   * Setter for `name` property, which also sets `source` on the metadata.\n   *\n   * @deprecated Use `.updateName()` and `.setAttribute()` instead.\n   */\n   setName(name, source = 'custom') {\n    this._name = name;\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, source);\n  }\n\n  /** @inheritdoc */\n   updateName(name) {\n    this._name = name;\n    return this;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n   initSpanRecorder(maxlen = 1000) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!this.spanRecorder) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder = new SpanRecorder(maxlen);\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Set the context of a transaction event.\n   * @deprecated Use either `.setAttribute()`, or set the context on the scope before creating the transaction.\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top-level `setMeasurement()` instead.\n   */\n   setMeasurement(name, value, unit = '') {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * Store metadata on this transaction.\n   * @deprecated Use attributes or store data on the scope instead.\n   */\n   setMetadata(newMetadata) {\n    this._metadata = { ...this._metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   end(endTimestamp) {\n    const timestampInS = spanTimeInputToSeconds(endTimestamp);\n    const transaction = this._finishTransaction(timestampInS);\n    if (!transaction) {\n      return undefined;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    // eslint-disable-next-line deprecation/deprecation\n    const spanContext = super.toContext();\n\n    return dropUndefinedKeys({\n      ...spanContext,\n      name: this._name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(transactionContext) {\n    // eslint-disable-next-line deprecation/deprecation\n    super.updateWithContext(transactionContext);\n\n    this._name = transactionContext.name || '';\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @experimental\n   *\n   * @deprecated Use top-level `getDynamicSamplingContextFromSpan` instead.\n   */\n   getDynamicSamplingContext() {\n    return getDynamicSamplingContextFromSpan(this);\n  }\n\n  /**\n   * Override the current hub with a new one.\n   * Used if you want another hub to finish the transaction.\n   *\n   * @internal\n   */\n   setHub(hub) {\n    this._hub = hub;\n  }\n\n  /**\n   * Get the profile id of the transaction.\n   */\n   getProfileId() {\n    if (this._contexts !== undefined && this._contexts['profile'] !== undefined) {\n      return this._contexts['profile'].profile_id ;\n    }\n    return undefined;\n  }\n\n  /**\n   * Finish the transaction & prepare the event to send to Sentry.\n   */\n   _finishTransaction(endTimestamp) {\n    // This transaction is already finished, so we should not flush it again.\n    if (this._endTime !== undefined) {\n      return undefined;\n    }\n\n    if (!this._name) {\n      DEBUG_BUILD && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this._name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.end(endTimestamp);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this._hub.getClient();\n    if (client && client.emit) {\n      client.emit('finishTransaction', this);\n    }\n\n    if (this._sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      DEBUG_BUILD && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    const finishedSpans = this.spanRecorder\n      ? // eslint-disable-next-line deprecation/deprecation\n        this.spanRecorder.spans.filter(span => span !== this && spanToJSON(span).timestamp)\n      : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      const endTimes = finishedSpans.map(span => spanToJSON(span).timestamp).filter(Boolean) ;\n      this._endTime = endTimes.reduce((prev, current) => {\n        return prev > current ? prev : current;\n      });\n    }\n\n    const { scope: capturedSpanScope, isolationScope: capturedSpanIsolationScope } = getCapturedScopesOnSpan(this);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const { metadata } = this;\n    // eslint-disable-next-line deprecation/deprecation\n    const { source } = metadata;\n\n    const transaction = {\n      contexts: {\n        ...this._contexts,\n        // We don't want to override trace context\n        trace: spanToTraceContext(this),\n      },\n      // TODO: Pass spans serialized via `spanToJSON()` here instead in v8.\n      spans: finishedSpans,\n      start_timestamp: this._startTime,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: this.tags,\n      timestamp: this._endTime,\n      transaction: this._name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        ...metadata,\n        capturedSpanScope,\n        capturedSpanIsolationScope,\n        ...dropUndefinedKeys({\n          dynamicSamplingContext: getDynamicSamplingContextFromSpan(this),\n        }),\n      },\n      _metrics_summary: getMetricSummaryJsonForSpan(this),\n      ...(source && {\n        transaction_info: {\n          source,\n        },\n      }),\n    };\n\n    const hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      DEBUG_BUILD &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    DEBUG_BUILD && logger.log(`[Tracing] Finishing ${this.op} transaction: ${this._name}.`);\n\n    return transaction;\n  }\n}\n\nexport { Transaction };\n//# sourceMappingURL=transaction.js.map\n","import { logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getMainCarrier } from '../hub.js';\nimport { spanToTraceHeader } from '../utils/spanUtils.js';\nimport { registerErrorInstrumentation } from './errors.js';\nimport { IdleTransaction } from './idletransaction.js';\nimport { sampleTransaction } from './sampling.js';\nimport { Transaction } from './transaction.js';\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n  // eslint-disable-next-line deprecation/deprecation\n  const scope = this.getScope();\n  // eslint-disable-next-line deprecation/deprecation\n  const span = scope.getSpan();\n\n  return span\n    ? {\n        'sentry-trace': spanToTraceHeader(span),\n      }\n    : {};\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n\n  transactionContext,\n  customSamplingContext,\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  const client = this.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  const configInstrumenter = options.instrumenter || 'sentry';\n  const transactionInstrumenter = transactionContext.instrumenter || 'sentry';\n\n  if (configInstrumenter !== transactionInstrumenter) {\n    DEBUG_BUILD &&\n      logger.error(\n        `A transaction was started with instrumenter=\\`${transactionInstrumenter}\\`, but the SDK is configured with the \\`${configInstrumenter}\\` instrumenter.\nThe transaction will not be sampled. Please use the ${configInstrumenter} instrumentation to start transactions.`,\n      );\n\n    // eslint-disable-next-line deprecation/deprecation\n    transactionContext.sampled = false;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sampleTransaction(transaction, options, {\n    name: transactionContext.name,\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    attributes: {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.data,\n      ...transactionContext.attributes,\n    },\n    ...customSamplingContext,\n  });\n  if (transaction.isRecording()) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nfunction startIdleTransaction(\n  hub,\n  transactionContext,\n  idleTimeout,\n  finalTimeout,\n  onScope,\n  customSamplingContext,\n  heartbeatInterval,\n  delayAutoFinishUntilSignal = false,\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  // eslint-disable-next-line deprecation/deprecation\n  let transaction = new IdleTransaction(\n    transactionContext,\n    hub,\n    idleTimeout,\n    finalTimeout,\n    heartbeatInterval,\n    onScope,\n    delayAutoFinishUntilSignal,\n  );\n  transaction = sampleTransaction(transaction, options, {\n    name: transactionContext.name,\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    attributes: {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.data,\n      ...transactionContext.attributes,\n    },\n    ...customSamplingContext,\n  });\n  if (transaction.isRecording()) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Adds tracing extensions to the global hub.\n */\nfunction addTracingExtensions() {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n\n  registerErrorInstrumentation();\n}\n\nexport { addTracingExtensions, startIdleTransaction };\n//# sourceMappingURL=hubextensions.js.map\n","import { SDK_VERSION } from '../version.js';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nfunction applySdkMetadata(options, name, names = [name], source = 'npm') {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n\nexport { applySdkMetadata };\n//# sourceMappingURL=sdkMetadata.js.map\n","import { getOriginalFunction } from '@sentry/utils';\nimport { getClient } from '../exports.js';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration.js';\n\nlet originalFunctionToString;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function ( ...args) {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() ) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch (e) {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) ;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nconst functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * @deprecated Use `functionToStringIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst FunctionToString = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  functionToStringIntegration,\n) ;\n\n// eslint-disable-next-line deprecation/deprecation\n\nexport { FunctionToString, functionToStringIntegration };\n//# sourceMappingURL=functiontostring.js.map\n","import { logger, getEventDescription, stringMatchesSomePattern } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration.js';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/,\n  /^Cannot redefine property: googletag$/,\n];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*\\/healthcheck$/,\n  /^.*\\/healthy$/,\n  /^.*\\/live$/,\n  /^.*\\/ready$/,\n  /^.*\\/heartbeat$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) ;\n\nconst inboundFiltersIntegration = defineIntegration(_inboundFiltersIntegration);\n\n/**\n * Inbound filters configurable by the user.\n * @deprecated Use `inboundFiltersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst InboundFilters = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  inboundFiltersIntegration,\n)\n\n;\n\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event, ignoreTransactions) {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event) {\n  const possibleMessages = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  if (DEBUG_BUILD && possibleMessages.length === 0) {\n    logger.error(`Could not extract message for event ${getEventDescription(event)}`);\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nexport { InboundFilters, inboundFiltersIntegration };\n//# sourceMappingURL=inboundfilters.js.map\n","import { isInstanceOf } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  maxValueLimit = 250,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException ,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions, maxValueLength) {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n\nexport { applyAggregateErrorsToEvent };\n//# sourceMappingURL=aggregate-errors.js.map\n","import { isError, isPlainObject, isParameterizedString } from './is.js';\nimport { addExceptionTypeValue, addExceptionMechanism } from './misc.js';\nimport { normalizeToSize } from './normalize.js';\nimport { extractExceptionKeysForMessage } from './object.js';\n\n/**\n * Extracts stack frames from the error.stack string\n */\nfunction parseStackFrames(stackParser, error) {\n  return stackParser(error.stack || '', 1);\n}\n\n/**\n * Extracts stack frames from the error and builds a Sentry Exception\n */\nfunction exceptionFromError(stackParser, error) {\n  const exception = {\n    type: error.name || error.constructor.name,\n    value: error.message,\n  };\n\n  const frames = parseStackFrames(stackParser, error);\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  return exception;\n}\n\nfunction getMessageForObject(exception) {\n  if ('name' in exception && typeof exception.name === 'string') {\n    let message = `'${exception.name}' captured as exception`;\n\n    if ('message' in exception && typeof exception.message === 'string') {\n      message += ` with message '${exception.message}'`;\n    }\n\n    return message;\n  } else if ('message' in exception && typeof exception.message === 'string') {\n    return exception.message;\n  } else {\n    // This will allow us to group events based on top-level keys\n    // which is much better than creating new group when any key/value change\n    return `Object captured as exception with keys: ${extractExceptionKeysForMessage(\n      exception ,\n    )}`;\n  }\n}\n\n/**\n * Builds and Event from a Exception\n *\n * TODO(v8): Remove getHub fallback\n * @hidden\n */\nfunction eventFromUnknownInput(\n  getHubOrClient,\n  stackParser,\n  exception,\n  hint,\n) {\n  const client =\n    typeof getHubOrClient === 'function'\n      ? // eslint-disable-next-line deprecation/deprecation\n        getHubOrClient().getClient()\n      : getHubOrClient;\n\n  let ex = exception;\n  const providedMechanism =\n    hint && hint.data && (hint.data ).mechanism;\n  const mechanism = providedMechanism || {\n    handled: true,\n    type: 'generic',\n  };\n\n  let extras;\n\n  if (!isError(exception)) {\n    if (isPlainObject(exception)) {\n      const normalizeDepth = client && client.getOptions().normalizeDepth;\n      extras = { ['__serialized__']: normalizeToSize(exception , normalizeDepth) };\n\n      const message = getMessageForObject(exception);\n      ex = (hint && hint.syntheticException) || new Error(message);\n      (ex ).message = message;\n    } else {\n      // This handles when someone does: `throw \"something awesome\";`\n      // We use synthesized Error here so we can extract a (rough) stack trace.\n      ex = (hint && hint.syntheticException) || new Error(exception );\n      (ex ).message = exception ;\n    }\n    mechanism.synthetic = true;\n  }\n\n  const event = {\n    exception: {\n      values: [exceptionFromError(stackParser, ex )],\n    },\n  };\n\n  if (extras) {\n    event.extra = extras;\n  }\n\n  addExceptionTypeValue(event, undefined, undefined);\n  addExceptionMechanism(event, mechanism);\n\n  return {\n    ...event,\n    event_id: hint && hint.event_id,\n  };\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const event = {\n    event_id: hint && hint.event_id,\n    level,\n  };\n\n  if (attachStacktrace && hint && hint.syntheticException) {\n    const frames = parseStackFrames(stackParser, hint.syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [\n          {\n            value: message,\n            stacktrace: { frames },\n          },\n        ],\n      };\n    }\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nexport { eventFromMessage, eventFromUnknownInput, exceptionFromError, parseStackFrames };\n//# sourceMappingURL=eventbuilder.js.map\n","import { applyAggregateErrorsToEvent, exceptionFromError } from '@sentry/utils';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration.js';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) ;\n\nconst linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\n/**\n * Adds SDK info to an event.\n * @deprecated Use `linkedErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst LinkedErrors = convertIntegrationFnToClass(INTEGRATION_NAME, linkedErrorsIntegration)\n\n;\n\nexport { LinkedErrors, linkedErrorsIntegration };\n//# sourceMappingURL=linkederrors.js.map\n","export { FunctionToString } from './functiontostring.js';\nexport { InboundFilters } from './inboundfilters.js';\nexport { LinkedErrors } from './linkederrors.js';\n\n/* eslint-disable deprecation/deprecation */\n//# sourceMappingURL=index.js.map\n","export { addTracingExtensions, startIdleTransaction } from './tracing/hubextensions.js';\nexport { IdleTransaction, TRACING_DEFAULTS } from './tracing/idletransaction.js';\nexport { Span } from './tracing/span.js';\nexport { Transaction } from './tracing/transaction.js';\nexport { extractTraceparentData, getActiveTransaction } from './tracing/utils.js';\nexport { SpanStatus, getSpanStatusFromHttpCode, setHttpStatus, spanStatusfromHttpCode } from './tracing/spanstatus.js';\nexport { continueTrace, getActiveSpan, startActiveSpan, startInactiveSpan, startSpan, startSpanManual, trace } from './tracing/trace.js';\nexport { getDynamicSamplingContextFromClient, getDynamicSamplingContextFromSpan } from './tracing/dynamicSamplingContext.js';\nexport { setMeasurement } from './tracing/measurement.js';\nexport { isValidSampleRate } from './tracing/sampling.js';\nexport { SEMANTIC_ATTRIBUTE_PROFILE_ID, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from './semanticAttributes.js';\nexport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nexport { addBreadcrumb, captureCheckIn, captureEvent, captureException, captureMessage, captureSession, close, configureScope, endSession, flush, getClient, getCurrentScope, isInitialized, lastEventId, setContext, setExtra, setExtras, setTag, setTags, setUser, startSession, startTransaction, withActiveSpan, withIsolationScope, withMonitor, withScope } from './exports.js';\nexport { Hub, ensureHubOnCarrier, getCurrentHub, getHubFromCarrier, getIsolationScope, getMainCarrier, makeMain, runWithAsyncContext, setAsyncContextStrategy, setHubOnCarrier } from './hub.js';\nexport { closeSession, makeSession, updateSession } from './session.js';\nexport { SessionFlusher } from './sessionflusher.js';\nexport { Scope, getGlobalScope, setGlobalScope } from './scope.js';\nexport { addGlobalEventProcessor, notifyEventProcessors } from './eventProcessors.js';\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint } from './api.js';\nexport { BaseClient, addEventProcessor } from './baseclient.js';\nexport { ServerRuntimeClient } from './server-runtime-client.js';\nexport { initAndBind, setCurrentClient } from './sdk.js';\nexport { createTransport } from './transports/base.js';\nexport { makeOfflineTransport } from './transports/offline.js';\nexport { makeMultiplexedTransport } from './transports/multiplexed.js';\nexport { SDK_VERSION } from './version.js';\nexport { addIntegration, convertIntegrationFnToClass, defineIntegration, getIntegrationsToSetup } from './integration.js';\nexport { applyScopeDataToEvent, mergeScopeData } from './utils/applyScopeDataToEvent.js';\nexport { prepareEvent } from './utils/prepareEvent.js';\nexport { createCheckInEnvelope } from './checkin.js';\nexport { createSpanEnvelope } from './span.js';\nexport { hasTracingEnabled } from './utils/hasTracingEnabled.js';\nexport { isSentryRequestUrl } from './utils/isSentryRequestUrl.js';\nexport { handleCallbackErrors } from './utils/handleCallbackErrors.js';\nexport { parameterize } from './utils/parameterize.js';\nexport { spanIsSampled, spanToJSON, spanToTraceContext, spanToTraceHeader } from './utils/spanUtils.js';\nexport { getRootSpan } from './utils/getRootSpan.js';\nexport { applySdkMetadata } from './utils/sdkMetadata.js';\nexport { DEFAULT_ENVIRONMENT } from './constants.js';\nexport { ModuleMetadata, moduleMetadataIntegration } from './integrations/metadata.js';\nexport { RequestData, requestDataIntegration } from './integrations/requestdata.js';\nexport { InboundFilters, inboundFiltersIntegration } from './integrations/inboundfilters.js';\nexport { FunctionToString, functionToStringIntegration } from './integrations/functiontostring.js';\nexport { LinkedErrors, linkedErrorsIntegration } from './integrations/linkederrors.js';\nimport * as index from './integrations/index.js';\nexport { metrics } from './metrics/exports.js';\n\n/** @deprecated Import the integration function directly, e.g. `inboundFiltersIntegration()` instead of `new Integrations.InboundFilter(). */\nconst Integrations = index;\n\nexport { Integrations };\n//# sourceMappingURL=index.js.map\n","// Slightly modified (no IE8 support, ES6) and transcribed to TypeScript\n// https://github.com/calvinmetcalf/rollup-plugin-node-builtins/blob/63ab8aacd013767445ca299e468d9a60a95328d7/src/es6/path.js\n//\n// Copyright Joyent, Inc.and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/** JSDoc */\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  let up = 0;\n  for (let i = parts.length - 1; i >= 0; i--) {\n    const last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nconst splitPathRe = /^(\\S+:\\\\|\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^/\\\\]+?|)(\\.[^./\\\\]*|))(?:[/\\\\]*)$/;\n/** JSDoc */\nfunction splitPath(filename) {\n  // Truncate files names greater than 1024 characters to avoid regex dos\n  // https://github.com/getsentry/sentry-javascript/pull/8737#discussion_r1285719172\n  const truncated = filename.length > 1024 ? `<truncated>${filename.slice(-1024)}` : filename;\n  const parts = splitPathRe.exec(truncated);\n  return parts ? parts.slice(1) : [];\n}\n\n// path.resolve([from ...], to)\n// posix version\n/** JSDoc */\nfunction resolve(...args) {\n  let resolvedPath = '';\n  let resolvedAbsolute = false;\n\n  for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    const path = i >= 0 ? args[i] : '/';\n\n    // Skip empty entries\n    if (!path) {\n      continue;\n    }\n\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(\n    resolvedPath.split('/').filter(p => !!p),\n    !resolvedAbsolute,\n  ).join('/');\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\n\n/** JSDoc */\nfunction trim(arr) {\n  let start = 0;\n  for (; start < arr.length; start++) {\n    if (arr[start] !== '') {\n      break;\n    }\n  }\n\n  let end = arr.length - 1;\n  for (; end >= 0; end--) {\n    if (arr[end] !== '') {\n      break;\n    }\n  }\n\n  if (start > end) {\n    return [];\n  }\n  return arr.slice(start, end - start + 1);\n}\n\n// path.relative(from, to)\n// posix version\n/** JSDoc */\nfunction relative(from, to) {\n  /* eslint-disable no-param-reassign */\n  from = resolve(from).slice(1);\n  to = resolve(to).slice(1);\n  /* eslint-enable no-param-reassign */\n\n  const fromParts = trim(from.split('/'));\n  const toParts = trim(to.split('/'));\n\n  const length = Math.min(fromParts.length, toParts.length);\n  let samePartsLength = length;\n  for (let i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  let outputParts = [];\n  for (let i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\n// path.normalize(path)\n// posix version\n/** JSDoc */\nfunction normalizePath(path) {\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSlash = path.slice(-1) === '/';\n\n  // Normalize the path\n  let normalizedPath = normalizeArray(\n    path.split('/').filter(p => !!p),\n    !isPathAbsolute,\n  ).join('/');\n\n  if (!normalizedPath && !isPathAbsolute) {\n    normalizedPath = '.';\n  }\n  if (normalizedPath && trailingSlash) {\n    normalizedPath += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + normalizedPath;\n}\n\n// posix version\n/** JSDoc */\nfunction isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\n/** JSDoc */\nfunction join(...args) {\n  return normalizePath(args.join('/'));\n}\n\n/** JSDoc */\nfunction dirname(path) {\n  const result = splitPath(path);\n  const root = result[0];\n  let dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.slice(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\n/** JSDoc */\nfunction basename(path, ext) {\n  let f = splitPath(path)[2];\n  if (ext && f.slice(ext.length * -1) === ext) {\n    f = f.slice(0, f.length - ext.length);\n  }\n  return f;\n}\n\nexport { basename, dirname, isAbsolute, join, normalizePath, relative, resolve };\n//# sourceMappingURL=path.js.map\n","import { posix, sep } from 'path';\nimport { dirname } from '@sentry/utils';\n\n/** normalizes Windows paths */\nfunction normalizeWindowsPath(path) {\n  return path\n    .replace(/^[A-Z]:/, '') // remove Windows-style prefix\n    .replace(/\\\\/g, '/'); // replace all `\\` instances with `/`\n}\n\n/** Creates a function that gets the module name from a filename */\nfunction createGetModuleFromFilename(\n  basePath = process.argv[1] ? dirname(process.argv[1]) : process.cwd(),\n  isWindows = sep === '\\\\',\n) {\n  const normalizedBase = isWindows ? normalizeWindowsPath(basePath) : basePath;\n\n  return (filename) => {\n    if (!filename) {\n      return;\n    }\n\n    const normalizedFilename = isWindows ? normalizeWindowsPath(filename) : filename;\n\n    // eslint-disable-next-line prefer-const\n    let { dir, base: file, ext } = posix.parse(normalizedFilename);\n\n    if (ext === '.js' || ext === '.mjs' || ext === '.cjs') {\n      file = file.slice(0, ext.length * -1);\n    }\n\n    if (!dir) {\n      // No dirname whatsoever\n      dir = '.';\n    }\n\n    const n = dir.lastIndexOf('/node_modules');\n    if (n > -1) {\n      return `${dir.slice(n + 14).replace(/\\//g, '.')}:${file}`;\n    }\n\n    // Let's see if it's a part of the main module\n    // To be a part of main module, it has to share the same base\n    if (dir.startsWith(normalizedBase)) {\n      let moduleName = dir.slice(normalizedBase.length + 1).replace(/\\//g, '.');\n\n      if (moduleName) {\n        moduleName += ':';\n      }\n      moduleName += file;\n\n      return moduleName;\n    }\n\n    return file;\n  };\n}\n\nexport { createGetModuleFromFilename };\n//# sourceMappingURL=module.js.map\n","import { CONSOLE_LEVELS, originalConsoleMethods } from '../logger.js';\nimport { fill } from '../object.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addConsoleInstrumentationHandler(handler) {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole() {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        const handlerData = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\nexport { addConsoleInstrumentationHandler };\n//# sourceMappingURL=console.js.map\n","// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexport { severityFromString, severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n","import * as util from 'util';\nimport { defineIntegration, convertIntegrationFnToClass, getClient, addBreadcrumb } from '@sentry/core';\nimport { addConsoleInstrumentationHandler, severityLevelFromString } from '@sentry/utils';\n\nconst INTEGRATION_NAME = 'Console';\n\nconst _consoleIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      addConsoleInstrumentationHandler(({ args, level }) => {\n        if (getClient() !== client) {\n          return;\n        }\n\n        addBreadcrumb(\n          {\n            category: 'console',\n            level: severityLevelFromString(level),\n            message: util.format.apply(undefined, args),\n          },\n          {\n            input: [...args],\n            level,\n          },\n        );\n      });\n    },\n  };\n}) ;\n\nconst consoleIntegration = defineIntegration(_consoleIntegration);\n\n/**\n * Console module integration.\n * @deprecated Use `consoleIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Console = convertIntegrationFnToClass(INTEGRATION_NAME, consoleIntegration)\n\n;\n\n// eslint-disable-next-line deprecation/deprecation\n\nexport { Console, consoleIntegration };\n//# sourceMappingURL=console.js.map\n","/**\n * Checks whether given url points to Sentry server\n * @param url url to verify\n *\n * TODO(v8): Remove Hub fallback type\n */\nfunction isSentryRequestUrl(url, hubOrClient) {\n  const client =\n    hubOrClient && isHub(hubOrClient)\n      ? // eslint-disable-next-line deprecation/deprecation\n        hubOrClient.getClient()\n      : hubOrClient;\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url, tunnel) {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url, dsn) {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str) {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\nfunction isHub(hubOrClient) {\n  // eslint-disable-next-line deprecation/deprecation\n  return (hubOrClient ).getClient !== undefined;\n}\n\nexport { isSentryRequestUrl };\n//# sourceMappingURL=isSentryRequestUrl.js.map\n","/** A simple Least Recently Used map */\nclass LRUMap {\n\n   constructor(  _maxSize) {this._maxSize = _maxSize;\n    this._cache = new Map();\n  }\n\n  /** Get the current size of the cache */\n   get size() {\n    return this._cache.size;\n  }\n\n  /** Get an entry or undefined if it was not in the cache. Re-inserts to update the recently used order */\n   get(key) {\n    const value = this._cache.get(key);\n    if (value === undefined) {\n      return undefined;\n    }\n    // Remove and re-insert to update the order\n    this._cache.delete(key);\n    this._cache.set(key, value);\n    return value;\n  }\n\n  /** Insert an entry and evict an older entry if we've reached maxSize */\n   set(key, value) {\n    if (this._cache.size >= this._maxSize) {\n      // keys() returns an iterator in insertion order so keys().next() gives us the oldest key\n      this._cache.delete(this._cache.keys().next().value);\n    }\n    this._cache.set(key, value);\n  }\n\n  /** Remove an entry and return the entry if it was in the cache */\n   remove(key) {\n    const value = this._cache.get(key);\n    if (value) {\n      this._cache.delete(key);\n    }\n    return value;\n  }\n\n  /** Clear all entries */\n   clear() {\n    this._cache.clear();\n  }\n\n  /** Get all the keys */\n   keys() {\n    return Array.from(this._cache.keys());\n  }\n\n  /** Get all the values */\n   values() {\n    const values = [];\n    this._cache.forEach(value => values.push(value));\n    return values;\n  }\n}\n\nexport { LRUMap };\n//# sourceMappingURL=lru.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport { URL } from 'url';\nimport { NODE_VERSION } from '../../nodeVersion.js';\n\n/**\n * Assembles a URL that's passed to the users to filter on.\n * It can include raw (potentially PII containing) data, which we'll allow users to access to filter\n * but won't include in spans or breadcrumbs.\n *\n * @param requestOptions RequestOptions object containing the component parts for a URL\n * @returns Fully-formed URL\n */\n// TODO (v8): This function should include auth, query and fragment (it's breaking, so we need to wait for v8)\nfunction extractRawUrl(requestOptions) {\n  const { protocol, hostname, port } = parseRequestOptions(requestOptions);\n  const path = requestOptions.path ? requestOptions.path : '/';\n  return `${protocol}//${hostname}${port}${path}`;\n}\n\n/**\n * Assemble a URL to be used for breadcrumbs and spans.\n *\n * @param requestOptions RequestOptions object containing the component parts for a URL\n * @returns Fully-formed URL\n */\nfunction extractUrl(requestOptions) {\n  const { protocol, hostname, port } = parseRequestOptions(requestOptions);\n\n  const path = requestOptions.pathname || '/';\n\n  // always filter authority, see https://develop.sentry.dev/sdk/data-handling/#structuring-data\n  const authority = requestOptions.auth ? redactAuthority(requestOptions.auth) : '';\n\n  return `${protocol}//${authority}${hostname}${port}${path}`;\n}\n\nfunction redactAuthority(auth) {\n  const [user, password] = auth.split(':');\n  return `${user ? '[Filtered]' : ''}:${password ? '[Filtered]' : ''}@`;\n}\n\n/**\n * Handle various edge cases in the span description (for spans representing http(s) requests).\n *\n * @param description current `description` property of the span representing the request\n * @param requestOptions Configuration data for the request\n * @param Request Request object\n *\n * @returns The cleaned description\n */\nfunction cleanSpanDescription(\n  description,\n  requestOptions,\n  request,\n) {\n  // nothing to clean\n  if (!description) {\n    return description;\n  }\n\n  // eslint-disable-next-line prefer-const\n  let [method, requestUrl] = description.split(' ');\n\n  // superagent sticks the protocol in a weird place (we check for host because if both host *and* protocol are missing,\n  // we're likely dealing with an internal route and this doesn't apply)\n  if (requestOptions.host && !requestOptions.protocol) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    requestOptions.protocol = _optionalChain([(request ), 'optionalAccess', _ => _.agent, 'optionalAccess', _2 => _2.protocol]); // worst comes to worst, this is undefined and nothing changes\n    // This URL contains the filtered authority ([filtered]:[filtered]@example.com) but no fragment or query params\n    requestUrl = extractUrl(requestOptions);\n  }\n\n  // internal routes can end up starting with a triple slash rather than a single one\n  if (_optionalChain([requestUrl, 'optionalAccess', _3 => _3.startsWith, 'call', _4 => _4('///')])) {\n    requestUrl = requestUrl.slice(2);\n  }\n\n  return `${method} ${requestUrl}`;\n}\n\n// the node types are missing a few properties which node's `urlToOptions` function spits out\n\n/**\n * Convert a URL object into a RequestOptions object.\n *\n * Copied from Node's internals (where it's used in http(s).request() and http(s).get()), modified only to use the\n * RequestOptions type above.\n *\n * See https://github.com/nodejs/node/blob/master/lib/internal/url.js.\n */\nfunction urlToOptions(url) {\n  const options = {\n    protocol: url.protocol,\n    hostname:\n      typeof url.hostname === 'string' && url.hostname.startsWith('[') ? url.hostname.slice(1, -1) : url.hostname,\n    hash: url.hash,\n    search: url.search,\n    pathname: url.pathname,\n    path: `${url.pathname || ''}${url.search || ''}`,\n    href: url.href,\n  };\n  if (url.port !== '') {\n    options.port = Number(url.port);\n  }\n  if (url.username || url.password) {\n    options.auth = `${url.username}:${url.password}`;\n  }\n  return options;\n}\n\n/**\n * Normalize inputs to `http(s).request()` and `http(s).get()`.\n *\n * Legal inputs to `http(s).request()` and `http(s).get()` can take one of ten forms:\n *     [ RequestOptions | string | URL ],\n *     [ RequestOptions | string | URL, RequestCallback ],\n *     [ string | URL, RequestOptions ], and\n *     [ string | URL, RequestOptions, RequestCallback ].\n *\n * This standardizes to one of two forms: [ RequestOptions ] and [ RequestOptions, RequestCallback ]. A similar thing is\n * done as the first step of `http(s).request()` and `http(s).get()`; this just does it early so that we can interact\n * with the args in a standard way.\n *\n * @param requestArgs The inputs to `http(s).request()` or `http(s).get()`, as an array.\n *\n * @returns Equivalent args of the form [ RequestOptions ] or [ RequestOptions, RequestCallback ].\n */\nfunction normalizeRequestArgs(\n  httpModule,\n  requestArgs,\n) {\n  let callback, requestOptions;\n\n  // pop off the callback, if there is one\n  if (typeof requestArgs[requestArgs.length - 1] === 'function') {\n    callback = requestArgs.pop() ;\n  }\n\n  // create a RequestOptions object of whatever's at index 0\n  if (typeof requestArgs[0] === 'string') {\n    requestOptions = urlToOptions(new URL(requestArgs[0]));\n  } else if (requestArgs[0] instanceof URL) {\n    requestOptions = urlToOptions(requestArgs[0]);\n  } else {\n    requestOptions = requestArgs[0];\n\n    try {\n      const parsed = new URL(\n        requestOptions.path || '',\n        `${requestOptions.protocol || 'http:'}//${requestOptions.hostname}`,\n      );\n      requestOptions = {\n        pathname: parsed.pathname,\n        search: parsed.search,\n        hash: parsed.hash,\n        ...requestOptions,\n      };\n    } catch (e) {\n      // ignore\n    }\n  }\n\n  // if the options were given separately from the URL, fold them in\n  if (requestArgs.length === 2) {\n    requestOptions = { ...requestOptions, ...requestArgs[1] };\n  }\n\n  // Figure out the protocol if it's currently missing\n  if (requestOptions.protocol === undefined) {\n    // Worst case we end up populating protocol with undefined, which it already is\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any */\n\n    // NOTE: Prior to Node 9, `https` used internals of `http` module, thus we don't patch it.\n    // Because of that, we cannot rely on `httpModule` to provide us with valid protocol,\n    // as it will always return `http`, even when using `https` module.\n    //\n    // See test/integrations/http.test.ts for more details on Node <=v8 protocol issue.\n    if (NODE_VERSION.major > 8) {\n      requestOptions.protocol =\n        _optionalChain([(_optionalChain([httpModule, 'optionalAccess', _5 => _5.globalAgent]) ), 'optionalAccess', _6 => _6.protocol]) ||\n        _optionalChain([(requestOptions.agent ), 'optionalAccess', _7 => _7.protocol]) ||\n        _optionalChain([(requestOptions._defaultAgent ), 'optionalAccess', _8 => _8.protocol]);\n    } else {\n      requestOptions.protocol =\n        _optionalChain([(requestOptions.agent ), 'optionalAccess', _9 => _9.protocol]) ||\n        _optionalChain([(requestOptions._defaultAgent ), 'optionalAccess', _10 => _10.protocol]) ||\n        _optionalChain([(_optionalChain([httpModule, 'optionalAccess', _11 => _11.globalAgent]) ), 'optionalAccess', _12 => _12.protocol]);\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any */\n  }\n\n  // return args in standardized form\n  if (callback) {\n    return [requestOptions, callback];\n  } else {\n    return [requestOptions];\n  }\n}\n\nfunction parseRequestOptions(requestOptions)\n\n {\n  const protocol = requestOptions.protocol || '';\n  const hostname = requestOptions.hostname || requestOptions.host || '';\n  // Don't log standard :80 (http) and :443 (https) ports to reduce the noise\n  // Also don't add port if the hostname already includes a port\n  const port =\n    !requestOptions.port || requestOptions.port === 80 || requestOptions.port === 443 || /^(.*):(\\d+)$/.test(hostname)\n      ? ''\n      : `:${requestOptions.port}`;\n\n  return { protocol, hostname, port };\n}\n\nexport { cleanSpanDescription, extractRawUrl, extractUrl, normalizeRequestArgs, urlToOptions };\n//# sourceMappingURL=http.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport { defineIntegration, getClient, isSentryRequestUrl, getCurrentScope, getIsolationScope, getActiveSpan, spanToTraceHeader, getDynamicSamplingContextFromSpan, getDynamicSamplingContextFromClient, setHttpStatus, spanToJSON, hasTracingEnabled, getCurrentHub, addBreadcrumb } from '@sentry/core';\nimport { dropUndefinedKeys, logger, fill, LRUMap, generateSentryTraceHeader, dynamicSamplingContextToSentryBaggageHeader, stringMatchesSomePattern } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { NODE_VERSION } from '../nodeVersion.js';\nimport { normalizeRequestArgs, extractRawUrl, extractUrl, cleanSpanDescription } from './utils/http.js';\n\nconst _httpIntegration = ((options = {}) => {\n  const { breadcrumbs, tracing, shouldCreateSpanForRequest } = options;\n\n  const convertedOptions = {\n    breadcrumbs,\n    tracing:\n      tracing === false\n        ? false\n        : dropUndefinedKeys({\n            // If tracing is forced to `true`, we don't want to set `enableIfHasTracingEnabled`\n            enableIfHasTracingEnabled: tracing === true ? undefined : true,\n            shouldCreateSpanForRequest,\n          }),\n  };\n\n  // eslint-disable-next-line deprecation/deprecation\n  return new Http(convertedOptions) ;\n}) ;\n\n/**\n * The http module integration instruments Node's internal http module. It creates breadcrumbs, spans for outgoing\n * http requests, and attaches trace data when tracing is enabled via its `tracing` option.\n *\n * By default, this will always create breadcrumbs, and will create spans if tracing is enabled.\n */\nconst httpIntegration = defineIntegration(_httpIntegration);\n\n/**\n * The http module integration instruments Node's internal http module. It creates breadcrumbs, transactions for outgoing\n * http requests and attaches trace data when tracing is enabled via its `tracing` option.\n *\n * @deprecated Use `httpIntegration()` instead.\n */\nclass Http  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Http';}\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n   __init() {this.name = Http.id;}\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {Http.prototype.__init.call(this);\n    this._breadcrumbs = typeof options.breadcrumbs === 'undefined' ? true : options.breadcrumbs;\n    this._tracing = !options.tracing ? undefined : options.tracing === true ? {} : options.tracing;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(\n    _addGlobalEventProcessor,\n    setupOnceGetCurrentHub,\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    const clientOptions = _optionalChain([setupOnceGetCurrentHub, 'call', _ => _(), 'access', _2 => _2.getClient, 'call', _3 => _3(), 'optionalAccess', _4 => _4.getOptions, 'call', _5 => _5()]);\n\n    // If `tracing` is not explicitly set, we default this based on whether or not tracing is enabled.\n    // But for compatibility, we only do that if `enableIfHasTracingEnabled` is set.\n    const shouldCreateSpans = _shouldCreateSpans(this._tracing, clientOptions);\n\n    // No need to instrument if we don't want to track anything\n    if (!this._breadcrumbs && !shouldCreateSpans) {\n      return;\n    }\n\n    // Do not auto-instrument for other instrumenter\n    if (clientOptions && clientOptions.instrumenter !== 'sentry') {\n      DEBUG_BUILD && logger.log('HTTP Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const shouldCreateSpanForRequest = _getShouldCreateSpanForRequest(shouldCreateSpans, this._tracing, clientOptions);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const tracePropagationTargets = _optionalChain([clientOptions, 'optionalAccess', _6 => _6.tracePropagationTargets]) || _optionalChain([this, 'access', _7 => _7._tracing, 'optionalAccess', _8 => _8.tracePropagationTargets]);\n\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const httpModule = require('http');\n    const wrappedHttpHandlerMaker = _createWrappedRequestMethodFactory(\n      httpModule,\n      this._breadcrumbs,\n      shouldCreateSpanForRequest,\n      tracePropagationTargets,\n    );\n    fill(httpModule, 'get', wrappedHttpHandlerMaker);\n    fill(httpModule, 'request', wrappedHttpHandlerMaker);\n\n    // NOTE: Prior to Node 9, `https` used internals of `http` module, thus we don't patch it.\n    // If we do, we'd get double breadcrumbs and double spans for `https` calls.\n    // It has been changed in Node 9, so for all versions equal and above, we patch `https` separately.\n    if (NODE_VERSION.major > 8) {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      const httpsModule = require('https');\n      const wrappedHttpsHandlerMaker = _createWrappedRequestMethodFactory(\n        httpsModule,\n        this._breadcrumbs,\n        shouldCreateSpanForRequest,\n        tracePropagationTargets,\n      );\n      fill(httpsModule, 'get', wrappedHttpsHandlerMaker);\n      fill(httpsModule, 'request', wrappedHttpsHandlerMaker);\n    }\n  }\n}Http.__initStatic();\n\n// for ease of reading below\n\n/**\n * Function which creates a function which creates wrapped versions of internal `request` and `get` calls within `http`\n * and `https` modules. (NB: Not a typo - this is a creator^2!)\n *\n * @param breadcrumbsEnabled Whether or not to record outgoing requests as breadcrumbs\n * @param tracingEnabled Whether or not to record outgoing requests as tracing spans\n *\n * @returns A function which accepts the exiting handler and returns a wrapped handler\n */\nfunction _createWrappedRequestMethodFactory(\n  httpModule,\n  breadcrumbsEnabled,\n  shouldCreateSpanForRequest,\n  tracePropagationTargets,\n) {\n  // We're caching results so we don't have to recompute regexp every time we create a request.\n  const createSpanUrlMap = new LRUMap(100);\n  const headersUrlMap = new LRUMap(100);\n\n  const shouldCreateSpan = (url) => {\n    if (shouldCreateSpanForRequest === undefined) {\n      return true;\n    }\n\n    const cachedDecision = createSpanUrlMap.get(url);\n    if (cachedDecision !== undefined) {\n      return cachedDecision;\n    }\n\n    const decision = shouldCreateSpanForRequest(url);\n    createSpanUrlMap.set(url, decision);\n    return decision;\n  };\n\n  const shouldAttachTraceData = (url) => {\n    if (tracePropagationTargets === undefined) {\n      return true;\n    }\n\n    const cachedDecision = headersUrlMap.get(url);\n    if (cachedDecision !== undefined) {\n      return cachedDecision;\n    }\n\n    const decision = stringMatchesSomePattern(url, tracePropagationTargets);\n    headersUrlMap.set(url, decision);\n    return decision;\n  };\n\n  /**\n   * Captures Breadcrumb based on provided request/response pair\n   */\n  function addRequestBreadcrumb(\n    event,\n    requestSpanData,\n    req,\n    res,\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!getCurrentHub().getIntegration(Http)) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: 'http',\n        data: {\n          status_code: res && res.statusCode,\n          ...requestSpanData,\n        },\n        type: 'http',\n      },\n      {\n        event,\n        request: req,\n        response: res,\n      },\n    );\n  }\n\n  return function wrappedRequestMethodFactory(originalRequestMethod) {\n    return function wrappedMethod( ...args) {\n      const requestArgs = normalizeRequestArgs(httpModule, args);\n      const requestOptions = requestArgs[0];\n      // eslint-disable-next-line deprecation/deprecation\n      const rawRequestUrl = extractRawUrl(requestOptions);\n      const requestUrl = extractUrl(requestOptions);\n      const client = getClient();\n\n      // we don't want to record requests to Sentry as either breadcrumbs or spans, so just use the original method\n      if (isSentryRequestUrl(requestUrl, client)) {\n        return originalRequestMethod.apply(httpModule, requestArgs);\n      }\n\n      const scope = getCurrentScope();\n      const isolationScope = getIsolationScope();\n      const parentSpan = getActiveSpan();\n\n      const data = getRequestSpanData(requestUrl, requestOptions);\n\n      const requestSpan = shouldCreateSpan(rawRequestUrl)\n        ? // eslint-disable-next-line deprecation/deprecation\n          _optionalChain([parentSpan, 'optionalAccess', _9 => _9.startChild, 'call', _10 => _10({\n            op: 'http.client',\n            origin: 'auto.http.node.http',\n            description: `${data['http.method']} ${data.url}`,\n            data,\n          })])\n        : undefined;\n\n      if (client && shouldAttachTraceData(rawRequestUrl)) {\n        const { traceId, spanId, sampled, dsc } = {\n          ...isolationScope.getPropagationContext(),\n          ...scope.getPropagationContext(),\n        };\n\n        const sentryTraceHeader = requestSpan\n          ? spanToTraceHeader(requestSpan)\n          : generateSentryTraceHeader(traceId, spanId, sampled);\n\n        const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(\n          dsc ||\n            (requestSpan\n              ? getDynamicSamplingContextFromSpan(requestSpan)\n              : getDynamicSamplingContextFromClient(traceId, client, scope)),\n        );\n\n        addHeadersToRequestOptions(requestOptions, requestUrl, sentryTraceHeader, sentryBaggageHeader);\n      } else {\n        DEBUG_BUILD &&\n          logger.log(\n            `[Tracing] Not adding sentry-trace header to outgoing request (${requestUrl}) due to mismatching tracePropagationTargets option.`,\n          );\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalRequestMethod\n        .apply(httpModule, requestArgs)\n        .once('response', function ( res) {\n          // eslint-disable-next-line @typescript-eslint/no-this-alias\n          const req = this;\n          if (breadcrumbsEnabled) {\n            addRequestBreadcrumb('response', data, req, res);\n          }\n          if (requestSpan) {\n            if (res.statusCode) {\n              setHttpStatus(requestSpan, res.statusCode);\n            }\n            requestSpan.updateName(\n              cleanSpanDescription(spanToJSON(requestSpan).description || '', requestOptions, req) || '',\n            );\n            requestSpan.end();\n          }\n        })\n        .once('error', function () {\n          // eslint-disable-next-line @typescript-eslint/no-this-alias\n          const req = this;\n\n          if (breadcrumbsEnabled) {\n            addRequestBreadcrumb('error', data, req);\n          }\n          if (requestSpan) {\n            setHttpStatus(requestSpan, 500);\n            requestSpan.updateName(\n              cleanSpanDescription(spanToJSON(requestSpan).description || '', requestOptions, req) || '',\n            );\n            requestSpan.end();\n          }\n        });\n    };\n  };\n}\n\nfunction addHeadersToRequestOptions(\n  requestOptions,\n  requestUrl,\n  sentryTraceHeader,\n  sentryBaggageHeader,\n) {\n  // Don't overwrite sentry-trace and baggage header if it's already set.\n  const headers = requestOptions.headers || {};\n  if (headers['sentry-trace']) {\n    return;\n  }\n\n  DEBUG_BUILD &&\n    logger.log(`[Tracing] Adding sentry-trace header ${sentryTraceHeader} to outgoing request to \"${requestUrl}\": `);\n\n  requestOptions.headers = {\n    ...requestOptions.headers,\n    'sentry-trace': sentryTraceHeader,\n    // Setting a header to `undefined` will crash in node so we only set the baggage header when it's defined\n    ...(sentryBaggageHeader &&\n      sentryBaggageHeader.length > 0 && { baggage: normalizeBaggageHeader(requestOptions, sentryBaggageHeader) }),\n  };\n}\n\nfunction getRequestSpanData(requestUrl, requestOptions) {\n  const method = requestOptions.method || 'GET';\n  const data = {\n    url: requestUrl,\n    'http.method': method,\n  };\n  if (requestOptions.hash) {\n    // strip leading \"#\"\n    data['http.fragment'] = requestOptions.hash.substring(1);\n  }\n  if (requestOptions.search) {\n    // strip leading \"?\"\n    data['http.query'] = requestOptions.search.substring(1);\n  }\n  return data;\n}\n\nfunction normalizeBaggageHeader(\n  requestOptions,\n  sentryBaggageHeader,\n) {\n  if (!requestOptions.headers || !requestOptions.headers.baggage) {\n    return sentryBaggageHeader;\n  } else if (!sentryBaggageHeader) {\n    return requestOptions.headers.baggage ;\n  } else if (Array.isArray(requestOptions.headers.baggage)) {\n    return [...requestOptions.headers.baggage, sentryBaggageHeader];\n  }\n  // Type-cast explanation:\n  // Technically this the following could be of type `(number | string)[]` but for the sake of simplicity\n  // we say this is undefined behaviour, since it would not be baggage spec conform if the user did this.\n  return [requestOptions.headers.baggage, sentryBaggageHeader] ;\n}\n\n/** Exported for tests only. */\nfunction _shouldCreateSpans(\n  tracingOptions,\n  clientOptions,\n) {\n  return tracingOptions === undefined\n    ? false\n    : tracingOptions.enableIfHasTracingEnabled\n      ? hasTracingEnabled(clientOptions)\n      : true;\n}\n\n/** Exported for tests only. */\nfunction _getShouldCreateSpanForRequest(\n  shouldCreateSpans,\n  tracingOptions,\n  clientOptions,\n) {\n  const handler = shouldCreateSpans\n    ? // eslint-disable-next-line deprecation/deprecation\n      _optionalChain([tracingOptions, 'optionalAccess', _11 => _11.shouldCreateSpanForRequest]) || _optionalChain([clientOptions, 'optionalAccess', _12 => _12.shouldCreateSpanForRequest])\n    : () => false;\n\n  return handler;\n}\n\nexport { Http, _getShouldCreateSpanForRequest, _shouldCreateSpans, httpIntegration };\n//# sourceMappingURL=http.js.map\n","import { getClient } from '@sentry/core';\nimport { consoleSandbox, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../debug-build.js';\n\nconst DEFAULT_SHUTDOWN_TIMEOUT = 2000;\n\n/**\n * @hidden\n */\nfunction logAndExitProcess(error) {\n  consoleSandbox(() => {\n    // eslint-disable-next-line no-console\n    console.error(error);\n  });\n\n  const client = getClient();\n\n  if (client === undefined) {\n    DEBUG_BUILD && logger.warn('No NodeClient was defined, we are exiting the process now.');\n    global.process.exit(1);\n  }\n\n  const options = client.getOptions();\n  const timeout =\n    (options && options.shutdownTimeout && options.shutdownTimeout > 0 && options.shutdownTimeout) ||\n    DEFAULT_SHUTDOWN_TIMEOUT;\n  client.close(timeout).then(\n    (result) => {\n      if (!result) {\n        DEBUG_BUILD && logger.warn('We reached the timeout for emptying the request buffer, still exiting now!');\n      }\n      global.process.exit(1);\n    },\n    error => {\n      DEBUG_BUILD && logger.error(error);\n    },\n  );\n}\n\nexport { logAndExitProcess };\n//# sourceMappingURL=errorhandling.js.map\n","import { defineIntegration, convertIntegrationFnToClass, getClient, captureException } from '@sentry/core';\nimport { logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { logAndExitProcess } from './utils/errorhandling.js';\n\nconst INTEGRATION_NAME = 'OnUncaughtException';\n\nconst _onUncaughtExceptionIntegration = ((options = {}) => {\n  const _options = {\n    exitEvenIfOtherHandlersAreRegistered: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      global.process.on('uncaughtException', makeErrorHandler(client, _options));\n    },\n  };\n}) ;\n\nconst onUncaughtExceptionIntegration = defineIntegration(_onUncaughtExceptionIntegration);\n\n/**\n * Global Exception handler.\n * @deprecated Use `onUncaughtExceptionIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst OnUncaughtException = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  onUncaughtExceptionIntegration,\n)\n\n;\n\n// eslint-disable-next-line deprecation/deprecation\n\n/** Exported only for tests */\nfunction makeErrorHandler(client, options) {\n  const timeout = 2000;\n  let caughtFirstError = false;\n  let caughtSecondError = false;\n  let calledFatalError = false;\n  let firstError;\n\n  const clientOptions = client.getOptions();\n\n  return Object.assign(\n    (error) => {\n      let onFatalError = logAndExitProcess;\n\n      if (options.onFatalError) {\n        onFatalError = options.onFatalError;\n      } else if (clientOptions.onFatalError) {\n        onFatalError = clientOptions.onFatalError ;\n      }\n\n      // Attaching a listener to `uncaughtException` will prevent the node process from exiting. We generally do not\n      // want to alter this behaviour so we check for other listeners that users may have attached themselves and adjust\n      // exit behaviour of the SDK accordingly:\n      // - If other listeners are attached, do not exit.\n      // - If the only listener attached is ours, exit.\n      const userProvidedListenersCount = (\n        global.process.listeners('uncaughtException')\n      ).reduce((acc, listener) => {\n        if (\n          // There are 3 listeners we ignore:\n          listener.name === 'domainUncaughtExceptionClear' || // as soon as we're using domains this listener is attached by node itself\n          (listener.tag && listener.tag === 'sentry_tracingErrorCallback') || // the handler we register for tracing\n          (listener )._errorHandler // the handler we register in this integration\n        ) {\n          return acc;\n        } else {\n          return acc + 1;\n        }\n      }, 0);\n\n      const processWouldExit = userProvidedListenersCount === 0;\n      const shouldApplyFatalHandlingLogic = options.exitEvenIfOtherHandlersAreRegistered || processWouldExit;\n\n      if (!caughtFirstError) {\n        // this is the first uncaught error and the ultimate reason for shutting down\n        // we want to do absolutely everything possible to ensure it gets captured\n        // also we want to make sure we don't go recursion crazy if more errors happen after this one\n        firstError = error;\n        caughtFirstError = true;\n\n        if (getClient() === client) {\n          captureException(error, {\n            originalException: error,\n            captureContext: {\n              level: 'fatal',\n            },\n            mechanism: {\n              handled: false,\n              type: 'onuncaughtexception',\n            },\n          });\n        }\n\n        if (!calledFatalError && shouldApplyFatalHandlingLogic) {\n          calledFatalError = true;\n          onFatalError(error);\n        }\n      } else {\n        if (shouldApplyFatalHandlingLogic) {\n          if (calledFatalError) {\n            // we hit an error *after* calling onFatalError - pretty boned at this point, just shut it down\n            DEBUG_BUILD &&\n              logger.warn(\n                'uncaught exception after calling fatal error shutdown callback - this is bad! forcing shutdown',\n              );\n            logAndExitProcess(error);\n          } else if (!caughtSecondError) {\n            // two cases for how we can hit this branch:\n            //   - capturing of first error blew up and we just caught the exception from that\n            //     - quit trying to capture, proceed with shutdown\n            //   - a second independent error happened while waiting for first error to capture\n            //     - want to avoid causing premature shutdown before first error capture finishes\n            // it's hard to immediately tell case 1 from case 2 without doing some fancy/questionable domain stuff\n            // so let's instead just delay a bit before we proceed with our action here\n            // in case 1, we just wait a bit unnecessarily but ultimately do the same thing\n            // in case 2, the delay hopefully made us wait long enough for the capture to finish\n            // two potential nonideal outcomes:\n            //   nonideal case 1: capturing fails fast, we sit around for a few seconds unnecessarily before proceeding correctly by calling onFatalError\n            //   nonideal case 2: case 2 happens, 1st error is captured but slowly, timeout completes before capture and we treat second error as the sendErr of (nonexistent) failure from trying to capture first error\n            // note that after hitting this branch, we might catch more errors where (caughtSecondError && !calledFatalError)\n            //   we ignore them - they don't matter to us, we're just waiting for the second error timeout to finish\n            caughtSecondError = true;\n            setTimeout(() => {\n              if (!calledFatalError) {\n                // it was probably case 1, let's treat err as the sendErr and call onFatalError\n                calledFatalError = true;\n                onFatalError(firstError, error);\n              }\n            }, timeout); // capturing could take at least sendTimeout to fail, plus an arbitrary second for how long it takes to collect surrounding source etc\n          }\n        }\n      }\n    },\n    { _errorHandler: true },\n  );\n}\n\nexport { OnUncaughtException, makeErrorHandler, onUncaughtExceptionIntegration };\n//# sourceMappingURL=onuncaughtexception.js.map\n","import { defineIntegration, convertIntegrationFnToClass, getClient, captureException } from '@sentry/core';\nimport { consoleSandbox } from '@sentry/utils';\nimport { logAndExitProcess } from './utils/errorhandling.js';\n\nconst INTEGRATION_NAME = 'OnUnhandledRejection';\n\nconst _onUnhandledRejectionIntegration = ((options = {}) => {\n  const mode = options.mode || 'warn';\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      global.process.on('unhandledRejection', makeUnhandledPromiseHandler(client, { mode }));\n    },\n  };\n}) ;\n\nconst onUnhandledRejectionIntegration = defineIntegration(_onUnhandledRejectionIntegration);\n\n/**\n * Global Promise Rejection handler.\n * @deprecated Use `onUnhandledRejectionIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst OnUnhandledRejection = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  onUnhandledRejectionIntegration,\n)\n\n;\n\n// eslint-disable-next-line deprecation/deprecation\n\n/**\n * Send an exception with reason\n * @param reason string\n * @param promise promise\n *\n * Exported only for tests.\n */\nfunction makeUnhandledPromiseHandler(\n  client,\n  options,\n) {\n  return function sendUnhandledPromise(reason, promise) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    captureException(reason, {\n      originalException: promise,\n      captureContext: {\n        extra: { unhandledPromiseRejection: true },\n      },\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n\n    handleRejection(reason, options);\n  };\n}\n\n/**\n * Handler for `mode` option\n\n */\nfunction handleRejection(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  reason,\n  options,\n) {\n  // https://github.com/nodejs/node/blob/7cf6f9e964aa00772965391c23acda6d71972a9a/lib/internal/process/promises.js#L234-L240\n  const rejectionWarning =\n    'This error originated either by ' +\n    'throwing inside of an async function without a catch block, ' +\n    'or by rejecting a promise which was not handled with .catch().' +\n    ' The promise rejected with the reason:';\n\n  /* eslint-disable no-console */\n  if (options.mode === 'warn') {\n    consoleSandbox(() => {\n      console.warn(rejectionWarning);\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      console.error(reason && reason.stack ? reason.stack : reason);\n    });\n  } else if (options.mode === 'strict') {\n    consoleSandbox(() => {\n      console.warn(rejectionWarning);\n    });\n    logAndExitProcess(reason);\n  }\n  /* eslint-enable no-console */\n}\n\nexport { OnUnhandledRejection, makeUnhandledPromiseHandler, onUnhandledRejectionIntegration };\n//# sourceMappingURL=onunhandledrejection.js.map\n","import { existsSync, readFileSync } from 'fs';\nimport { dirname, join } from 'path';\nimport { defineIntegration, convertIntegrationFnToClass } from '@sentry/core';\n\nlet moduleCache;\n\nconst INTEGRATION_NAME = 'Modules';\n\n/** Extract information about paths */\nfunction getPaths() {\n  try {\n    return require.cache ? Object.keys(require.cache ) : [];\n  } catch (e) {\n    return [];\n  }\n}\n\n/** Extract information about package.json modules */\nfunction collectModules()\n\n {\n  const mainPaths = (require.main && require.main.paths) || [];\n  const paths = getPaths();\n  const infos\n\n = {};\n  const seen\n\n = {};\n\n  paths.forEach(path => {\n    let dir = path;\n\n    /** Traverse directories upward in the search of package.json file */\n    const updir = () => {\n      const orig = dir;\n      dir = dirname(orig);\n\n      if (!dir || orig === dir || seen[orig]) {\n        return undefined;\n      }\n      if (mainPaths.indexOf(dir) < 0) {\n        return updir();\n      }\n\n      const pkgfile = join(orig, 'package.json');\n      seen[orig] = true;\n\n      if (!existsSync(pkgfile)) {\n        return updir();\n      }\n\n      try {\n        const info = JSON.parse(readFileSync(pkgfile, 'utf8'))\n\n;\n        infos[info.name] = info.version;\n      } catch (_oO) {\n        // no-empty\n      }\n    };\n\n    updir();\n  });\n\n  return infos;\n}\n\n/** Fetches the list of modules and the versions loaded by the entry file for your node.js app. */\nfunction _getModules() {\n  if (!moduleCache) {\n    moduleCache = collectModules();\n  }\n  return moduleCache;\n}\n\nconst _modulesIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event) {\n      event.modules = {\n        ...event.modules,\n        ..._getModules(),\n      };\n\n      return event;\n    },\n  };\n}) ;\n\nconst modulesIntegration = defineIntegration(_modulesIntegration);\n\n/**\n * Add node modules / packages to the event.\n * @deprecated Use `modulesIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Modules = convertIntegrationFnToClass(INTEGRATION_NAME, modulesIntegration)\n\n;\n\n// eslint-disable-next-line deprecation/deprecation\n\nexport { Modules, modulesIntegration };\n//# sourceMappingURL=modules.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport { readFile } from 'fs';\nimport { defineIntegration, convertIntegrationFnToClass } from '@sentry/core';\nimport { LRUMap, addContextToFrame } from '@sentry/utils';\n\nconst FILE_CONTENT_CACHE = new LRUMap(100);\nconst DEFAULT_LINES_OF_CONTEXT = 7;\nconst INTEGRATION_NAME = 'ContextLines';\n\n// TODO: Replace with promisify when minimum supported node >= v8\nfunction readTextFileAsync(path) {\n  return new Promise((resolve, reject) => {\n    readFile(path, 'utf8', (err, data) => {\n      if (err) reject(err);\n      else resolve(data);\n    });\n  });\n}\n\nconst _contextLinesIntegration = ((options = {}) => {\n  const contextLines = options.frameContextLines !== undefined ? options.frameContextLines : DEFAULT_LINES_OF_CONTEXT;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event) {\n      return addSourceContext(event, contextLines);\n    },\n  };\n}) ;\n\nconst contextLinesIntegration = defineIntegration(_contextLinesIntegration);\n\n/**\n * Add node modules / packages to the event.\n * @deprecated Use `contextLinesIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst ContextLines = convertIntegrationFnToClass(INTEGRATION_NAME, contextLinesIntegration)\n\n;\n\nasync function addSourceContext(event, contextLines) {\n  // keep a lookup map of which files we've already enqueued to read,\n  // so we don't enqueue the same file multiple times which would cause multiple i/o reads\n  const enqueuedReadSourceFileTasks = {};\n  const readSourceFileTasks = [];\n\n  if (contextLines > 0 && _optionalChain([event, 'access', _2 => _2.exception, 'optionalAccess', _3 => _3.values])) {\n    for (const exception of event.exception.values) {\n      if (!_optionalChain([exception, 'access', _4 => _4.stacktrace, 'optionalAccess', _5 => _5.frames])) {\n        continue;\n      }\n\n      // We want to iterate in reverse order as calling cache.get will bump the file in our LRU cache.\n      // This ends up prioritizes source context for frames at the top of the stack instead of the bottom.\n      for (let i = exception.stacktrace.frames.length - 1; i >= 0; i--) {\n        const frame = exception.stacktrace.frames[i];\n        // Call cache.get to bump the file to the top of the cache and ensure we have not already\n        // enqueued a read operation for this filename\n        if (frame.filename && !enqueuedReadSourceFileTasks[frame.filename] && !FILE_CONTENT_CACHE.get(frame.filename)) {\n          readSourceFileTasks.push(_readSourceFile(frame.filename));\n          enqueuedReadSourceFileTasks[frame.filename] = 1;\n        }\n      }\n    }\n  }\n\n  // check if files to read > 0, if so, await all of them to be read before adding source contexts.\n  // Normally, Promise.all here could be short circuited if one of the promises rejects, but we\n  // are guarding from that by wrapping the i/o read operation in a try/catch.\n  if (readSourceFileTasks.length > 0) {\n    await Promise.all(readSourceFileTasks);\n  }\n\n  // Perform the same loop as above, but this time we can assume all files are in the cache\n  // and attempt to add source context to frames.\n  if (contextLines > 0 && _optionalChain([event, 'access', _6 => _6.exception, 'optionalAccess', _7 => _7.values])) {\n    for (const exception of event.exception.values) {\n      if (exception.stacktrace && exception.stacktrace.frames) {\n        await addSourceContextToFrames(exception.stacktrace.frames, contextLines);\n      }\n    }\n  }\n\n  return event;\n}\n\n/** Adds context lines to frames */\nfunction addSourceContextToFrames(frames, contextLines) {\n  for (const frame of frames) {\n    // Only add context if we have a filename and it hasn't already been added\n    if (frame.filename && frame.context_line === undefined) {\n      const sourceFileLines = FILE_CONTENT_CACHE.get(frame.filename);\n\n      if (sourceFileLines) {\n        try {\n          addContextToFrame(sourceFileLines, frame, contextLines);\n        } catch (e) {\n          // anomaly, being defensive in case\n          // unlikely to ever happen in practice but can definitely happen in theory\n        }\n      }\n    }\n  }\n}\n\n// eslint-disable-next-line deprecation/deprecation\n\n/**\n * Reads file contents and caches them in a global LRU cache.\n * If reading fails, mark the file as null in the cache so we don't try again.\n *\n * @param filename filepath to read content from.\n */\nasync function _readSourceFile(filename) {\n  const cachedFile = FILE_CONTENT_CACHE.get(filename);\n\n  // We have already attempted to read this file and failed, do not try again\n  if (cachedFile === null) {\n    return null;\n  }\n\n  // We have a cache hit, return it\n  if (cachedFile !== undefined) {\n    return cachedFile;\n  }\n\n  // Guard from throwing if readFile fails, this enables us to use Promise.all and\n  // not have it short circuiting if one of the promises rejects + since context lines are added\n  // on a best effort basis, we want to throw here anyways.\n\n  // If we made it to here, it means that our file is not cache nor marked as failed, so attempt to read it\n  let content = null;\n  try {\n    const rawFileContents = await readTextFileAsync(filename);\n    content = rawFileContents.split('\\n');\n  } catch (_) {\n    // if we fail, we will mark the file as null in the cache and short circuit next time we try to read it\n  }\n\n  FILE_CONTENT_CACHE.set(filename, content);\n  return content;\n}\n\nexport { ContextLines, contextLinesIntegration };\n//# sourceMappingURL=contextlines.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport { execFile } from 'child_process';\nimport { readFile, readdir } from 'fs';\nimport * as os from 'os';\nimport { join } from 'path';\nimport { promisify } from 'util';\nimport { defineIntegration, convertIntegrationFnToClass } from '@sentry/core';\n\n/* eslint-disable max-lines */\n\n// TODO: Required until we drop support for Node v8\nconst readFileAsync = promisify(readFile);\nconst readDirAsync = promisify(readdir);\n\nconst INTEGRATION_NAME = 'Context';\n\nconst _nodeContextIntegration = ((options = {}) => {\n  let cachedContext;\n\n  const _options = {\n    app: true,\n    os: true,\n    device: true,\n    culture: true,\n    cloudResource: true,\n    ...options,\n  };\n\n  /** Add contexts to the event. Caches the context so we only look it up once. */\n  async function addContext(event) {\n    if (cachedContext === undefined) {\n      cachedContext = _getContexts();\n    }\n\n    const updatedContext = _updateContext(await cachedContext);\n\n    event.contexts = {\n      ...event.contexts,\n      app: { ...updatedContext.app, ..._optionalChain([event, 'access', _ => _.contexts, 'optionalAccess', _2 => _2.app]) },\n      os: { ...updatedContext.os, ..._optionalChain([event, 'access', _3 => _3.contexts, 'optionalAccess', _4 => _4.os]) },\n      device: { ...updatedContext.device, ..._optionalChain([event, 'access', _5 => _5.contexts, 'optionalAccess', _6 => _6.device]) },\n      culture: { ...updatedContext.culture, ..._optionalChain([event, 'access', _7 => _7.contexts, 'optionalAccess', _8 => _8.culture]) },\n      cloud_resource: { ...updatedContext.cloud_resource, ..._optionalChain([event, 'access', _9 => _9.contexts, 'optionalAccess', _10 => _10.cloud_resource]) },\n    };\n\n    return event;\n  }\n\n  /** Get the contexts from node. */\n  async function _getContexts() {\n    const contexts = {};\n\n    if (_options.os) {\n      contexts.os = await getOsContext();\n    }\n\n    if (_options.app) {\n      contexts.app = getAppContext();\n    }\n\n    if (_options.device) {\n      contexts.device = getDeviceContext(_options.device);\n    }\n\n    if (_options.culture) {\n      const culture = getCultureContext();\n\n      if (culture) {\n        contexts.culture = culture;\n      }\n    }\n\n    if (_options.cloudResource) {\n      contexts.cloud_resource = getCloudResourceContext();\n    }\n\n    return contexts;\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event) {\n      return addContext(event);\n    },\n  };\n}) ;\n\nconst nodeContextIntegration = defineIntegration(_nodeContextIntegration);\n\n/**\n * Add node modules / packages to the event.\n * @deprecated Use `nodeContextIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Context = convertIntegrationFnToClass(INTEGRATION_NAME, nodeContextIntegration)\n\n;\n\n// eslint-disable-next-line deprecation/deprecation\n\n/**\n * Updates the context with dynamic values that can change\n */\nfunction _updateContext(contexts) {\n  // Only update properties if they exist\n  if (_optionalChain([contexts, 'optionalAccess', _11 => _11.app, 'optionalAccess', _12 => _12.app_memory])) {\n    contexts.app.app_memory = process.memoryUsage().rss;\n  }\n\n  if (_optionalChain([contexts, 'optionalAccess', _13 => _13.device, 'optionalAccess', _14 => _14.free_memory])) {\n    contexts.device.free_memory = os.freemem();\n  }\n\n  return contexts;\n}\n\n/**\n * Returns the operating system context.\n *\n * Based on the current platform, this uses a different strategy to provide the\n * most accurate OS information. Since this might involve spawning subprocesses\n * or accessing the file system, this should only be executed lazily and cached.\n *\n *  - On macOS (Darwin), this will execute the `sw_vers` utility. The context\n *    has a `name`, `version`, `build` and `kernel_version` set.\n *  - On Linux, this will try to load a distribution release from `/etc` and set\n *    the `name`, `version` and `kernel_version` fields.\n *  - On all other platforms, only a `name` and `version` will be returned. Note\n *    that `version` might actually be the kernel version.\n */\nasync function getOsContext() {\n  const platformId = os.platform();\n  switch (platformId) {\n    case 'darwin':\n      return getDarwinInfo();\n    case 'linux':\n      return getLinuxInfo();\n    default:\n      return {\n        name: PLATFORM_NAMES[platformId] || platformId,\n        version: os.release(),\n      };\n  }\n}\n\nfunction getCultureContext() {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    if (typeof (process.versions ).icu !== 'string') {\n      // Node was built without ICU support\n      return;\n    }\n\n    // Check that node was built with full Intl support. Its possible it was built without support for non-English\n    // locales which will make resolvedOptions inaccurate\n    //\n    // https://nodejs.org/api/intl.html#detecting-internationalization-support\n    const january = new Date(9e8);\n    const spanish = new Intl.DateTimeFormat('es', { month: 'long' });\n    if (spanish.format(january) === 'enero') {\n      const options = Intl.DateTimeFormat().resolvedOptions();\n\n      return {\n        locale: options.locale,\n        timezone: options.timeZone,\n      };\n    }\n  } catch (err) {\n    //\n  }\n\n  return;\n}\n\nfunction getAppContext() {\n  const app_memory = process.memoryUsage().rss;\n  const app_start_time = new Date(Date.now() - process.uptime() * 1000).toISOString();\n\n  return { app_start_time, app_memory };\n}\n\n/**\n * Gets device information from os\n */\nfunction getDeviceContext(deviceOpt) {\n  const device = {};\n\n  // Sometimes os.uptime() throws due to lacking permissions: https://github.com/getsentry/sentry-javascript/issues/8202\n  let uptime;\n  try {\n    uptime = os.uptime && os.uptime();\n  } catch (e) {\n    // noop\n  }\n\n  // os.uptime or its return value seem to be undefined in certain environments (e.g. Azure functions).\n  // Hence, we only set boot time, if we get a valid uptime value.\n  // @see https://github.com/getsentry/sentry-javascript/issues/5856\n  if (typeof uptime === 'number') {\n    device.boot_time = new Date(Date.now() - uptime * 1000).toISOString();\n  }\n\n  device.arch = os.arch();\n\n  if (deviceOpt === true || deviceOpt.memory) {\n    device.memory_size = os.totalmem();\n    device.free_memory = os.freemem();\n  }\n\n  if (deviceOpt === true || deviceOpt.cpu) {\n    const cpuInfo = os.cpus();\n    if (cpuInfo && cpuInfo.length) {\n      const firstCpu = cpuInfo[0];\n\n      device.processor_count = cpuInfo.length;\n      device.cpu_description = firstCpu.model;\n      device.processor_frequency = firstCpu.speed;\n    }\n  }\n\n  return device;\n}\n\n/** Mapping of Node's platform names to actual OS names. */\nconst PLATFORM_NAMES = {\n  aix: 'IBM AIX',\n  freebsd: 'FreeBSD',\n  openbsd: 'OpenBSD',\n  sunos: 'SunOS',\n  win32: 'Windows',\n};\n\n/** Linux version file to check for a distribution. */\n\n/** Mapping of linux release files located in /etc to distributions. */\nconst LINUX_DISTROS = [\n  { name: 'fedora-release', distros: ['Fedora'] },\n  { name: 'redhat-release', distros: ['Red Hat Linux', 'Centos'] },\n  { name: 'redhat_version', distros: ['Red Hat Linux'] },\n  { name: 'SuSE-release', distros: ['SUSE Linux'] },\n  { name: 'lsb-release', distros: ['Ubuntu Linux', 'Arch Linux'] },\n  { name: 'debian_version', distros: ['Debian'] },\n  { name: 'debian_release', distros: ['Debian'] },\n  { name: 'arch-release', distros: ['Arch Linux'] },\n  { name: 'gentoo-release', distros: ['Gentoo Linux'] },\n  { name: 'novell-release', distros: ['SUSE Linux'] },\n  { name: 'alpine-release', distros: ['Alpine Linux'] },\n];\n\n/** Functions to extract the OS version from Linux release files. */\nconst LINUX_VERSIONS\n\n = {\n  alpine: content => content,\n  arch: content => matchFirst(/distrib_release=(.*)/, content),\n  centos: content => matchFirst(/release ([^ ]+)/, content),\n  debian: content => content,\n  fedora: content => matchFirst(/release (..)/, content),\n  mint: content => matchFirst(/distrib_release=(.*)/, content),\n  red: content => matchFirst(/release ([^ ]+)/, content),\n  suse: content => matchFirst(/VERSION = (.*)\\n/, content),\n  ubuntu: content => matchFirst(/distrib_release=(.*)/, content),\n};\n\n/**\n * Executes a regular expression with one capture group.\n *\n * @param regex A regular expression to execute.\n * @param text Content to execute the RegEx on.\n * @returns The captured string if matched; otherwise undefined.\n */\nfunction matchFirst(regex, text) {\n  const match = regex.exec(text);\n  return match ? match[1] : undefined;\n}\n\n/** Loads the macOS operating system context. */\nasync function getDarwinInfo() {\n  // Default values that will be used in case no operating system information\n  // can be loaded. The default version is computed via heuristics from the\n  // kernel version, but the build ID is missing.\n  const darwinInfo = {\n    kernel_version: os.release(),\n    name: 'Mac OS X',\n    version: `10.${Number(os.release().split('.')[0]) - 4}`,\n  };\n\n  try {\n    // We try to load the actual macOS version by executing the `sw_vers` tool.\n    // This tool should be available on every standard macOS installation. In\n    // case this fails, we stick with the values computed above.\n\n    const output = await new Promise((resolve, reject) => {\n      execFile('/usr/bin/sw_vers', (error, stdout) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n        resolve(stdout);\n      });\n    });\n\n    darwinInfo.name = matchFirst(/^ProductName:\\s+(.*)$/m, output);\n    darwinInfo.version = matchFirst(/^ProductVersion:\\s+(.*)$/m, output);\n    darwinInfo.build = matchFirst(/^BuildVersion:\\s+(.*)$/m, output);\n  } catch (e) {\n    // ignore\n  }\n\n  return darwinInfo;\n}\n\n/** Returns a distribution identifier to look up version callbacks. */\nfunction getLinuxDistroId(name) {\n  return name.split(' ')[0].toLowerCase();\n}\n\n/** Loads the Linux operating system context. */\nasync function getLinuxInfo() {\n  // By default, we cannot assume anything about the distribution or Linux\n  // version. `os.release()` returns the kernel version and we assume a generic\n  // \"Linux\" name, which will be replaced down below.\n  const linuxInfo = {\n    kernel_version: os.release(),\n    name: 'Linux',\n  };\n\n  try {\n    // We start guessing the distribution by listing files in the /etc\n    // directory. This is were most Linux distributions (except Knoppix) store\n    // release files with certain distribution-dependent meta data. We search\n    // for exactly one known file defined in `LINUX_DISTROS` and exit if none\n    // are found. In case there are more than one file, we just stick with the\n    // first one.\n    const etcFiles = await readDirAsync('/etc');\n    const distroFile = LINUX_DISTROS.find(file => etcFiles.includes(file.name));\n    if (!distroFile) {\n      return linuxInfo;\n    }\n\n    // Once that file is known, load its contents. To make searching in those\n    // files easier, we lowercase the file contents. Since these files are\n    // usually quite small, this should not allocate too much memory and we only\n    // hold on to it for a very short amount of time.\n    const distroPath = join('/etc', distroFile.name);\n    const contents = ((await readFileAsync(distroPath, { encoding: 'utf-8' })) ).toLowerCase();\n\n    // Some Linux distributions store their release information in the same file\n    // (e.g. RHEL and Centos). In those cases, we scan the file for an\n    // identifier, that basically consists of the first word of the linux\n    // distribution name (e.g. \"red\" for Red Hat). In case there is no match, we\n    // just assume the first distribution in our list.\n    const { distros } = distroFile;\n    linuxInfo.name = distros.find(d => contents.indexOf(getLinuxDistroId(d)) >= 0) || distros[0];\n\n    // Based on the found distribution, we can now compute the actual version\n    // number. This is different for every distribution, so several strategies\n    // are computed in `LINUX_VERSIONS`.\n    const id = getLinuxDistroId(linuxInfo.name);\n    linuxInfo.version = LINUX_VERSIONS[id](contents);\n  } catch (e) {\n    // ignore\n  }\n\n  return linuxInfo;\n}\n\n/**\n * Grabs some information about hosting provider based on best effort.\n */\nfunction getCloudResourceContext() {\n  if (process.env.VERCEL) {\n    // https://vercel.com/docs/concepts/projects/environment-variables/system-environment-variables#system-environment-variables\n    return {\n      'cloud.provider': 'vercel',\n      'cloud.region': process.env.VERCEL_REGION,\n    };\n  } else if (process.env.AWS_REGION) {\n    // https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html\n    return {\n      'cloud.provider': 'aws',\n      'cloud.region': process.env.AWS_REGION,\n      'cloud.platform': process.env.AWS_EXECUTION_ENV,\n    };\n  } else if (process.env.GCP_PROJECT) {\n    // https://cloud.google.com/composer/docs/how-to/managing/environment-variables#reserved_variables\n    return {\n      'cloud.provider': 'gcp',\n    };\n  } else if (process.env.ALIYUN_REGION_ID) {\n    // TODO: find where I found these environment variables - at least gc.github.com returns something\n    return {\n      'cloud.provider': 'alibaba_cloud',\n      'cloud.region': process.env.ALIYUN_REGION_ID,\n    };\n  } else if (process.env.WEBSITE_SITE_NAME && process.env.REGION_NAME) {\n    // https://learn.microsoft.com/en-us/azure/app-service/reference-app-settings?tabs=kudu%2Cdotnet#app-environment\n    return {\n      'cloud.provider': 'azure',\n      'cloud.region': process.env.REGION_NAME,\n    };\n  } else if (process.env.IBM_CLOUD_REGION) {\n    // TODO: find where I found these environment variables - at least gc.github.com returns something\n    return {\n      'cloud.provider': 'ibm_cloud',\n      'cloud.region': process.env.IBM_CLOUD_REGION,\n    };\n  } else if (process.env.TENCENTCLOUD_REGION) {\n    // https://www.tencentcloud.com/document/product/583/32748\n    return {\n      'cloud.provider': 'tencent_cloud',\n      'cloud.region': process.env.TENCENTCLOUD_REGION,\n      'cloud.account.id': process.env.TENCENTCLOUD_APPID,\n      'cloud.availability_zone': process.env.TENCENTCLOUD_ZONE,\n    };\n  } else if (process.env.NETLIFY) {\n    // https://docs.netlify.com/configure-builds/environment-variables/#read-only-variables\n    return {\n      'cloud.provider': 'netlify',\n    };\n  } else if (process.env.FLY_REGION) {\n    // https://fly.io/docs/reference/runtime-environment/\n    return {\n      'cloud.provider': 'fly.io',\n      'cloud.region': process.env.FLY_REGION,\n    };\n  } else if (process.env.DYNO) {\n    // https://devcenter.heroku.com/articles/dynos#local-environment-variables\n    return {\n      'cloud.provider': 'heroku',\n    };\n  } else {\n    return undefined;\n  }\n}\n\nexport { Context, getDeviceContext, nodeContextIntegration, readDirAsync, readFileAsync };\n//# sourceMappingURL=context.js.map\n","/**\n * This code was originally copied from the 'cookie` module at v0.5.0 and was simplified for our use case.\n * https://github.com/jshttp/cookie/blob/a0c84147aab6266bdb3996cf4062e93907c0b0fc/index.js\n * It had the following license:\n *\n * (The MIT License)\n *\n * Copyright (c) 2012-2014 Roman Shtylman <shtylman@gmail.com>\n * Copyright (c) 2015 Douglas Christopher Wilson <doug@somethingdoug.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Parses a cookie string\n */\nfunction parseCookie(str) {\n  const obj = {};\n  let index = 0;\n\n  while (index < str.length) {\n    const eqIdx = str.indexOf('=', index);\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break;\n    }\n\n    let endIdx = str.indexOf(';', index);\n\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1;\n      continue;\n    }\n\n    const key = str.slice(index, eqIdx).trim();\n\n    // only assign once\n    if (undefined === obj[key]) {\n      let val = str.slice(eqIdx + 1, endIdx).trim();\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1);\n      }\n\n      try {\n        obj[key] = val.indexOf('%') !== -1 ? decodeURIComponent(val) : val;\n      } catch (e) {\n        obj[key] = val;\n      }\n    }\n\n    index = endIdx + 1;\n  }\n\n  return obj;\n}\n\nexport { parseCookie };\n//# sourceMappingURL=cookie.js.map\n","/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\nexport { getNumberOfUrlSegments, getSanitizedUrlString, parseUrl, stripUrlQueryAndFragment };\n//# sourceMappingURL=url.js.map\n","import { parseCookie } from './cookie.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { isString, isPlainObject } from './is.js';\nimport { logger } from './logger.js';\nimport { normalize } from './normalize.js';\nimport { stripUrlQueryAndFragment } from './url.js';\n\nconst DEFAULT_INCLUDES = {\n  ip: false,\n  request: true,\n  transaction: true,\n  user: true,\n};\nconst DEFAULT_REQUEST_INCLUDES = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\nconst DEFAULT_USER_INCLUDES = ['id', 'username', 'email'];\n\n/**\n * Sets parameterized route as transaction name e.g.: `GET /users/:id`\n * Also adds more context data on the transaction from the request\n */\nfunction addRequestDataToTransaction(\n  transaction,\n  req,\n  deps,\n) {\n  if (!transaction) return;\n  // eslint-disable-next-line deprecation/deprecation\n  if (!transaction.metadata.source || transaction.metadata.source === 'url') {\n    // Attempt to grab a parameterized route off of the request\n    const [name, source] = extractPathForTransaction(req, { path: true, method: true });\n    transaction.updateName(name);\n    // TODO: SEMANTIC_ATTRIBUTE_SENTRY_SOURCE is in core, align this once we merge utils & core\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setMetadata({ source });\n  }\n  transaction.setAttribute('url', req.originalUrl || req.url);\n  if (req.baseUrl) {\n    transaction.setAttribute('baseUrl', req.baseUrl);\n  }\n  // TODO: We need to rewrite this to a flat format?\n  // eslint-disable-next-line deprecation/deprecation\n  transaction.setData('query', extractQueryParams(req, deps));\n}\n\n/**\n * Extracts a complete and parameterized path from the request object and uses it to construct transaction name.\n * If the parameterized transaction name cannot be extracted, we fall back to the raw URL.\n *\n * Additionally, this function determines and returns the transaction name source\n *\n * eg. GET /mountpoint/user/:id\n *\n * @param req A request object\n * @param options What to include in the transaction name (method, path, or a custom route name to be\n *                used instead of the request's route)\n *\n * @returns A tuple of the fully constructed transaction name [0] and its source [1] (can be either 'route' or 'url')\n */\nfunction extractPathForTransaction(\n  req,\n  options = {},\n) {\n  const method = req.method && req.method.toUpperCase();\n\n  let path = '';\n  let source = 'url';\n\n  // Check to see if there's a parameterized route we can use (as there is in Express)\n  if (options.customRoute || req.route) {\n    path = options.customRoute || `${req.baseUrl || ''}${req.route && req.route.path}`;\n    source = 'route';\n  }\n\n  // Otherwise, just take the original URL\n  else if (req.originalUrl || req.url) {\n    path = stripUrlQueryAndFragment(req.originalUrl || req.url || '');\n  }\n\n  let name = '';\n  if (options.method && method) {\n    name += method;\n  }\n  if (options.method && options.path) {\n    name += ' ';\n  }\n  if (options.path && path) {\n    name += path;\n  }\n\n  return [name, source];\n}\n\n/** JSDoc */\nfunction extractTransaction(req, type) {\n  switch (type) {\n    case 'path': {\n      return extractPathForTransaction(req, { path: true })[0];\n    }\n    case 'handler': {\n      return (req.route && req.route.stack && req.route.stack[0] && req.route.stack[0].name) || '<anonymous>';\n    }\n    case 'methodPath':\n    default: {\n      // if exist _reconstructedRoute return that path instead of route.path\n      const customRoute = req._reconstructedRoute ? req._reconstructedRoute : undefined;\n      return extractPathForTransaction(req, { path: true, method: true, customRoute })[0];\n    }\n  }\n}\n\n/** JSDoc */\nfunction extractUserData(\n  user\n\n,\n  keys,\n) {\n  const extractedUser = {};\n  const attributes = Array.isArray(keys) ? keys : DEFAULT_USER_INCLUDES;\n\n  attributes.forEach(key => {\n    if (user && key in user) {\n      extractedUser[key] = user[key];\n    }\n  });\n\n  return extractedUser;\n}\n\n/**\n * Normalize data from the request object, accounting for framework differences.\n *\n * @param req The request object from which to extract data\n * @param options.include An optional array of keys to include in the normalized data. Defaults to\n * DEFAULT_REQUEST_INCLUDES if not provided.\n * @param options.deps Injected, platform-specific dependencies\n * @returns An object containing normalized request data\n */\nfunction extractRequestData(\n  req,\n  options\n\n,\n) {\n  const { include = DEFAULT_REQUEST_INCLUDES, deps } = options || {};\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const requestData = {};\n\n  // headers:\n  //   node, express, koa, nextjs: req.headers\n  const headers = (req.headers || {})\n\n;\n  // method:\n  //   node, express, koa, nextjs: req.method\n  const method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node, nextjs: req.headers.host\n  // Express 4 mistakenly strips off port number from req.host / req.hostname so we can't rely on them\n  // See: https://github.com/expressjs/express/issues/3047#issuecomment-236653223\n  // Also: https://github.com/getsentry/sentry-javascript/issues/1917\n  const host = headers.host || req.hostname || req.host || '<no host>';\n  // protocol:\n  //   node, nextjs: <n/a>\n  //   express, koa: req.protocol\n  const protocol = req.protocol === 'https' || (req.socket && req.socket.encrypted) ? 'https' : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  const originalUrl = req.originalUrl || req.url || '';\n  // absolute url\n  const absoluteUrl = originalUrl.startsWith(protocol) ? originalUrl : `${protocol}://${host}${originalUrl}`;\n  include.forEach(key => {\n    switch (key) {\n      case 'headers': {\n        requestData.headers = headers;\n\n        // Remove the Cookie header in case cookie data should not be included in the event\n        if (!include.includes('cookies')) {\n          delete (requestData.headers ).cookie;\n        }\n\n        break;\n      }\n      case 'method': {\n        requestData.method = method;\n        break;\n      }\n      case 'url': {\n        requestData.url = absoluteUrl;\n        break;\n      }\n      case 'cookies': {\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware), nextjs: req.cookies\n        requestData.cookies =\n          // TODO (v8 / #5257): We're only sending the empty object for backwards compatibility, so the last bit can\n          // come off in v8\n          req.cookies || (headers.cookie && parseCookie(headers.cookie)) || {};\n        break;\n      }\n      case 'query_string': {\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa, nextjs: req.query\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        requestData.query_string = extractQueryParams(req, deps);\n        break;\n      }\n      case 'data': {\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // body data:\n        //   express, koa, nextjs: req.body\n        //\n        //   when using node by itself, you have to read the incoming stream(see\n        //   https://nodejs.dev/learn/get-http-request-body-data-using-nodejs); if a user is doing that, we can't know\n        //   where they're going to store the final result, so they'll have to capture this data themselves\n        if (req.body !== undefined) {\n          requestData.data = isString(req.body) ? req.body : JSON.stringify(normalize(req.body));\n        }\n        break;\n      }\n      default: {\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req )[key];\n        }\n      }\n    }\n  });\n\n  return requestData;\n}\n\n/**\n * Add data from the given request to the given event\n *\n * @param event The event to which the request data will be added\n * @param req Request object\n * @param options.include Flags to control what data is included\n * @param options.deps Injected platform-specific dependencies\n * @returns The mutated `Event` object\n */\nfunction addRequestDataToEvent(\n  event,\n  req,\n  options,\n) {\n  const include = {\n    ...DEFAULT_INCLUDES,\n    ...(options && options.include),\n  };\n\n  if (include.request) {\n    const extractedRequestData = Array.isArray(include.request)\n      ? extractRequestData(req, { include: include.request, deps: options && options.deps })\n      : extractRequestData(req, { deps: options && options.deps });\n\n    event.request = {\n      ...event.request,\n      ...extractedRequestData,\n    };\n  }\n\n  if (include.user) {\n    const extractedUser = req.user && isPlainObject(req.user) ? extractUserData(req.user, include.user) : {};\n\n    if (Object.keys(extractedUser).length) {\n      event.user = {\n        ...event.user,\n        ...extractedUser,\n      };\n    }\n  }\n\n  // client ip:\n  //   node, nextjs: req.socket.remoteAddress\n  //   express, koa: req.ip\n  if (include.ip) {\n    const ip = req.ip || (req.socket && req.socket.remoteAddress);\n    if (ip) {\n      event.user = {\n        ...event.user,\n        ip_address: ip,\n      };\n    }\n  }\n\n  if (include.transaction && !event.transaction) {\n    // TODO do we even need this anymore?\n    // TODO make this work for nextjs\n    event.transaction = extractTransaction(req, include.transaction);\n  }\n\n  return event;\n}\n\nfunction extractQueryParams(\n  req,\n  deps,\n) {\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  let originalUrl = req.originalUrl || req.url || '';\n\n  if (!originalUrl) {\n    return;\n  }\n\n  // The `URL` constructor can't handle internal URLs of the form `/some/path/here`, so stick a dummy protocol and\n  // hostname on the beginning. Since the point here is just to grab the query string, it doesn't matter what we use.\n  if (originalUrl.startsWith('/')) {\n    originalUrl = `http://dogs.are.great${originalUrl}`;\n  }\n\n  try {\n    return (\n      req.query ||\n      (typeof URL !== 'undefined' && new URL(originalUrl).search.slice(1)) ||\n      // In Node 8, `URL` isn't in the global scope, so we have to use the built-in module from Node\n      (deps && deps.url && deps.url.parse(originalUrl).query) ||\n      undefined\n    );\n  } catch (e2) {\n    return undefined;\n  }\n}\n\n/**\n * Transforms a `Headers` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into a simple key-value dict.\n * The header keys will be lower case: e.g. A \"Content-Type\" header will be stored as \"content-type\".\n */\n// TODO(v8): Make this function return undefined when the extraction fails.\nfunction winterCGHeadersToDict(winterCGHeaders) {\n  const headers = {};\n  try {\n    winterCGHeaders.forEach((value, key) => {\n      if (typeof value === 'string') {\n        // We check that value is a string even though it might be redundant to make sure prototype pollution is not possible.\n        headers[key] = value;\n      }\n    });\n  } catch (e) {\n    DEBUG_BUILD &&\n      logger.warn('Sentry failed extracting headers from a request object. If you see this, please file an issue.');\n  }\n\n  return headers;\n}\n\n/**\n * Converts a `Request` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into the format that the `RequestData` integration understands.\n */\nfunction winterCGRequestToRequestData(req) {\n  const headers = winterCGHeadersToDict(req.headers);\n  return {\n    method: req.method,\n    url: req.url,\n    headers,\n  };\n}\n\nexport { DEFAULT_USER_INCLUDES, addRequestDataToEvent, addRequestDataToTransaction, extractPathForTransaction, extractRequestData, winterCGHeadersToDict, winterCGRequestToRequestData };\n//# sourceMappingURL=requestdata.js.map\n","import { extractPathForTransaction, addRequestDataToEvent } from '@sentry/utils';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration.js';\nimport { spanToJSON } from '../utils/spanUtils.js';\n\nconst DEFAULT_OPTIONS = {\n  include: {\n    cookies: true,\n    data: true,\n    headers: true,\n    ip: false,\n    query_string: true,\n    url: true,\n    user: {\n      id: true,\n      username: true,\n      email: true,\n    },\n  },\n  transactionNamingScheme: 'methodPath',\n};\n\nconst INTEGRATION_NAME = 'RequestData';\n\nconst _requestDataIntegration = ((options = {}) => {\n  const _addRequestData = addRequestDataToEvent;\n  const _options = {\n    ...DEFAULT_OPTIONS,\n    ...options,\n    include: {\n      // @ts-expect-error It's mad because `method` isn't a known `include` key. (It's only here and not set by default in\n      // `addRequestDataToEvent` for legacy reasons. TODO (v8): Change that.)\n      method: true,\n      ...DEFAULT_OPTIONS.include,\n      ...options.include,\n      user:\n        options.include && typeof options.include.user === 'boolean'\n          ? options.include.user\n          : {\n              ...DEFAULT_OPTIONS.include.user,\n              // Unclear why TS still thinks `options.include.user` could be a boolean at this point\n              ...((options.include || {}).user ),\n            },\n    },\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event, _hint, client) {\n      // Note: In the long run, most of the logic here should probably move into the request data utility functions. For\n      // the moment it lives here, though, until https://github.com/getsentry/sentry-javascript/issues/5718 is addressed.\n      // (TL;DR: Those functions touch many parts of the repo in many different ways, and need to be clened up. Once\n      // that's happened, it will be easier to add this logic in without worrying about unexpected side effects.)\n      const { transactionNamingScheme } = _options;\n\n      const { sdkProcessingMetadata = {} } = event;\n      const req = sdkProcessingMetadata.request;\n\n      if (!req) {\n        return event;\n      }\n\n      // The Express request handler takes a similar `include` option to that which can be passed to this integration.\n      // If passed there, we store it in `sdkProcessingMetadata`. TODO(v8): Force express and GCP people to use this\n      // integration, so that all of this passing and conversion isn't necessary\n      const addRequestDataOptions =\n        sdkProcessingMetadata.requestDataOptionsFromExpressHandler ||\n        sdkProcessingMetadata.requestDataOptionsFromGCPWrapper ||\n        convertReqDataIntegrationOptsToAddReqDataOpts(_options);\n\n      const processedEvent = _addRequestData(event, req, addRequestDataOptions);\n\n      // Transaction events already have the right `transaction` value\n      if (event.type === 'transaction' || transactionNamingScheme === 'handler') {\n        return processedEvent;\n      }\n\n      // In all other cases, use the request's associated transaction (if any) to overwrite the event's `transaction`\n      // value with a high-quality one\n      const reqWithTransaction = req ;\n      const transaction = reqWithTransaction._sentryTransaction;\n      if (transaction) {\n        const name = spanToJSON(transaction).description || '';\n\n        // TODO (v8): Remove the nextjs check and just base it on `transactionNamingScheme` for all SDKs. (We have to\n        // keep it the way it is for the moment, because changing the names of transactions in Sentry has the potential\n        // to break things like alert rules.)\n        const shouldIncludeMethodInTransactionName =\n          getSDKName(client) === 'sentry.javascript.nextjs'\n            ? name.startsWith('/api')\n            : transactionNamingScheme !== 'path';\n\n        const [transactionValue] = extractPathForTransaction(req, {\n          path: true,\n          method: shouldIncludeMethodInTransactionName,\n          customRoute: name,\n        });\n\n        processedEvent.transaction = transactionValue;\n      }\n\n      return processedEvent;\n    },\n  };\n}) ;\n\nconst requestDataIntegration = defineIntegration(_requestDataIntegration);\n\n/**\n * Add data about a request to an event. Primarily for use in Node-based SDKs, but included in `@sentry/integrations`\n * so it can be used in cross-platform SDKs like `@sentry/nextjs`.\n * @deprecated Use `requestDataIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst RequestData = convertIntegrationFnToClass(INTEGRATION_NAME, requestDataIntegration)\n\n;\n\n/** Convert this integration's options to match what `addRequestDataToEvent` expects */\n/** TODO: Can possibly be deleted once https://github.com/getsentry/sentry-javascript/issues/5718 is fixed */\nfunction convertReqDataIntegrationOptsToAddReqDataOpts(\n  integrationOptions,\n) {\n  const {\n    transactionNamingScheme,\n    include: { ip, user, ...requestOptions },\n  } = integrationOptions;\n\n  const requestIncludeKeys = [];\n  for (const [key, value] of Object.entries(requestOptions)) {\n    if (value) {\n      requestIncludeKeys.push(key);\n    }\n  }\n\n  let addReqDataUserOpt;\n  if (user === undefined) {\n    addReqDataUserOpt = true;\n  } else if (typeof user === 'boolean') {\n    addReqDataUserOpt = user;\n  } else {\n    const userIncludeKeys = [];\n    for (const [key, value] of Object.entries(user)) {\n      if (value) {\n        userIncludeKeys.push(key);\n      }\n    }\n    addReqDataUserOpt = userIncludeKeys;\n  }\n\n  return {\n    include: {\n      ip,\n      user: addReqDataUserOpt,\n      request: requestIncludeKeys.length !== 0 ? requestIncludeKeys : undefined,\n      transaction: transactionNamingScheme,\n    },\n  };\n}\n\nfunction getSDKName(client) {\n  try {\n    // For a long chain like this, it's fewer bytes to combine a try-catch with assuming everything is there than to\n    // write out a long chain of `a && a.b && a.b.c && ...`\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return client.getOptions()._metadata.sdk.name;\n  } catch (err) {\n    // In theory we should never get here\n    return undefined;\n  }\n}\n\nexport { RequestData, requestDataIntegration };\n//# sourceMappingURL=requestdata.js.map\n","/**\n * Creates a rate limiter that will call the disable callback when the rate limit is reached and the enable callback\n * when a timeout has occurred.\n * @param maxPerSecond Maximum number of calls per second\n * @param enable Callback to enable capture\n * @param disable Callback to disable capture\n * @returns A function to call to increment the rate limiter count\n */\nfunction createRateLimiter(\n  maxPerSecond,\n  enable,\n  disable,\n) {\n  let count = 0;\n  let retrySeconds = 5;\n  let disabledTimeout = 0;\n\n  setInterval(() => {\n    if (disabledTimeout === 0) {\n      if (count > maxPerSecond) {\n        retrySeconds *= 2;\n        disable(retrySeconds);\n\n        // Cap at one day\n        if (retrySeconds > 86400) {\n          retrySeconds = 86400;\n        }\n        disabledTimeout = retrySeconds;\n      }\n    } else {\n      disabledTimeout -= 1;\n\n      if (disabledTimeout === 0) {\n        enable();\n      }\n    }\n\n    count = 0;\n  }, 1000).unref();\n\n  return () => {\n    count += 1;\n  };\n}\n\n// Add types for the exception event data\n\n/** Could this be an anonymous function? */\nfunction isAnonymous(name) {\n  return name !== undefined && (name.length === 0 || name === '?' || name === '<anonymous>');\n}\n\n/** Do the function names appear to match? */\nfunction functionNamesMatch(a, b) {\n  return a === b || (isAnonymous(a) && isAnonymous(b));\n}\n\n/** Creates a unique hash from stack frames */\nfunction hashFrames(frames) {\n  if (frames === undefined) {\n    return;\n  }\n\n  // Only hash the 10 most recent frames (ie. the last 10)\n  return frames.slice(-10).reduce((acc, frame) => `${acc},${frame.function},${frame.lineno},${frame.colno}`, '');\n}\n\n/**\n * We use the stack parser to create a unique hash from the exception stack trace\n * This is used to lookup vars when the exception passes through the event processor\n */\nfunction hashFromStack(stackParser, stack) {\n  if (stack === undefined) {\n    return undefined;\n  }\n\n  return hashFrames(stackParser(stack, 1));\n}\n\nexport { createRateLimiter, functionNamesMatch, hashFrames, hashFromStack, isAnonymous };\n//# sourceMappingURL=common.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport { defineIntegration, convertIntegrationFnToClass, getClient } from '@sentry/core';\nimport { LRUMap, logger } from '@sentry/utils';\nimport { NODE_VERSION } from '../../nodeVersion.js';\nimport { createRateLimiter, hashFromStack, hashFrames, functionNamesMatch } from './common.js';\n\n/* eslint-disable max-lines */\n\n/** Creates a container for callbacks to be called sequentially */\nfunction createCallbackList(complete) {\n  // A collection of callbacks to be executed last to first\n  let callbacks = [];\n\n  let completedCalled = false;\n  function checkedComplete(result) {\n    callbacks = [];\n    if (completedCalled) {\n      return;\n    }\n    completedCalled = true;\n    complete(result);\n  }\n\n  // complete should be called last\n  callbacks.push(checkedComplete);\n\n  function add(fn) {\n    callbacks.push(fn);\n  }\n\n  function next(result) {\n    const popped = callbacks.pop() || checkedComplete;\n\n    try {\n      popped(result);\n    } catch (_) {\n      // If there is an error, we still want to call the complete callback\n      checkedComplete(result);\n    }\n  }\n\n  return { add, next };\n}\n\n/**\n * Promise API is available as `Experimental` and in Node 19 only.\n *\n * Callback-based API is `Stable` since v14 and `Experimental` since v8.\n * Because of that, we are creating our own `AsyncSession` class.\n *\n * https://nodejs.org/docs/latest-v19.x/api/inspector.html#promises-api\n * https://nodejs.org/docs/latest-v14.x/api/inspector.html\n */\nclass AsyncSession  {\n\n  /** Throws if inspector API is not available */\n   constructor() {\n    /*\n    TODO: We really should get rid of this require statement below for a couple of reasons:\n    1. It makes the integration unusable in the SvelteKit SDK, as it's not possible to use `require`\n       in SvelteKit server code (at least not by default).\n    2. Throwing in a constructor is bad practice\n\n    More context for a future attempt to fix this:\n    We already tried replacing it with import but didn't get it to work because of async problems.\n    We still called import in the constructor but assigned to a promise which we \"awaited\" in\n    `configureAndConnect`. However, this broke the Node integration tests as no local variables\n    were reported any more. We probably missed a place where we need to await the promise, too.\n    */\n\n    // Node can be built without inspector support so this can throw\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { Session } = require('inspector');\n    this._session = new Session();\n  }\n\n  /** @inheritdoc */\n   configureAndConnect(onPause, captureAll) {\n    this._session.connect();\n\n    this._session.on('Debugger.paused', event => {\n      onPause(event, () => {\n        // After the pause work is complete, resume execution or the exception context memory is leaked\n        this._session.post('Debugger.resume');\n      });\n    });\n\n    this._session.post('Debugger.enable');\n    this._session.post('Debugger.setPauseOnExceptions', { state: captureAll ? 'all' : 'uncaught' });\n  }\n\n   setPauseOnExceptions(captureAll) {\n    this._session.post('Debugger.setPauseOnExceptions', { state: captureAll ? 'all' : 'uncaught' });\n  }\n\n  /** @inheritdoc */\n   getLocalVariables(objectId, complete) {\n    this._getProperties(objectId, props => {\n      const { add, next } = createCallbackList(complete);\n\n      for (const prop of props) {\n        if (_optionalChain([prop, 'optionalAccess', _2 => _2.value, 'optionalAccess', _3 => _3.objectId]) && _optionalChain([prop, 'optionalAccess', _4 => _4.value, 'access', _5 => _5.className]) === 'Array') {\n          const id = prop.value.objectId;\n          add(vars => this._unrollArray(id, prop.name, vars, next));\n        } else if (_optionalChain([prop, 'optionalAccess', _6 => _6.value, 'optionalAccess', _7 => _7.objectId]) && _optionalChain([prop, 'optionalAccess', _8 => _8.value, 'optionalAccess', _9 => _9.className]) === 'Object') {\n          const id = prop.value.objectId;\n          add(vars => this._unrollObject(id, prop.name, vars, next));\n        } else if (_optionalChain([prop, 'optionalAccess', _10 => _10.value, 'optionalAccess', _11 => _11.value]) != null || _optionalChain([prop, 'optionalAccess', _12 => _12.value, 'optionalAccess', _13 => _13.description]) != null) {\n          add(vars => this._unrollOther(prop, vars, next));\n        }\n      }\n\n      next({});\n    });\n  }\n\n  /**\n   * Gets all the PropertyDescriptors of an object\n   */\n   _getProperties(objectId, next) {\n    this._session.post(\n      'Runtime.getProperties',\n      {\n        objectId,\n        ownProperties: true,\n      },\n      (err, params) => {\n        if (err) {\n          next([]);\n        } else {\n          next(params.result);\n        }\n      },\n    );\n  }\n\n  /**\n   * Unrolls an array property\n   */\n   _unrollArray(objectId, name, vars, next) {\n    this._getProperties(objectId, props => {\n      vars[name] = props\n        .filter(v => v.name !== 'length' && !isNaN(parseInt(v.name, 10)))\n        .sort((a, b) => parseInt(a.name, 10) - parseInt(b.name, 10))\n        .map(v => _optionalChain([v, 'optionalAccess', _14 => _14.value, 'optionalAccess', _15 => _15.value]));\n\n      next(vars);\n    });\n  }\n\n  /**\n   * Unrolls an object property\n   */\n   _unrollObject(objectId, name, vars, next) {\n    this._getProperties(objectId, props => {\n      vars[name] = props\n        .map(v => [v.name, _optionalChain([v, 'optionalAccess', _16 => _16.value, 'optionalAccess', _17 => _17.value])])\n        .reduce((obj, [key, val]) => {\n          obj[key] = val;\n          return obj;\n        }, {} );\n\n      next(vars);\n    });\n  }\n\n  /**\n   * Unrolls other properties\n   */\n   _unrollOther(prop, vars, next) {\n    if (_optionalChain([prop, 'optionalAccess', _18 => _18.value, 'optionalAccess', _19 => _19.value]) != null) {\n      vars[prop.name] = prop.value.value;\n    } else if (_optionalChain([prop, 'optionalAccess', _20 => _20.value, 'optionalAccess', _21 => _21.description]) != null && _optionalChain([prop, 'optionalAccess', _22 => _22.value, 'optionalAccess', _23 => _23.type]) !== 'function') {\n      vars[prop.name] = `<${prop.value.description}>`;\n    }\n\n    next(vars);\n  }\n}\n\n/**\n * When using Vercel pkg, the inspector module is not available.\n * https://github.com/getsentry/sentry-javascript/issues/6769\n */\nfunction tryNewAsyncSession() {\n  try {\n    return new AsyncSession();\n  } catch (e) {\n    return undefined;\n  }\n}\n\nconst INTEGRATION_NAME = 'LocalVariables';\n\n/**\n * Adds local variables to exception frames\n */\nconst _localVariablesSyncIntegration = ((\n  options = {},\n  session = tryNewAsyncSession(),\n) => {\n  const cachedFrames = new LRUMap(20);\n  let rateLimiter;\n  let shouldProcessEvent = false;\n\n  function handlePaused(\n    stackParser,\n    { params: { reason, data, callFrames } },\n    complete,\n  ) {\n    if (reason !== 'exception' && reason !== 'promiseRejection') {\n      complete();\n      return;\n    }\n\n    _optionalChain([rateLimiter, 'optionalCall', _24 => _24()]);\n\n    // data.description contains the original error.stack\n    const exceptionHash = hashFromStack(stackParser, _optionalChain([data, 'optionalAccess', _25 => _25.description]));\n\n    if (exceptionHash == undefined) {\n      complete();\n      return;\n    }\n\n    const { add, next } = createCallbackList(frames => {\n      cachedFrames.set(exceptionHash, frames);\n      complete();\n    });\n\n    // Because we're queuing up and making all these calls synchronously, we can potentially overflow the stack\n    // For this reason we only attempt to get local variables for the first 5 frames\n    for (let i = 0; i < Math.min(callFrames.length, 5); i++) {\n      const { scopeChain, functionName, this: obj } = callFrames[i];\n\n      const localScope = scopeChain.find(scope => scope.type === 'local');\n\n      // obj.className is undefined in ESM modules\n      const fn = obj.className === 'global' || !obj.className ? functionName : `${obj.className}.${functionName}`;\n\n      if (_optionalChain([localScope, 'optionalAccess', _26 => _26.object, 'access', _27 => _27.objectId]) === undefined) {\n        add(frames => {\n          frames[i] = { function: fn };\n          next(frames);\n        });\n      } else {\n        const id = localScope.object.objectId;\n        add(frames =>\n          _optionalChain([session, 'optionalAccess', _28 => _28.getLocalVariables, 'call', _29 => _29(id, vars => {\n            frames[i] = { function: fn, vars };\n            next(frames);\n          })]),\n        );\n      }\n    }\n\n    next([]);\n  }\n\n  function addLocalVariablesToException(exception) {\n    const hash = hashFrames(_optionalChain([exception, 'optionalAccess', _30 => _30.stacktrace, 'optionalAccess', _31 => _31.frames]));\n\n    if (hash === undefined) {\n      return;\n    }\n\n    // Check if we have local variables for an exception that matches the hash\n    // remove is identical to get but also removes the entry from the cache\n    const cachedFrame = cachedFrames.remove(hash);\n\n    if (cachedFrame === undefined) {\n      return;\n    }\n\n    // Filter out frames where the function name is `new Promise` since these are in the error.stack frames\n    // but do not appear in the debugger call frames\n    const frames = (_optionalChain([exception, 'access', _32 => _32.stacktrace, 'optionalAccess', _33 => _33.frames]) || []).filter(frame => frame.function !== 'new Promise');\n\n    for (let i = 0; i < frames.length; i++) {\n      // Sentry frames are in reverse order\n      const frameIndex = frames.length - i - 1;\n\n      // Drop out if we run out of frames to match up\n      if (!frames[frameIndex] || !cachedFrame[i]) {\n        break;\n      }\n\n      if (\n        // We need to have vars to add\n        cachedFrame[i].vars === undefined ||\n        // We're not interested in frames that are not in_app because the vars are not relevant\n        frames[frameIndex].in_app === false ||\n        // The function names need to match\n        !functionNamesMatch(frames[frameIndex].function, cachedFrame[i].function)\n      ) {\n        continue;\n      }\n\n      frames[frameIndex].vars = cachedFrame[i].vars;\n    }\n  }\n\n  function addLocalVariablesToEvent(event) {\n    for (const exception of _optionalChain([event, 'optionalAccess', _34 => _34.exception, 'optionalAccess', _35 => _35.values]) || []) {\n      addLocalVariablesToException(exception);\n    }\n\n    return event;\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      const client = getClient();\n      const clientOptions = _optionalChain([client, 'optionalAccess', _36 => _36.getOptions, 'call', _37 => _37()]);\n\n      if (session && _optionalChain([clientOptions, 'optionalAccess', _38 => _38.includeLocalVariables])) {\n        // Only setup this integration if the Node version is >= v18\n        // https://github.com/getsentry/sentry-javascript/issues/7697\n        const unsupportedNodeVersion = NODE_VERSION.major < 18;\n\n        if (unsupportedNodeVersion) {\n          logger.log('The `LocalVariables` integration is only supported on Node >= v18.');\n          return;\n        }\n\n        const captureAll = options.captureAllExceptions !== false;\n\n        session.configureAndConnect(\n          (ev, complete) =>\n            handlePaused(clientOptions.stackParser, ev , complete),\n          captureAll,\n        );\n\n        if (captureAll) {\n          const max = options.maxExceptionsPerSecond || 50;\n\n          rateLimiter = createRateLimiter(\n            max,\n            () => {\n              logger.log('Local variables rate-limit lifted.');\n              _optionalChain([session, 'optionalAccess', _39 => _39.setPauseOnExceptions, 'call', _40 => _40(true)]);\n            },\n            seconds => {\n              logger.log(\n                `Local variables rate-limit exceeded. Disabling capturing of caught exceptions for ${seconds} seconds.`,\n              );\n              _optionalChain([session, 'optionalAccess', _41 => _41.setPauseOnExceptions, 'call', _42 => _42(false)]);\n            },\n          );\n        }\n\n        shouldProcessEvent = true;\n      }\n    },\n    processEvent(event) {\n      if (shouldProcessEvent) {\n        return addLocalVariablesToEvent(event);\n      }\n\n      return event;\n    },\n    // These are entirely for testing\n    _getCachedFramesCount() {\n      return cachedFrames.size;\n    },\n    _getFirstCachedFrame() {\n      return cachedFrames.values()[0];\n    },\n  };\n}) ;\n\nconst localVariablesSyncIntegration = defineIntegration(_localVariablesSyncIntegration);\n\n/**\n * Adds local variables to exception frames.\n * @deprecated Use `localVariablesSyncIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst LocalVariablesSync = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  localVariablesSyncIntegration,\n)\n\n;\n\n// eslint-disable-next-line deprecation/deprecation\n\nexport { LocalVariablesSync, createCallbackList, localVariablesSyncIntegration };\n//# sourceMappingURL=local-variables-sync.js.map\n","import { LocalVariablesSync, localVariablesSyncIntegration } from './local-variables-sync.js';\n\n/**\n * Adds local variables to exception frames.\n *\n * @deprecated Use `localVariablesIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst LocalVariables = LocalVariablesSync;\n// eslint-disable-next-line deprecation/deprecation\n\nconst localVariablesIntegration = localVariablesSyncIntegration;\n\nexport { LocalVariables, localVariablesIntegration };\n//# sourceMappingURL=index.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport { defineIntegration, hasTracingEnabled, getClient, isSentryRequestUrl, getCurrentScope, getIsolationScope, getActiveSpan, spanToTraceHeader, getDynamicSamplingContextFromSpan, getDynamicSamplingContextFromClient, setHttpStatus, addBreadcrumb } from '@sentry/core';\nimport { LRUMap, generateSentryTraceHeader, dynamicSamplingContextToSentryBaggageHeader, parseUrl, stringMatchesSomePattern, getSanitizedUrlString } from '@sentry/utils';\nimport { NODE_VERSION } from '../../nodeVersion.js';\n\nvar ChannelName;(function (ChannelName) {\n  // https://github.com/nodejs/undici/blob/e6fc80f809d1217814c044f52ed40ef13f21e43c/docs/api/DiagnosticsChannel.md#undicirequestcreate\n  const RequestCreate = 'undici:request:create'; ChannelName[\"RequestCreate\"] = RequestCreate;\n  const RequestEnd = 'undici:request:headers'; ChannelName[\"RequestEnd\"] = RequestEnd;\n  const RequestError = 'undici:request:error'; ChannelName[\"RequestError\"] = RequestError;\n})(ChannelName || (ChannelName = {}));\n\n// Please note that you cannot use `console.log` to debug the callbacks registered to the `diagnostics_channel` API.\n// To debug, you can use `writeFileSync` to write to a file:\n// https://nodejs.org/api/async_hooks.html#printing-in-asynchook-callbacks\n//\n// import { writeFileSync } from 'fs';\n// import { format } from 'util';\n//\n// function debug(...args: any): void {\n//   // Use a function like this one when debugging inside an AsyncHook callback\n//   // @ts-expect-error any\n//   writeFileSync('log.out', `${format(...args)}\\n`, { flag: 'a' });\n// }\n\nconst _nativeNodeFetchintegration = ((options) => {\n  // eslint-disable-next-line deprecation/deprecation\n  return new Undici(options) ;\n}) ;\n\nconst nativeNodeFetchintegration = defineIntegration(_nativeNodeFetchintegration);\n\n/**\n * Instruments outgoing HTTP requests made with the `undici` package via\n * Node's `diagnostics_channel` API.\n *\n * Supports Undici 4.7.0 or higher.\n *\n * Requires Node 16.17.0 or higher.\n *\n * @deprecated Use `nativeNodeFetchintegration()` instead.\n */\nclass Undici  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Undici';}\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n   __init() {this.name = Undici.id;}\n\n    __init2() {this._createSpanUrlMap = new LRUMap(100);}\n    __init3() {this._headersUrlMap = new LRUMap(100);}\n\n   constructor(_options = {}) {Undici.prototype.__init.call(this);Undici.prototype.__init2.call(this);Undici.prototype.__init3.call(this);Undici.prototype.__init4.call(this);Undici.prototype.__init5.call(this);Undici.prototype.__init6.call(this);\n    this._options = {\n      breadcrumbs: _options.breadcrumbs === undefined ? true : _options.breadcrumbs,\n      tracing: _options.tracing,\n      shouldCreateSpanForRequest: _options.shouldCreateSpanForRequest,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_addGlobalEventProcessor) {\n    // Requires Node 16+ to use the diagnostics_channel API.\n    if (NODE_VERSION.major < 16) {\n      return;\n    }\n\n    let ds;\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      ds = require('diagnostics_channel') ;\n    } catch (e) {\n      // no-op\n    }\n\n    if (!ds || !ds.subscribe) {\n      return;\n    }\n\n    // https://github.com/nodejs/undici/blob/e6fc80f809d1217814c044f52ed40ef13f21e43c/docs/api/DiagnosticsChannel.md\n    ds.subscribe(ChannelName.RequestCreate, this._onRequestCreate);\n    ds.subscribe(ChannelName.RequestEnd, this._onRequestEnd);\n    ds.subscribe(ChannelName.RequestError, this._onRequestError);\n  }\n\n  /** Helper that wraps shouldCreateSpanForRequest option */\n   _shouldCreateSpan(url) {\n    if (this._options.tracing === false || (this._options.tracing === undefined && !hasTracingEnabled())) {\n      return false;\n    }\n\n    if (this._options.shouldCreateSpanForRequest === undefined) {\n      return true;\n    }\n\n    const cachedDecision = this._createSpanUrlMap.get(url);\n    if (cachedDecision !== undefined) {\n      return cachedDecision;\n    }\n\n    const decision = this._options.shouldCreateSpanForRequest(url);\n    this._createSpanUrlMap.set(url, decision);\n    return decision;\n  }\n\n   __init4() {this._onRequestCreate = (message) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!_optionalChain([getClient, 'call', _10 => _10(), 'optionalAccess', _11 => _11.getIntegration, 'call', _12 => _12(Undici)])) {\n      return;\n    }\n\n    const { request } = message ;\n\n    const stringUrl = request.origin ? request.origin.toString() + request.path : request.path;\n\n    const client = getClient();\n    if (!client) {\n      return;\n    }\n\n    if (isSentryRequestUrl(stringUrl, client) || request.__sentry_span__ !== undefined) {\n      return;\n    }\n\n    const clientOptions = client.getOptions();\n    const scope = getCurrentScope();\n    const isolationScope = getIsolationScope();\n    const parentSpan = getActiveSpan();\n\n    const span = this._shouldCreateSpan(stringUrl) ? createRequestSpan(parentSpan, request, stringUrl) : undefined;\n    if (span) {\n      request.__sentry_span__ = span;\n    }\n\n    const shouldAttachTraceData = (url) => {\n      if (clientOptions.tracePropagationTargets === undefined) {\n        return true;\n      }\n\n      const cachedDecision = this._headersUrlMap.get(url);\n      if (cachedDecision !== undefined) {\n        return cachedDecision;\n      }\n\n      const decision = stringMatchesSomePattern(url, clientOptions.tracePropagationTargets);\n      this._headersUrlMap.set(url, decision);\n      return decision;\n    };\n\n    if (shouldAttachTraceData(stringUrl)) {\n      const { traceId, spanId, sampled, dsc } = {\n        ...isolationScope.getPropagationContext(),\n        ...scope.getPropagationContext(),\n      };\n\n      const sentryTraceHeader = span ? spanToTraceHeader(span) : generateSentryTraceHeader(traceId, spanId, sampled);\n\n      const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(\n        dsc ||\n          (span\n            ? getDynamicSamplingContextFromSpan(span)\n            : getDynamicSamplingContextFromClient(traceId, client, scope)),\n      );\n\n      setHeadersOnRequest(request, sentryTraceHeader, sentryBaggageHeader);\n    }\n  };}\n\n   __init5() {this._onRequestEnd = (message) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!_optionalChain([getClient, 'call', _13 => _13(), 'optionalAccess', _14 => _14.getIntegration, 'call', _15 => _15(Undici)])) {\n      return;\n    }\n\n    const { request, response } = message ;\n\n    const stringUrl = request.origin ? request.origin.toString() + request.path : request.path;\n\n    if (isSentryRequestUrl(stringUrl, getClient())) {\n      return;\n    }\n\n    const span = request.__sentry_span__;\n    if (span) {\n      setHttpStatus(span, response.statusCode);\n      span.end();\n    }\n\n    if (this._options.breadcrumbs) {\n      addBreadcrumb(\n        {\n          category: 'http',\n          data: {\n            method: request.method,\n            status_code: response.statusCode,\n            url: stringUrl,\n          },\n          type: 'http',\n        },\n        {\n          event: 'response',\n          request,\n          response,\n        },\n      );\n    }\n  };}\n\n   __init6() {this._onRequestError = (message) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!_optionalChain([getClient, 'call', _16 => _16(), 'optionalAccess', _17 => _17.getIntegration, 'call', _18 => _18(Undici)])) {\n      return;\n    }\n\n    const { request } = message ;\n\n    const stringUrl = request.origin ? request.origin.toString() + request.path : request.path;\n\n    if (isSentryRequestUrl(stringUrl, getClient())) {\n      return;\n    }\n\n    const span = request.__sentry_span__;\n    if (span) {\n      span.setStatus('internal_error');\n      span.end();\n    }\n\n    if (this._options.breadcrumbs) {\n      addBreadcrumb(\n        {\n          category: 'http',\n          data: {\n            method: request.method,\n            url: stringUrl,\n          },\n          level: 'error',\n          type: 'http',\n        },\n        {\n          event: 'error',\n          request,\n        },\n      );\n    }\n  };}\n}Undici.__initStatic();\n\nfunction setHeadersOnRequest(\n  request,\n  sentryTrace,\n  sentryBaggageHeader,\n) {\n  let hasSentryHeaders;\n  if (Array.isArray(request.headers)) {\n    hasSentryHeaders = request.headers.some(headerLine => headerLine === 'sentry-trace');\n  } else {\n    const headerLines = request.headers.split('\\r\\n');\n    hasSentryHeaders = headerLines.some(headerLine => headerLine.startsWith('sentry-trace:'));\n  }\n\n  if (hasSentryHeaders) {\n    return;\n  }\n\n  request.addHeader('sentry-trace', sentryTrace);\n  if (sentryBaggageHeader) {\n    request.addHeader('baggage', sentryBaggageHeader);\n  }\n}\n\nfunction createRequestSpan(\n  activeSpan,\n  request,\n  stringUrl,\n) {\n  const url = parseUrl(stringUrl);\n\n  const method = request.method || 'GET';\n  const data = {\n    'http.method': method,\n  };\n  if (url.search) {\n    data['http.query'] = url.search;\n  }\n  if (url.hash) {\n    data['http.fragment'] = url.hash;\n  }\n  // eslint-disable-next-line deprecation/deprecation\n  return _optionalChain([activeSpan, 'optionalAccess', _19 => _19.startChild, 'call', _20 => _20({\n    op: 'http.client',\n    origin: 'auto.http.node.undici',\n    description: `${method} ${getSanitizedUrlString(url)}`,\n    data,\n  })]);\n}\n\nexport { ChannelName, Undici, nativeNodeFetchintegration };\n//# sourceMappingURL=index.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { consoleSandbox, logger } from './logger.js';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\nexport { dsnFromString, dsnToString, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","import { dsnToString } from './dsn.js';\nimport { normalize } from './normalize.js';\nimport { dropUndefinedKeys } from './object.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input, textEncoder) {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(\n  env,\n  textEncoder,\n  textDecoder,\n) {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'statsd',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, createEventEnvelopeHeaders, envelopeContainsItemType, envelopeItemTypeToDataCategory, forEachEnvelopeItem, getSdkMetadataForEnvelopeHeader, parseEnvelope, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import * as http from 'http';\nimport { URL } from 'url';\nimport { defineIntegration, convertIntegrationFnToClass } from '@sentry/core';\nimport { logger, serializeEnvelope } from '@sentry/utils';\n\nconst INTEGRATION_NAME = 'Spotlight';\n\nconst _spotlightIntegration = ((options = {}) => {\n  const _options = {\n    sidecarUrl: options.sidecarUrl || 'http://localhost:8969/stream',\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (typeof process === 'object' && process.env && process.env.NODE_ENV !== 'development') {\n        logger.warn(\"[Spotlight] It seems you're not in dev mode. Do you really want to have Spotlight enabled?\");\n      }\n      connectToSpotlight(client, _options);\n    },\n  };\n}) ;\n\nconst spotlightIntegration = defineIntegration(_spotlightIntegration);\n\n/**\n * Use this integration to send errors and transactions to Spotlight.\n *\n * Learn more about spotlight at https://spotlightjs.com\n *\n * Important: This integration only works with Node 18 or newer.\n *\n * @deprecated Use `spotlightIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Spotlight = convertIntegrationFnToClass(INTEGRATION_NAME, spotlightIntegration)\n\n;\n\n// eslint-disable-next-line deprecation/deprecation\n\nfunction connectToSpotlight(client, options) {\n  const spotlightUrl = parseSidecarUrl(options.sidecarUrl);\n  if (!spotlightUrl) {\n    return;\n  }\n\n  let failedRequests = 0;\n\n  if (typeof client.on !== 'function') {\n    logger.warn('[Spotlight] Cannot connect to spotlight due to missing method on SDK client (`client.on`)');\n    return;\n  }\n\n  client.on('beforeEnvelope', (envelope) => {\n    if (failedRequests > 3) {\n      logger.warn('[Spotlight] Disabled Sentry -> Spotlight integration due to too many failed requests');\n      return;\n    }\n\n    const serializedEnvelope = serializeEnvelope(envelope);\n\n    const request = getNativeHttpRequest();\n    const req = request(\n      {\n        method: 'POST',\n        path: spotlightUrl.pathname,\n        hostname: spotlightUrl.hostname,\n        port: spotlightUrl.port,\n        headers: {\n          'Content-Type': 'application/x-sentry-envelope',\n        },\n      },\n      res => {\n        res.on('data', () => {\n          // Drain socket\n        });\n\n        res.on('end', () => {\n          // Drain socket\n        });\n        res.setEncoding('utf8');\n      },\n    );\n\n    req.on('error', () => {\n      failedRequests++;\n      logger.warn('[Spotlight] Failed to send envelope to Spotlight Sidecar');\n    });\n    req.write(serializedEnvelope);\n    req.end();\n  });\n}\n\nfunction parseSidecarUrl(url) {\n  try {\n    return new URL(`${url}`);\n  } catch (e) {\n    logger.warn(`[Spotlight] Invalid sidecar URL: ${url}`);\n    return undefined;\n  }\n}\n\n/**\n * We want to get an unpatched http request implementation to avoid capturing our own calls.\n */\nfunction getNativeHttpRequest() {\n  const { request } = http;\n  if (isWrapped(request)) {\n    return request.__sentry_original__;\n  }\n\n  return request;\n}\n\nfunction isWrapped(impl) {\n  return '__sentry_original__' in impl;\n}\n\nexport { Spotlight, getNativeHttpRequest, spotlightIntegration };\n//# sourceMappingURL=spotlight.js.map\n","import { defineIntegration, convertIntegrationFnToClass, SDK_VERSION, getActiveTransaction, captureException, continueTrace, startTransaction, getCurrentScope, spanToTraceHeader, getDynamicSamplingContextFromSpan, setHttpStatus } from '@sentry/core';\nimport { fill, dynamicSamplingContextToSentryBaggageHeader } from '@sentry/utils';\n\nfunction isResponseObject(response) {\n  return response && (response ).statusCode !== undefined;\n}\n\nfunction isErrorEvent(event) {\n  return event && (event ).error !== undefined;\n}\n\nfunction sendErrorToSentry(errorData) {\n  captureException(errorData, {\n    mechanism: {\n      type: 'hapi',\n      handled: false,\n      data: {\n        function: 'hapiErrorPlugin',\n      },\n    },\n  });\n}\n\nconst hapiErrorPlugin = {\n  name: 'SentryHapiErrorPlugin',\n  version: SDK_VERSION,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  register: async function (serverArg) {\n    const server = serverArg ;\n\n    server.events.on('request', (request, event) => {\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = getActiveTransaction();\n\n      if (isErrorEvent(event)) {\n        sendErrorToSentry(event.error);\n      }\n\n      if (transaction) {\n        transaction.setStatus('internal_error');\n        transaction.end();\n      }\n    });\n  },\n};\n\nconst hapiTracingPlugin = {\n  name: 'SentryHapiTracingPlugin',\n  version: SDK_VERSION,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  register: async function (serverArg) {\n    const server = serverArg ;\n\n    server.ext('onPreHandler', (request, h) => {\n      const transaction = continueTrace(\n        {\n          sentryTrace: request.headers['sentry-trace'] || undefined,\n          baggage: request.headers['baggage'] || undefined,\n        },\n        transactionContext => {\n          // eslint-disable-next-line deprecation/deprecation\n          return startTransaction({\n            ...transactionContext,\n            op: 'hapi.request',\n            name: request.route.path,\n            description: `${request.route.method} ${request.path}`,\n          });\n        },\n      );\n\n      // eslint-disable-next-line deprecation/deprecation\n      getCurrentScope().setSpan(transaction);\n\n      return h.continue;\n    });\n\n    server.ext('onPreResponse', (request, h) => {\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = getActiveTransaction();\n\n      if (request.response && isResponseObject(request.response) && transaction) {\n        const response = request.response ;\n        response.header('sentry-trace', spanToTraceHeader(transaction));\n\n        const dynamicSamplingContext = dynamicSamplingContextToSentryBaggageHeader(\n          getDynamicSamplingContextFromSpan(transaction),\n        );\n\n        if (dynamicSamplingContext) {\n          response.header('baggage', dynamicSamplingContext);\n        }\n      }\n\n      return h.continue;\n    });\n\n    server.ext('onPostHandler', (request, h) => {\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = getActiveTransaction();\n\n      if (transaction) {\n        if (request.response && isResponseObject(request.response)) {\n          setHttpStatus(transaction, request.response.statusCode);\n        }\n\n        transaction.end();\n      }\n\n      return h.continue;\n    });\n  },\n};\n\nconst INTEGRATION_NAME = 'Hapi';\n\nconst _hapiIntegration = ((options = {}) => {\n  const server = options.server ;\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      if (!server) {\n        return;\n      }\n\n      fill(server, 'start', (originalStart) => {\n        return async function () {\n          await this.register(hapiTracingPlugin);\n          await this.register(hapiErrorPlugin);\n          const result = originalStart.apply(this);\n          return result;\n        };\n      });\n    },\n  };\n}) ;\n\nconst hapiIntegration = defineIntegration(_hapiIntegration);\n\n/**\n * Hapi Framework Integration.\n * @deprecated Use `hapiIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Hapi = convertIntegrationFnToClass(INTEGRATION_NAME, hapiIntegration);\n\n// eslint-disable-next-line deprecation/deprecation\n\nexport { Hapi, hapiErrorPlugin, hapiIntegration, hapiTracingPlugin };\n//# sourceMappingURL=index.js.map\n","export { Console } from './console.js';\nexport { Http } from './http.js';\nexport { OnUncaughtException } from './onuncaughtexception.js';\nexport { OnUnhandledRejection } from './onunhandledrejection.js';\nexport { Modules } from './modules.js';\nexport { ContextLines } from './contextlines.js';\nexport { Context } from './context.js';\nexport { RequestData } from '@sentry/core';\nexport { LocalVariables } from './local-variables/index.js';\nexport { Undici } from './undici/index.js';\nexport { Spotlight } from './spotlight.js';\nexport { Anr } from './anr/index.js';\nexport { Hapi } from './hapi/index.js';\n\n/* eslint-disable deprecation/deprecation */\n//# sourceMappingURL=index.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","import { _optionalChain } from '@sentry/utils';\n\n/**\n * Check if Sentry auto-instrumentation should be disabled.\n *\n * @param getCurrentHub A method to fetch the current hub\n * @returns boolean\n */\nfunction shouldDisableAutoInstrumentation(getCurrentHub) {\n  // eslint-disable-next-line deprecation/deprecation\n  const clientOptions = _optionalChain([getCurrentHub, 'call', _ => _(), 'access', _2 => _2.getClient, 'call', _3 => _3(), 'optionalAccess', _4 => _4.getOptions, 'call', _5 => _5()]);\n  const instrumenter = _optionalChain([clientOptions, 'optionalAccess', _6 => _6.instrumenter]) || 'sentry';\n\n  return instrumenter !== 'sentry';\n}\n\nexport { shouldDisableAutoInstrumentation };\n//# sourceMappingURL=node-utils.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport { loadModule, logger, fill, arrayify, isThenable } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../common/debug-build.js';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/** Tracing integration for Apollo */\nclass Apollo  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Apollo';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(\n    options = {\n      useNestjs: false,\n    },\n  ) {\n    this.name = Apollo.id;\n    this._useNest = !!options.useNestjs;\n  }\n\n  /** @inheritdoc */\n   loadDependency() {\n    if (this._useNest) {\n      this._module = this._module || loadModule('@nestjs/graphql');\n    } else {\n      this._module = this._module || loadModule('apollo-server-core');\n    }\n\n    return this._module;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      DEBUG_BUILD && logger.log('Apollo Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    if (this._useNest) {\n      const pkg = this.loadDependency();\n\n      if (!pkg) {\n        DEBUG_BUILD && logger.error('Apollo-NestJS Integration was unable to require @nestjs/graphql package.');\n        return;\n      }\n\n      /**\n       * Iterate over resolvers of NestJS ResolversExplorerService before schemas are constructed.\n       */\n      fill(\n        pkg.GraphQLFactory.prototype,\n        'mergeWithSchema',\n        function (orig) {\n          return function (\n\n            ...args\n          ) {\n            fill(this.resolversExplorerService, 'explore', function (orig) {\n              return function () {\n                const resolvers = arrayify(orig.call(this));\n\n                const instrumentedResolvers = instrumentResolvers(resolvers, getCurrentHub);\n\n                return instrumentedResolvers;\n              };\n            });\n\n            return orig.call(this, ...args);\n          };\n        },\n      );\n    } else {\n      const pkg = this.loadDependency();\n\n      if (!pkg) {\n        DEBUG_BUILD && logger.error('Apollo Integration was unable to require apollo-server-core package.');\n        return;\n      }\n\n      /**\n       * Iterate over resolvers of the ApolloServer instance before schemas are constructed.\n       */\n      fill(pkg.ApolloServerBase.prototype, 'constructSchema', function (orig) {\n        return function (\n\n) {\n          if (!this.config.resolvers) {\n            if (DEBUG_BUILD) {\n              if (this.config.schema) {\n                logger.warn(\n                  'Apollo integration is not able to trace `ApolloServer` instances constructed via `schema` property.' +\n                    'If you are using NestJS with Apollo, please use `Sentry.Integrations.Apollo({ useNestjs: true })` instead.',\n                );\n                logger.warn();\n              } else if (this.config.modules) {\n                logger.warn(\n                  'Apollo integration is not able to trace `ApolloServer` instances constructed via `modules` property.',\n                );\n              }\n\n              logger.error('Skipping tracing as no resolvers found on the `ApolloServer` instance.');\n            }\n\n            return orig.call(this);\n          }\n\n          const resolvers = arrayify(this.config.resolvers);\n\n          this.config.resolvers = instrumentResolvers(resolvers, getCurrentHub);\n\n          return orig.call(this);\n        };\n      });\n    }\n  }\n}Apollo.__initStatic();\n\nfunction instrumentResolvers(resolvers, getCurrentHub) {\n  return resolvers.map(model => {\n    Object.keys(model).forEach(resolverGroupName => {\n      Object.keys(model[resolverGroupName]).forEach(resolverName => {\n        if (typeof model[resolverGroupName][resolverName] !== 'function') {\n          return;\n        }\n\n        wrapResolver(model, resolverGroupName, resolverName, getCurrentHub);\n      });\n    });\n\n    return model;\n  });\n}\n\n/**\n * Wrap a single resolver which can be a parent of other resolvers and/or db operations.\n */\nfunction wrapResolver(\n  model,\n  resolverGroupName,\n  resolverName,\n  getCurrentHub,\n) {\n  fill(model[resolverGroupName], resolverName, function (orig) {\n    return function ( ...args) {\n      // eslint-disable-next-line deprecation/deprecation\n      const scope = getCurrentHub().getScope();\n      // eslint-disable-next-line deprecation/deprecation\n      const parentSpan = scope.getSpan();\n      // eslint-disable-next-line deprecation/deprecation\n      const span = _optionalChain([parentSpan, 'optionalAccess', _2 => _2.startChild, 'call', _3 => _3({\n        description: `${resolverGroupName}.${resolverName}`,\n        op: 'graphql.resolve',\n        origin: 'auto.graphql.apollo',\n      })]);\n\n      const rv = orig.call(this, ...args);\n\n      if (isThenable(rv)) {\n        return rv.then((res) => {\n          _optionalChain([span, 'optionalAccess', _4 => _4.end, 'call', _5 => _5()]);\n          return res;\n        });\n      }\n\n      _optionalChain([span, 'optionalAccess', _6 => _6.end, 'call', _7 => _7()]);\n\n      return rv;\n    };\n  });\n}\n\nexport { Apollo };\n//# sourceMappingURL=apollo.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport { spanToJSON, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from '@sentry/core';\nimport { logger, getNumberOfUrlSegments, stripUrlQueryAndFragment, extractPathForTransaction, isRegExp, GLOBAL_OBJ } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../common/debug-build.js';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/* eslint-disable max-lines */\n\n/**\n * Express integration\n *\n * Provides an request and error handler for Express framework as well as tracing capabilities\n */\nclass Express  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Express';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Express App instance\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {\n    this.name = Express.id;\n    this._router = options.router || options.app;\n    this._methods = (Array.isArray(options.methods) ? options.methods : []).concat('use');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (!this._router) {\n      DEBUG_BUILD && logger.error('ExpressIntegration is missing an Express instance');\n      return;\n    }\n\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      DEBUG_BUILD && logger.log('Express Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    instrumentMiddlewares(this._router, this._methods);\n    instrumentRouter(this._router );\n  }\n}Express.__initStatic();\n\n/**\n * Wraps original middleware function in a tracing call, which stores the info about the call as a span,\n * and finishes it once the middleware is done invoking.\n *\n * Express middlewares have 3 various forms, thus we have to take care of all of them:\n * // sync\n * app.use(function (req, res) { ... })\n * // async\n * app.use(function (req, res, next) { ... })\n * // error handler\n * app.use(function (err, req, res, next) { ... })\n *\n * They all internally delegate to the `router[method]` of the given application instance.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\nfunction wrap(fn, method) {\n  const arity = fn.length;\n\n  switch (arity) {\n    case 2: {\n      return function ( req, res) {\n        const transaction = res.__sentry_transaction;\n        if (transaction) {\n          // eslint-disable-next-line deprecation/deprecation\n          const span = transaction.startChild({\n            description: fn.name,\n            op: `middleware.express.${method}`,\n            origin: 'auto.middleware.express',\n          });\n          res.once('finish', () => {\n            span.end();\n          });\n        }\n        return fn.call(this, req, res);\n      };\n    }\n    case 3: {\n      return function (\n\n        req,\n        res,\n        next,\n      ) {\n        const transaction = res.__sentry_transaction;\n        // eslint-disable-next-line deprecation/deprecation\n        const span = _optionalChain([transaction, 'optionalAccess', _2 => _2.startChild, 'call', _3 => _3({\n          description: fn.name,\n          op: `middleware.express.${method}`,\n          origin: 'auto.middleware.express',\n        })]);\n        fn.call(this, req, res, function ( ...args) {\n          _optionalChain([span, 'optionalAccess', _4 => _4.end, 'call', _5 => _5()]);\n          next.call(this, ...args);\n        });\n      };\n    }\n    case 4: {\n      return function (\n\n        err,\n        req,\n        res,\n        next,\n      ) {\n        const transaction = res.__sentry_transaction;\n        // eslint-disable-next-line deprecation/deprecation\n        const span = _optionalChain([transaction, 'optionalAccess', _6 => _6.startChild, 'call', _7 => _7({\n          description: fn.name,\n          op: `middleware.express.${method}`,\n          origin: 'auto.middleware.express',\n        })]);\n        fn.call(this, err, req, res, function ( ...args) {\n          _optionalChain([span, 'optionalAccess', _8 => _8.end, 'call', _9 => _9()]);\n          next.call(this, ...args);\n        });\n      };\n    }\n    default: {\n      throw new Error(`Express middleware takes 2-4 arguments. Got: ${arity}`);\n    }\n  }\n}\n\n/**\n * Takes all the function arguments passed to the original `app` or `router` method, eg. `app.use` or `router.use`\n * and wraps every function, as well as array of functions with a call to our `wrap` method.\n * We have to take care of the arrays as well as iterate over all of the arguments,\n * as `app.use` can accept middlewares in few various forms.\n *\n * app.use([<path>], <fn>)\n * app.use([<path>], <fn>, ...<fn>)\n * app.use([<path>], ...<fn>[])\n */\nfunction wrapMiddlewareArgs(args, method) {\n  return args.map((arg) => {\n    if (typeof arg === 'function') {\n      return wrap(arg, method);\n    }\n\n    if (Array.isArray(arg)) {\n      return arg.map((a) => {\n        if (typeof a === 'function') {\n          return wrap(a, method);\n        }\n        return a;\n      });\n    }\n\n    return arg;\n  });\n}\n\n/**\n * Patches original router to utilize our tracing functionality\n */\nfunction patchMiddleware(router, method) {\n  const originalCallback = router[method];\n\n  router[method] = function (...args) {\n    return originalCallback.call(this, ...wrapMiddlewareArgs(args, method));\n  };\n\n  return router;\n}\n\n/**\n * Patches original router methods\n */\nfunction instrumentMiddlewares(router, methods = []) {\n  methods.forEach((method) => patchMiddleware(router, method));\n}\n\n/**\n * Patches the prototype of Express.Router to accumulate the resolved route\n * if a layer instance's `match` function was called and it returned a successful match.\n *\n * @see https://github.com/expressjs/express/blob/master/lib/router/index.js\n *\n * @param appOrRouter the router instance which can either be an app (i.e. top-level) or a (nested) router.\n */\nfunction instrumentRouter(appOrRouter) {\n  // This is how we can distinguish between app and routers\n  const isApp = 'settings' in appOrRouter;\n\n  // In case the app's top-level router hasn't been initialized yet, we have to do it now\n  if (isApp && appOrRouter._router === undefined && appOrRouter.lazyrouter) {\n    appOrRouter.lazyrouter();\n  }\n\n  const router = isApp ? appOrRouter._router : appOrRouter;\n\n  if (!router) {\n    /*\n    If we end up here, this means likely that this integration is used with Express 3 or Express 5.\n    For now, we don't support these versions (3 is very old and 5 is still in beta). To support Express 5,\n    we'd need to make more changes to the routing instrumentation because the router is no longer part of\n    the Express core package but maintained in its own package. The new router has different function\n    signatures and works slightly differently, demanding more changes than just taking the router from\n    `app.router` instead of `app._router`.\n    @see https://github.com/pillarjs/router\n\n    TODO: Proper Express 5 support\n    */\n    DEBUG_BUILD && logger.debug('Cannot instrument router for URL Parameterization (did not find a valid router).');\n    DEBUG_BUILD && logger.debug('Routing instrumentation is currently only supported in Express 4.');\n    return;\n  }\n\n  const routerProto = Object.getPrototypeOf(router) ;\n\n  const originalProcessParams = routerProto.process_params;\n  routerProto.process_params = function process_params(\n    layer,\n    called,\n    req,\n    res,\n    done,\n  ) {\n    // Base case: We're in the first part of the URL (thus we start with the root '/')\n    if (!req._reconstructedRoute) {\n      req._reconstructedRoute = '';\n    }\n\n    // If the layer's partial route has params, is a regex or an array, the route is stored in layer.route.\n    const { layerRoutePath, isRegex, isArray, numExtraSegments } = getLayerRoutePathInfo(layer);\n\n    if (layerRoutePath || isRegex || isArray) {\n      req._hasParameters = true;\n    }\n\n    // Otherwise, the hardcoded path (i.e. a partial route without params) is stored in layer.path\n    let partialRoute;\n\n    if (layerRoutePath) {\n      partialRoute = layerRoutePath;\n    } else {\n      /**\n       * prevent duplicate segment in _reconstructedRoute param if router match multiple routes before final path\n       * example:\n       * original url: /api/v1/1234\n       * prevent: /api/api/v1/:userId\n       * router structure\n       * /api -> middleware\n       * /api/v1 -> middleware\n       * /1234 -> endpoint with param :userId\n       * final _reconstructedRoute is /api/v1/:userId\n       */\n      partialRoute = preventDuplicateSegments(req.originalUrl, req._reconstructedRoute, layer.path) || '';\n    }\n\n    // Normalize the partial route so that it doesn't contain leading or trailing slashes\n    // and exclude empty or '*' wildcard routes.\n    // The exclusion of '*' routes is our best effort to not \"pollute\" the transaction name\n    // with interim handlers (e.g. ones that check authentication or do other middleware stuff).\n    // We want to end up with the parameterized URL of the incoming request without any extraneous path segments.\n    const finalPartialRoute = partialRoute\n      .split('/')\n      .filter(segment => segment.length > 0 && (isRegex || isArray || !segment.includes('*')))\n      .join('/');\n\n    // If we found a valid partial URL, we append it to the reconstructed route\n    if (finalPartialRoute && finalPartialRoute.length > 0) {\n      // If the partial route is from a regex route, we append a '/' to close the regex\n      req._reconstructedRoute += `/${finalPartialRoute}${isRegex ? '/' : ''}`;\n    }\n\n    // Now we check if we are in the \"last\" part of the route. We determine this by comparing the\n    // number of URL segments from the original URL to that of our reconstructed parameterized URL.\n    // If we've reached our final destination, we update the transaction name.\n    const urlLength = getNumberOfUrlSegments(stripUrlQueryAndFragment(req.originalUrl || '')) + numExtraSegments;\n    const routeLength = getNumberOfUrlSegments(req._reconstructedRoute);\n\n    if (urlLength === routeLength) {\n      if (!req._hasParameters) {\n        if (req._reconstructedRoute !== req.originalUrl) {\n          req._reconstructedRoute = req.originalUrl ? stripUrlQueryAndFragment(req.originalUrl) : req.originalUrl;\n        }\n      }\n\n      const transaction = res.__sentry_transaction;\n      const attributes = (transaction && spanToJSON(transaction).data) || {};\n      if (transaction && attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] !== 'custom') {\n        // If the request URL is '/' or empty, the reconstructed route will be empty.\n        // Therefore, we fall back to setting the final route to '/' in this case.\n        const finalRoute = req._reconstructedRoute || '/';\n\n        const [name, source] = extractPathForTransaction(req, { path: true, method: true, customRoute: finalRoute });\n        transaction.updateName(name);\n        transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, source);\n      }\n    }\n\n    return originalProcessParams.call(this, layer, called, req, res, done);\n  };\n}\n\n/**\n * Recreate layer.route.path from layer.regexp and layer.keys.\n * Works until express.js used package path-to-regexp@0.1.7\n * or until layer.keys contain offset attribute\n *\n * @param layer the layer to extract the stringified route from\n *\n * @returns string in layer.route.path structure 'router/:pathParam' or undefined\n */\nconst extractOriginalRoute = (\n  path,\n  regexp,\n  keys,\n) => {\n  if (!path || !regexp || !keys || Object.keys(keys).length === 0 || !_optionalChain([keys, 'access', _10 => _10[0], 'optionalAccess', _11 => _11.offset])) {\n    return undefined;\n  }\n\n  const orderedKeys = keys.sort((a, b) => a.offset - b.offset);\n\n  // add d flag for getting indices from regexp result\n  // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- regexp comes from express.js\n  const pathRegex = new RegExp(regexp, `${regexp.flags}d`);\n  /**\n   * use custom type cause of TS error with missing indices in RegExpExecArray\n   */\n  const execResult = pathRegex.exec(path) ;\n\n  if (!execResult || !execResult.indices) {\n    return undefined;\n  }\n  /**\n   * remove first match from regex cause contain whole layer.path\n   */\n  const [, ...paramIndices] = execResult.indices;\n\n  if (paramIndices.length !== orderedKeys.length) {\n    return undefined;\n  }\n  let resultPath = path;\n  let indexShift = 0;\n\n  /**\n   * iterate param matches from regexp.exec\n   */\n  paramIndices.forEach((item, index) => {\n    /** check if offsets is define because in some cases regex d flag returns undefined */\n    if (item) {\n      const [startOffset, endOffset] = item;\n      /**\n       * isolate part before param\n       */\n      const substr1 = resultPath.substring(0, startOffset - indexShift);\n      /**\n       * define paramName as replacement in format :pathParam\n       */\n      const replacement = `:${orderedKeys[index].name}`;\n\n      /**\n       * isolate part after param\n       */\n      const substr2 = resultPath.substring(endOffset - indexShift);\n\n      /**\n       * recreate original path but with param replacement\n       */\n      resultPath = substr1 + replacement + substr2;\n\n      /**\n       * calculate new index shift after resultPath was modified\n       */\n      indexShift = indexShift + (endOffset - startOffset - replacement.length);\n    }\n  });\n\n  return resultPath;\n};\n\n/**\n * Extracts and stringifies the layer's route which can either be a string with parameters (`users/:id`),\n * a RegEx (`/test/`) or an array of strings and regexes (`['/path1', /\\/path[2-5]/, /path/:id]`). Additionally\n * returns extra information about the route, such as if the route is defined as regex or as an array.\n *\n * @param layer the layer to extract the stringified route from\n *\n * @returns an object containing the stringified route, a flag determining if the route was a regex\n *          and the number of extra segments to the matched path that are additionally in the route,\n *          if the route was an array (defaults to 0).\n */\nfunction getLayerRoutePathInfo(layer) {\n  let lrp = _optionalChain([layer, 'access', _12 => _12.route, 'optionalAccess', _13 => _13.path]);\n\n  const isRegex = isRegExp(lrp);\n  const isArray = Array.isArray(lrp);\n\n  if (!lrp) {\n    // parse node.js major version\n    // Next.js will complain if we directly use `proces.versions` here because of edge runtime.\n    const [major] = (GLOBAL_OBJ ).process.versions.node.split('.').map(Number);\n\n    // allow call extractOriginalRoute only if node version support Regex d flag, node 16+\n    if (major >= 16) {\n      /**\n       * If lrp does not exist try to recreate original layer path from route regexp\n       */\n      lrp = extractOriginalRoute(layer.path, layer.regexp, layer.keys);\n    }\n  }\n\n  if (!lrp) {\n    return { isRegex, isArray, numExtraSegments: 0 };\n  }\n\n  const numExtraSegments = isArray\n    ? Math.max(getNumberOfArrayUrlSegments(lrp ) - getNumberOfUrlSegments(layer.path || ''), 0)\n    : 0;\n\n  const layerRoutePath = getLayerRoutePathString(isArray, lrp);\n\n  return { layerRoutePath, isRegex, isArray, numExtraSegments };\n}\n\n/**\n * Returns the number of URL segments in an array of routes\n *\n * Example: ['/api/test', /\\/api\\/post[0-9]/, '/users/:id/details`] -> 7\n */\nfunction getNumberOfArrayUrlSegments(routesArray) {\n  return routesArray.reduce((accNumSegments, currentRoute) => {\n    // array members can be a RegEx -> convert them toString\n    return accNumSegments + getNumberOfUrlSegments(currentRoute.toString());\n  }, 0);\n}\n\n/**\n * Extracts and returns the stringified version of the layers route path\n * Handles route arrays (by joining the paths together) as well as RegExp and normal\n * string values (in the latter case the toString conversion is technically unnecessary but\n * it doesn't hurt us either).\n */\nfunction getLayerRoutePathString(isArray, lrp) {\n  if (isArray) {\n    return (lrp ).map(r => r.toString()).join(',');\n  }\n  return lrp && lrp.toString();\n}\n\n/**\n * remove duplicate segment contain in layerPath against reconstructedRoute,\n * and return only unique segment that can be added into reconstructedRoute\n */\nfunction preventDuplicateSegments(\n  originalUrl,\n  reconstructedRoute,\n  layerPath,\n) {\n  // filter query params\n  const normalizeURL = stripUrlQueryAndFragment(originalUrl || '');\n  const originalUrlSplit = _optionalChain([normalizeURL, 'optionalAccess', _14 => _14.split, 'call', _15 => _15('/'), 'access', _16 => _16.filter, 'call', _17 => _17(v => !!v)]);\n  let tempCounter = 0;\n  const currentOffset = _optionalChain([reconstructedRoute, 'optionalAccess', _18 => _18.split, 'call', _19 => _19('/'), 'access', _20 => _20.filter, 'call', _21 => _21(v => !!v), 'access', _22 => _22.length]) || 0;\n  const result = _optionalChain([layerPath\n, 'optionalAccess', _23 => _23.split, 'call', _24 => _24('/')\n, 'access', _25 => _25.filter, 'call', _26 => _26(segment => {\n      if (_optionalChain([originalUrlSplit, 'optionalAccess', _27 => _27[currentOffset + tempCounter]]) === segment) {\n        tempCounter += 1;\n        return true;\n      }\n      return false;\n    })\n, 'access', _28 => _28.join, 'call', _29 => _29('/')]);\n  return result;\n}\n\nexport { Express, extractOriginalRoute, preventDuplicateSegments };\n//# sourceMappingURL=express.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport { loadModule, logger, fill, isThenable } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../common/debug-build.js';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/** Tracing integration for graphql package */\nclass GraphQL  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GraphQL';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor() {\n    this.name = GraphQL.id;\n  }\n\n  /** @inheritdoc */\n   loadDependency() {\n    return (this._module = this._module || loadModule('graphql/execution/execute.js'));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      DEBUG_BUILD && logger.log('GraphQL Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      DEBUG_BUILD && logger.error('GraphQL Integration was unable to require graphql/execution package.');\n      return;\n    }\n\n    fill(pkg, 'execute', function (orig) {\n      return function ( ...args) {\n        // eslint-disable-next-line deprecation/deprecation\n        const scope = getCurrentHub().getScope();\n        // eslint-disable-next-line deprecation/deprecation\n        const parentSpan = scope.getSpan();\n\n        // eslint-disable-next-line deprecation/deprecation\n        const span = _optionalChain([parentSpan, 'optionalAccess', _2 => _2.startChild, 'call', _3 => _3({\n          description: 'execute',\n          op: 'graphql.execute',\n          origin: 'auto.graphql.graphql',\n        })]);\n\n        // eslint-disable-next-line deprecation/deprecation\n        _optionalChain([scope, 'optionalAccess', _4 => _4.setSpan, 'call', _5 => _5(span)]);\n\n        const rv = orig.call(this, ...args);\n\n        if (isThenable(rv)) {\n          return rv.then((res) => {\n            _optionalChain([span, 'optionalAccess', _6 => _6.end, 'call', _7 => _7()]);\n            // eslint-disable-next-line deprecation/deprecation\n            _optionalChain([scope, 'optionalAccess', _8 => _8.setSpan, 'call', _9 => _9(parentSpan)]);\n\n            return res;\n          });\n        }\n\n        _optionalChain([span, 'optionalAccess', _10 => _10.end, 'call', _11 => _11()]);\n        // eslint-disable-next-line deprecation/deprecation\n        _optionalChain([scope, 'optionalAccess', _12 => _12.setSpan, 'call', _13 => _13(parentSpan)]);\n        return rv;\n      };\n    });\n  }\n}GraphQL.__initStatic();\n\nexport { GraphQL };\n//# sourceMappingURL=graphql.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport { loadModule, logger, fill, isThenable } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../common/debug-build.js';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n// This allows us to use the same array for both defaults options and the type itself.\n// (note `as const` at the end to make it a union of string literal types (i.e. \"a\" | \"b\" | ... )\n// and not just a string[])\n\nconst OPERATIONS = [\n  'aggregate', // aggregate(pipeline, options, callback)\n  'bulkWrite', // bulkWrite(operations, options, callback)\n  'countDocuments', // countDocuments(query, options, callback)\n  'createIndex', // createIndex(fieldOrSpec, options, callback)\n  'createIndexes', // createIndexes(indexSpecs, options, callback)\n  'deleteMany', // deleteMany(filter, options, callback)\n  'deleteOne', // deleteOne(filter, options, callback)\n  'distinct', // distinct(key, query, options, callback)\n  'drop', // drop(options, callback)\n  'dropIndex', // dropIndex(indexName, options, callback)\n  'dropIndexes', // dropIndexes(options, callback)\n  'estimatedDocumentCount', // estimatedDocumentCount(options, callback)\n  'find', // find(query, options, callback)\n  'findOne', // findOne(query, options, callback)\n  'findOneAndDelete', // findOneAndDelete(filter, options, callback)\n  'findOneAndReplace', // findOneAndReplace(filter, replacement, options, callback)\n  'findOneAndUpdate', // findOneAndUpdate(filter, update, options, callback)\n  'indexes', // indexes(options, callback)\n  'indexExists', // indexExists(indexes, options, callback)\n  'indexInformation', // indexInformation(options, callback)\n  'initializeOrderedBulkOp', // initializeOrderedBulkOp(options, callback)\n  'insertMany', // insertMany(docs, options, callback)\n  'insertOne', // insertOne(doc, options, callback)\n  'isCapped', // isCapped(options, callback)\n  'mapReduce', // mapReduce(map, reduce, options, callback)\n  'options', // options(options, callback)\n  'parallelCollectionScan', // parallelCollectionScan(options, callback)\n  'rename', // rename(newName, options, callback)\n  'replaceOne', // replaceOne(filter, doc, options, callback)\n  'stats', // stats(options, callback)\n  'updateMany', // updateMany(filter, update, options, callback)\n  'updateOne', // updateOne(filter, update, options, callback)\n] ;\n\n// All of the operations above take `options` and `callback` as their final parameters, but some of them\n// take additional parameters as well. For those operations, this is a map of\n// { <operation name>:  [<names of additional parameters>] }, as a way to know what to call the operation's\n// positional arguments when we add them to the span's `data` object later\nconst OPERATION_SIGNATURES\n\n = {\n  // aggregate intentionally not included because `pipeline` arguments are too complex to serialize well\n  // see https://github.com/getsentry/sentry-javascript/pull/3102\n  bulkWrite: ['operations'],\n  countDocuments: ['query'],\n  createIndex: ['fieldOrSpec'],\n  createIndexes: ['indexSpecs'],\n  deleteMany: ['filter'],\n  deleteOne: ['filter'],\n  distinct: ['key', 'query'],\n  dropIndex: ['indexName'],\n  find: ['query'],\n  findOne: ['query'],\n  findOneAndDelete: ['filter'],\n  findOneAndReplace: ['filter', 'replacement'],\n  findOneAndUpdate: ['filter', 'update'],\n  indexExists: ['indexes'],\n  insertMany: ['docs'],\n  insertOne: ['doc'],\n  mapReduce: ['map', 'reduce'],\n  rename: ['newName'],\n  replaceOne: ['filter', 'doc'],\n  updateMany: ['filter', 'update'],\n  updateOne: ['filter', 'update'],\n};\n\nfunction isCursor(maybeCursor) {\n  return maybeCursor && typeof maybeCursor === 'object' && maybeCursor.once && typeof maybeCursor.once === 'function';\n}\n\n/** Tracing integration for mongo package */\nclass Mongo  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Mongo';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {\n    this.name = Mongo.id;\n    this._operations = Array.isArray(options.operations) ? options.operations : (OPERATIONS );\n    this._describeOperations = 'describeOperations' in options ? options.describeOperations : true;\n    this._useMongoose = !!options.useMongoose;\n  }\n\n  /** @inheritdoc */\n   loadDependency() {\n    const moduleName = this._useMongoose ? 'mongoose' : 'mongodb';\n    return (this._module = this._module || loadModule(moduleName));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      DEBUG_BUILD && logger.log('Mongo Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      const moduleName = this._useMongoose ? 'mongoose' : 'mongodb';\n      DEBUG_BUILD && logger.error(`Mongo Integration was unable to require \\`${moduleName}\\` package.`);\n      return;\n    }\n\n    this._instrumentOperations(pkg.Collection, this._operations, getCurrentHub);\n  }\n\n  /**\n   * Patches original collection methods\n   */\n   _instrumentOperations(collection, operations, getCurrentHub) {\n    operations.forEach((operation) => this._patchOperation(collection, operation, getCurrentHub));\n  }\n\n  /**\n   * Patches original collection to utilize our tracing functionality\n   */\n   _patchOperation(collection, operation, getCurrentHub) {\n    if (!(operation in collection.prototype)) return;\n\n    const getSpanContext = this._getSpanContextFromOperationArguments.bind(this);\n\n    fill(collection.prototype, operation, function (orig) {\n      return function ( ...args) {\n        const lastArg = args[args.length - 1];\n        // eslint-disable-next-line deprecation/deprecation\n        const hub = getCurrentHub();\n        // eslint-disable-next-line deprecation/deprecation\n        const scope = hub.getScope();\n        // eslint-disable-next-line deprecation/deprecation\n        const client = hub.getClient();\n        // eslint-disable-next-line deprecation/deprecation\n        const parentSpan = scope.getSpan();\n\n        const sendDefaultPii = _optionalChain([client, 'optionalAccess', _2 => _2.getOptions, 'call', _3 => _3(), 'access', _4 => _4.sendDefaultPii]);\n\n        // Check if the operation was passed a callback. (mapReduce requires a different check, as\n        // its (non-callback) arguments can also be functions.)\n        if (typeof lastArg !== 'function' || (operation === 'mapReduce' && args.length === 2)) {\n          // eslint-disable-next-line deprecation/deprecation\n          const span = _optionalChain([parentSpan, 'optionalAccess', _5 => _5.startChild, 'call', _6 => _6(getSpanContext(this, operation, args, sendDefaultPii))]);\n          const maybePromiseOrCursor = orig.call(this, ...args);\n\n          if (isThenable(maybePromiseOrCursor)) {\n            return maybePromiseOrCursor.then((res) => {\n              _optionalChain([span, 'optionalAccess', _7 => _7.end, 'call', _8 => _8()]);\n              return res;\n            });\n          }\n          // If the operation returns a Cursor\n          // we need to attach a listener to it to finish the span when the cursor is closed.\n          else if (isCursor(maybePromiseOrCursor)) {\n            const cursor = maybePromiseOrCursor ;\n\n            try {\n              cursor.once('close', () => {\n                _optionalChain([span, 'optionalAccess', _9 => _9.end, 'call', _10 => _10()]);\n              });\n            } catch (e) {\n              // If the cursor is already closed, `once` will throw an error. In that case, we can\n              // finish the span immediately.\n              _optionalChain([span, 'optionalAccess', _11 => _11.end, 'call', _12 => _12()]);\n            }\n\n            return cursor;\n          } else {\n            _optionalChain([span, 'optionalAccess', _13 => _13.end, 'call', _14 => _14()]);\n            return maybePromiseOrCursor;\n          }\n        }\n\n        // eslint-disable-next-line deprecation/deprecation\n        const span = _optionalChain([parentSpan, 'optionalAccess', _15 => _15.startChild, 'call', _16 => _16(getSpanContext(this, operation, args.slice(0, -1)))]);\n\n        return orig.call(this, ...args.slice(0, -1), function (err, result) {\n          _optionalChain([span, 'optionalAccess', _17 => _17.end, 'call', _18 => _18()]);\n          lastArg(err, result);\n        });\n      };\n    });\n  }\n\n  /**\n   * Form a SpanContext based on the user input to a given operation.\n   */\n   _getSpanContextFromOperationArguments(\n    collection,\n    operation,\n    args,\n    sendDefaultPii = false,\n  ) {\n    const data = {\n      'db.system': 'mongodb',\n      'db.name': collection.dbName,\n      'db.operation': operation,\n      'db.mongodb.collection': collection.collectionName,\n    };\n    const spanContext = {\n      op: 'db',\n      // TODO v8: Use `${collection.collectionName}.${operation}`\n      origin: 'auto.db.mongo',\n      description: operation,\n      data,\n    };\n\n    // If the operation takes no arguments besides `options` and `callback`, or if argument\n    // collection is disabled for this operation, just return early.\n    const signature = OPERATION_SIGNATURES[operation];\n    const shouldDescribe = Array.isArray(this._describeOperations)\n      ? this._describeOperations.includes(operation)\n      : this._describeOperations;\n\n    if (!signature || !shouldDescribe || !sendDefaultPii) {\n      return spanContext;\n    }\n\n    try {\n      // Special case for `mapReduce`, as the only one accepting functions as arguments.\n      if (operation === 'mapReduce') {\n        const [map, reduce] = args ;\n        data[signature[0]] = typeof map === 'string' ? map : map.name || '<anonymous>';\n        data[signature[1]] = typeof reduce === 'string' ? reduce : reduce.name || '<anonymous>';\n      } else {\n        for (let i = 0; i < signature.length; i++) {\n          data[`db.mongodb.${signature[i]}`] = JSON.stringify(args[i]);\n        }\n      }\n    } catch (_oO) {\n      // no-empty\n    }\n\n    return spanContext;\n  }\n}Mongo.__initStatic();\n\nexport { Mongo };\n//# sourceMappingURL=mongo.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport { loadModule, logger, fill } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../common/debug-build.js';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/** Tracing integration for node-mysql package */\nclass Mysql  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Mysql';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor() {\n    this.name = Mysql.id;\n  }\n\n  /** @inheritdoc */\n   loadDependency() {\n    return (this._module = this._module || loadModule('mysql/lib/Connection.js'));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      DEBUG_BUILD && logger.log('Mysql Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      DEBUG_BUILD && logger.error('Mysql Integration was unable to require `mysql` package.');\n      return;\n    }\n\n    let mySqlConfig = undefined;\n\n    try {\n      pkg.prototype.connect = new Proxy(pkg.prototype.connect, {\n        apply(wrappingTarget, thisArg, args) {\n          if (!mySqlConfig) {\n            mySqlConfig = thisArg.config;\n          }\n          return wrappingTarget.apply(thisArg, args);\n        },\n      });\n    } catch (e) {\n      DEBUG_BUILD && logger.error('Mysql Integration was unable to instrument `mysql` config.');\n    }\n\n    function spanDataFromConfig() {\n      if (!mySqlConfig) {\n        return {};\n      }\n      return {\n        'server.address': mySqlConfig.host,\n        'server.port': mySqlConfig.port,\n        'db.user': mySqlConfig.user,\n      };\n    }\n\n    function finishSpan(span) {\n      if (!span) {\n        return;\n      }\n\n      const data = spanDataFromConfig();\n      Object.keys(data).forEach(key => {\n        span.setAttribute(key, data[key]);\n      });\n\n      span.end();\n    }\n\n    // The original function will have one of these signatures:\n    //    function (callback) => void\n    //    function (options, callback) => void\n    //    function (options, values, callback) => void\n    fill(pkg, 'createQuery', function (orig) {\n      return function ( options, values, callback) {\n        // eslint-disable-next-line deprecation/deprecation\n        const scope = getCurrentHub().getScope();\n        // eslint-disable-next-line deprecation/deprecation\n        const parentSpan = scope.getSpan();\n\n        // eslint-disable-next-line deprecation/deprecation\n        const span = _optionalChain([parentSpan, 'optionalAccess', _2 => _2.startChild, 'call', _3 => _3({\n          description: typeof options === 'string' ? options : (options ).sql,\n          op: 'db',\n          origin: 'auto.db.mysql',\n          data: {\n            'db.system': 'mysql',\n          },\n        })]);\n\n        if (typeof callback === 'function') {\n          return orig.call(this, options, values, function (err, result, fields) {\n            finishSpan(span);\n            callback(err, result, fields);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, options, function (err, result, fields) {\n            finishSpan(span);\n            values(err, result, fields);\n          });\n        }\n\n        // streaming, no callback!\n        const query = orig.call(this, options, values) ;\n\n        query.on('end', () => {\n          finishSpan(span);\n        });\n\n        return query;\n      };\n    });\n  }\n}Mysql.__initStatic();\n\nexport { Mysql };\n//# sourceMappingURL=mysql.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport { loadModule, logger, fill, isThenable } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../common/debug-build.js';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/** Tracing integration for node-postgres package */\nclass Postgres  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Postgres';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor(options = {}) {\n    this.name = Postgres.id;\n    this._usePgNative = !!options.usePgNative;\n    this._module = options.module;\n  }\n\n  /** @inheritdoc */\n   loadDependency() {\n    return (this._module = this._module || loadModule('pg'));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      DEBUG_BUILD && logger.log('Postgres Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      DEBUG_BUILD && logger.error('Postgres Integration was unable to require `pg` package.');\n      return;\n    }\n\n    const Client = this._usePgNative ? _optionalChain([pkg, 'access', _2 => _2.native, 'optionalAccess', _3 => _3.Client]) : pkg.Client;\n\n    if (!Client) {\n      DEBUG_BUILD && logger.error(\"Postgres Integration was unable to access 'pg-native' bindings.\");\n      return;\n    }\n\n    /**\n     * function (query, callback) => void\n     * function (query, params, callback) => void\n     * function (query) => Promise\n     * function (query, params) => Promise\n     * function (pg.Cursor) => pg.Cursor\n     */\n    fill(Client.prototype, 'query', function (orig) {\n      return function ( config, values, callback) {\n        // eslint-disable-next-line deprecation/deprecation\n        const scope = getCurrentHub().getScope();\n        // eslint-disable-next-line deprecation/deprecation\n        const parentSpan = scope.getSpan();\n\n        const data = {\n          'db.system': 'postgresql',\n        };\n\n        try {\n          if (this.database) {\n            data['db.name'] = this.database;\n          }\n          if (this.host) {\n            data['server.address'] = this.host;\n          }\n          if (this.port) {\n            data['server.port'] = this.port;\n          }\n          if (this.user) {\n            data['db.user'] = this.user;\n          }\n        } catch (e) {\n          // ignore\n        }\n\n        // eslint-disable-next-line deprecation/deprecation\n        const span = _optionalChain([parentSpan, 'optionalAccess', _4 => _4.startChild, 'call', _5 => _5({\n          description: typeof config === 'string' ? config : (config ).text,\n          op: 'db',\n          origin: 'auto.db.postgres',\n          data,\n        })]);\n\n        if (typeof callback === 'function') {\n          return orig.call(this, config, values, function (err, result) {\n            _optionalChain([span, 'optionalAccess', _6 => _6.end, 'call', _7 => _7()]);\n            callback(err, result);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, config, function (err, result) {\n            _optionalChain([span, 'optionalAccess', _8 => _8.end, 'call', _9 => _9()]);\n            values(err, result);\n          });\n        }\n\n        const rv = typeof values !== 'undefined' ? orig.call(this, config, values) : orig.call(this, config);\n\n        if (isThenable(rv)) {\n          return rv.then((res) => {\n            _optionalChain([span, 'optionalAccess', _10 => _10.end, 'call', _11 => _11()]);\n            return res;\n          });\n        }\n\n        _optionalChain([span, 'optionalAccess', _12 => _12.end, 'call', _13 => _13()]);\n        return rv;\n      };\n    });\n  }\n}Postgres.__initStatic();\n\nexport { Postgres };\n//# sourceMappingURL=postgres.js.map\n","import { startSpan, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, getCurrentHub } from '@sentry/core';\nimport { addNonEnumerableProperty, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../common/debug-build.js';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\nfunction isValidPrismaClient(possibleClient) {\n  return !!possibleClient && !!(possibleClient )['$use'];\n}\n\n/** Tracing integration for @prisma/client package */\nclass Prisma  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Prisma';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {\n    this.name = Prisma.id;\n\n    // We instrument the PrismaClient inside the constructor and not inside `setupOnce` because in some cases of server-side\n    // bundling (Next.js) multiple Prisma clients can be instantiated, even though users don't intend to. When instrumenting\n    // in setupOnce we can only ever instrument one client.\n    // https://github.com/getsentry/sentry-javascript/issues/7216#issuecomment-1602375012\n    // In the future we might explore providing a dedicated PrismaClient middleware instead of this hack.\n    if (isValidPrismaClient(options.client) && !options.client._sentryInstrumented) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      addNonEnumerableProperty(options.client , '_sentryInstrumented', true);\n\n      const clientData = {};\n      try {\n        const engineConfig = (options.client )._engineConfig;\n        if (engineConfig) {\n          const { activeProvider, clientVersion } = engineConfig;\n          if (activeProvider) {\n            clientData['db.system'] = activeProvider;\n          }\n          if (clientVersion) {\n            clientData['db.prisma.version'] = clientVersion;\n          }\n        }\n      } catch (e) {\n        // ignore\n      }\n\n      options.client.$use((params, next) => {\n        // eslint-disable-next-line deprecation/deprecation\n        if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n          return next(params);\n        }\n\n        const action = params.action;\n        const model = params.model;\n\n        return startSpan(\n          {\n            name: model ? `${model} ${action}` : action,\n            onlyIfParent: true,\n            op: 'db.prisma',\n            attributes: {\n              [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.db.prisma',\n            },\n            data: { ...clientData, 'db.operation': action },\n          },\n          () => next(params),\n        );\n      });\n    } else {\n      DEBUG_BUILD &&\n        logger.warn('Unsupported Prisma client provided to PrismaIntegration. Provided client:', options.client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    // Noop - here for backwards compatibility\n  }\n} Prisma.__initStatic();\n\nexport { Prisma };\n//# sourceMappingURL=prisma.js.map\n","export { Apollo, Express, GraphQL, Mongo, Mysql, Postgres, Prisma } from '@sentry-internal/tracing';\n//# sourceMappingURL=integrations.js.map\n","const replacements = [\n  ['january', '1'],\n  ['february', '2'],\n  ['march', '3'],\n  ['april', '4'],\n  ['may', '5'],\n  ['june', '6'],\n  ['july', '7'],\n  ['august', '8'],\n  ['september', '9'],\n  ['october', '10'],\n  ['november', '11'],\n  ['december', '12'],\n  ['jan', '1'],\n  ['feb', '2'],\n  ['mar', '3'],\n  ['apr', '4'],\n  ['may', '5'],\n  ['jun', '6'],\n  ['jul', '7'],\n  ['aug', '8'],\n  ['sep', '9'],\n  ['oct', '10'],\n  ['nov', '11'],\n  ['dec', '12'],\n  ['sunday', '0'],\n  ['monday', '1'],\n  ['tuesday', '2'],\n  ['wednesday', '3'],\n  ['thursday', '4'],\n  ['friday', '5'],\n  ['saturday', '6'],\n  ['sun', '0'],\n  ['mon', '1'],\n  ['tue', '2'],\n  ['wed', '3'],\n  ['thu', '4'],\n  ['fri', '5'],\n  ['sat', '6'],\n];\n\n/**\n * Replaces names in cron expressions\n */\nfunction replaceCronNames(cronExpression) {\n  return replacements.reduce(\n    // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n    (acc, [name, replacement]) => acc.replace(new RegExp(name, 'gi'), replacement),\n    cronExpression,\n  );\n}\n\nexport { replaceCronNames };\n//# sourceMappingURL=common.js.map\n","import { withMonitor } from '@sentry/core';\nimport { replaceCronNames } from './common.js';\n\nconst ERROR_TEXT = 'Automatic instrumentation of CronJob only supports crontab string';\n\n/**\n * Instruments the `cron` library to send a check-in event to Sentry for each job execution.\n *\n * ```ts\n * import * as Sentry from '@sentry/node';\n * import { CronJob } from 'cron';\n *\n * const CronJobWithCheckIn = Sentry.cron.instrumentCron(CronJob, 'my-cron-job');\n *\n * // use the constructor\n * const job = new CronJobWithCheckIn('* * * * *', () => {\n *  console.log('You will see this message every minute');\n * });\n *\n * // or from\n * const job = CronJobWithCheckIn.from({ cronTime: '* * * * *', onTick: () => {\n *   console.log('You will see this message every minute');\n * });\n * ```\n */\nfunction instrumentCron(lib, monitorSlug) {\n  let jobScheduled = false;\n\n  return new Proxy(lib, {\n    construct(target, args) {\n      const [cronTime, onTick, onComplete, start, timeZone, ...rest] = args;\n\n      if (typeof cronTime !== 'string') {\n        throw new Error(ERROR_TEXT);\n      }\n\n      if (jobScheduled) {\n        throw new Error(`A job named '${monitorSlug}' has already been scheduled`);\n      }\n\n      jobScheduled = true;\n\n      const cronString = replaceCronNames(cronTime);\n\n      function monitoredTick(context, onComplete) {\n        return withMonitor(\n          monitorSlug,\n          () => {\n            return onTick(context, onComplete);\n          },\n          {\n            schedule: { type: 'crontab', value: cronString },\n            timezone: timeZone || undefined,\n          },\n        );\n      }\n\n      return new target(cronTime, monitoredTick, onComplete, start, timeZone, ...rest);\n    },\n    get(target, prop) {\n      if (prop === 'from') {\n        return (param) => {\n          const { cronTime, onTick, timeZone } = param;\n\n          if (typeof cronTime !== 'string') {\n            throw new Error(ERROR_TEXT);\n          }\n\n          if (jobScheduled) {\n            throw new Error(`A job named '${monitorSlug}' has already been scheduled`);\n          }\n\n          jobScheduled = true;\n\n          const cronString = replaceCronNames(cronTime);\n\n          param.onTick = (context, onComplete) => {\n            return withMonitor(\n              monitorSlug,\n              () => {\n                return onTick(context, onComplete);\n              },\n              {\n                schedule: { type: 'crontab', value: cronString },\n                timezone: timeZone || undefined,\n              },\n            );\n          };\n\n          return target.from(param);\n        };\n      } else {\n        return target[prop];\n      }\n    },\n  });\n}\n\nexport { instrumentCron };\n//# sourceMappingURL=cron.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport { withMonitor } from '@sentry/core';\nimport { replaceCronNames } from './common.js';\n\n/**\n * Wraps the `node-cron` library with check-in monitoring.\n *\n * ```ts\n * import * as Sentry from \"@sentry/node\";\n * import cron from \"node-cron\";\n *\n * const cronWithCheckIn = Sentry.cron.instrumentNodeCron(cron);\n *\n * cronWithCheckIn.schedule(\n *   \"* * * * *\",\n *   () => {\n *     console.log(\"running a task every minute\");\n *   },\n *   { name: \"my-cron-job\" },\n * );\n * ```\n */\nfunction instrumentNodeCron(lib) {\n  return new Proxy(lib, {\n    get(target, prop) {\n      if (prop === 'schedule' && target.schedule) {\n        // When 'get' is called for schedule, return a proxied version of the schedule function\n        return new Proxy(target.schedule, {\n          apply(target, thisArg, argArray) {\n            const [expression, , options] = argArray;\n\n            if (!_optionalChain([options, 'optionalAccess', _ => _.name])) {\n              throw new Error('Missing \"name\" for scheduled job. A name is required for Sentry check-in monitoring.');\n            }\n\n            return withMonitor(\n              options.name,\n              () => {\n                return target.apply(thisArg, argArray);\n              },\n              {\n                schedule: { type: 'crontab', value: replaceCronNames(expression) },\n                timezone: _optionalChain([options, 'optionalAccess', _2 => _2.timezone]),\n              },\n            );\n          },\n        });\n      } else {\n        return target[prop];\n      }\n    },\n  });\n}\n\nexport { instrumentNodeCron };\n//# sourceMappingURL=node-cron.js.map\n","import { withMonitor } from '@sentry/core';\nimport { replaceCronNames } from './common.js';\n\n/**\n * Instruments the `node-schedule` library to send a check-in event to Sentry for each job execution.\n *\n * ```ts\n * import * as Sentry from '@sentry/node';\n * import * as schedule from 'node-schedule';\n *\n * const scheduleWithCheckIn = Sentry.cron.instrumentNodeSchedule(schedule);\n *\n * const job = scheduleWithCheckIn.scheduleJob('my-cron-job', '* * * * *', () => {\n *  console.log('You will see this message every minute');\n * });\n * ```\n */\nfunction instrumentNodeSchedule(lib) {\n  return new Proxy(lib, {\n    get(target, prop) {\n      if (prop === 'scheduleJob') {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        return new Proxy(target.scheduleJob, {\n          apply(target, thisArg, argArray) {\n            const [nameOrExpression, expressionOrCallback] = argArray;\n\n            if (typeof nameOrExpression !== 'string' || typeof expressionOrCallback !== 'string') {\n              throw new Error(\n                \"Automatic instrumentation of 'node-schedule' requires the first parameter of 'scheduleJob' to be a job name string and the second parameter to be a crontab string\",\n              );\n            }\n\n            const monitorSlug = nameOrExpression;\n            const expression = expressionOrCallback;\n\n            return withMonitor(\n              monitorSlug,\n              () => {\n                return target.apply(thisArg, argArray);\n              },\n              {\n                schedule: { type: 'crontab', value: replaceCronNames(expression) },\n              },\n            );\n          },\n        });\n      }\n\n      return target[prop];\n    },\n  });\n}\n\nexport { instrumentNodeSchedule };\n//# sourceMappingURL=node-schedule.js.map\n","import { Integrations as Integrations$1 } from '@sentry/core';\nexport { Hub, SDK_VERSION, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, Scope, addBreadcrumb, addEventProcessor, addGlobalEventProcessor, addIntegration, captureCheckIn, captureEvent, captureException, captureMessage, captureSession, close, configureScope, continueTrace, createTransport, endSession, extractTraceparentData, flush, functionToStringIntegration, getActiveSpan, getActiveTransaction, getClient, getCurrentHub, getCurrentScope, getGlobalScope, getHubFromCarrier, getIsolationScope, getSpanStatusFromHttpCode, inboundFiltersIntegration, isInitialized, lastEventId, linkedErrorsIntegration, makeMain, metrics, parameterize, requestDataIntegration, runWithAsyncContext, setContext, setCurrentClient, setExtra, setExtras, setHttpStatus, setMeasurement, setTag, setTags, setUser, spanStatusfromHttpCode, startActiveSpan, startInactiveSpan, startSession, startSpan, startSpanManual, startTransaction, trace, withActiveSpan, withIsolationScope, withMonitor, withScope } from '@sentry/core';\nexport { autoDiscoverNodePerformanceMonitoringIntegrations } from './tracing/index.js';\nexport { NodeClient } from './client.js';\nexport { makeNodeTransport } from './transports/http.js';\nexport { defaultIntegrations, defaultStackParser, getDefaultIntegrations, getSentryRelease, init } from './sdk.js';\nexport { DEFAULT_USER_INCLUDES, addRequestDataToEvent, extractRequestData } from '@sentry/utils';\nexport { deepReadDirSync } from './utils.js';\nimport { createGetModuleFromFilename } from './module.js';\nexport { createGetModuleFromFilename } from './module.js';\nexport { enableAnrDetection } from './integrations/anr/legacy.js';\nimport * as handlers from './handlers.js';\nexport { handlers as Handlers };\nimport * as index from './integrations/index.js';\nimport * as integrations from './tracing/integrations.js';\nexport { consoleIntegration } from './integrations/console.js';\nexport { onUncaughtExceptionIntegration } from './integrations/onuncaughtexception.js';\nexport { onUnhandledRejectionIntegration } from './integrations/onunhandledrejection.js';\nexport { modulesIntegration } from './integrations/modules.js';\nexport { contextLinesIntegration } from './integrations/contextlines.js';\nexport { nodeContextIntegration } from './integrations/context.js';\nexport { localVariablesIntegration } from './integrations/local-variables/index.js';\nexport { spotlightIntegration } from './integrations/spotlight.js';\nexport { anrIntegration } from './integrations/anr/index.js';\nexport { hapiErrorPlugin, hapiIntegration } from './integrations/hapi/index.js';\nexport { Undici, nativeNodeFetchintegration } from './integrations/undici/index.js';\nexport { Http, httpIntegration } from './integrations/http.js';\nimport { instrumentCron } from './cron/cron.js';\nimport { instrumentNodeCron } from './cron/node-cron.js';\nimport { instrumentNodeSchedule } from './cron/node-schedule.js';\n\n/**\n * @deprecated use `createGetModuleFromFilename` instead.\n */\nconst getModuleFromFilename = createGetModuleFromFilename();\n\n// TODO: Deprecate this once we migrated tracing integrations\nconst Integrations = {\n  // eslint-disable-next-line deprecation/deprecation\n  ...Integrations$1,\n  ...index,\n  ...integrations,\n};\n\n/** Methods to instrument cron libraries for Sentry check-ins */\nconst cron = {\n  instrumentCron,\n  instrumentNodeCron,\n  instrumentNodeSchedule,\n};\n\nexport { Integrations, cron, getModuleFromFilename };\n//# sourceMappingURL=index.js.map\n","import { logger, consoleSandbox } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { getCurrentScope } from './exports.js';\nimport { getCurrentHub } from './hub.js';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if (DEBUG_BUILD) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n      });\n    }\n  }\n  const scope = getCurrentScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  setCurrentClient(client);\n  initializeClient(client);\n}\n\n/**\n * Make the given client the current client.\n */\nfunction setCurrentClient(client) {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n  // eslint-disable-next-line deprecation/deprecation\n  const top = hub.getStackTop();\n  top.client = client;\n  top.scope.setClient(client);\n}\n\n/**\n * Initialize the client for the current scope.\n * Make sure to call this after `setCurrentClient()`.\n */\nfunction initializeClient(client) {\n  if (client.init) {\n    client.init();\n    // TODO v8: Remove this fallback\n    // eslint-disable-next-line deprecation/deprecation\n  } else if (client.setupIntegrations) {\n    // eslint-disable-next-line deprecation/deprecation\n    client.setupIntegrations();\n  }\n}\n\nexport { initAndBind, setCurrentClient };\n//# sourceMappingURL=sdk.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport * as domain from 'domain';\nimport { setAsyncContextStrategy, ensureHubOnCarrier, getHubFromCarrier, setHubOnCarrier } from '@sentry/core';\n\nfunction getActiveDomain() {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n  return (domain ).active ;\n}\n\nfunction getCurrentHub() {\n  const activeDomain = getActiveDomain();\n\n  // If there's no active domain, just return undefined and the global hub will be used\n  if (!activeDomain) {\n    return undefined;\n  }\n\n  ensureHubOnCarrier(activeDomain);\n\n  return getHubFromCarrier(activeDomain);\n}\n\nfunction createNewHub(parent) {\n  const carrier = {};\n  ensureHubOnCarrier(carrier, parent);\n  return getHubFromCarrier(carrier);\n}\n\nfunction runWithAsyncContext(callback, options) {\n  const activeDomain = getActiveDomain();\n\n  if (activeDomain && _optionalChain([options, 'optionalAccess', _ => _.reuseExisting])) {\n    // We're already in a domain, so we don't need to create a new one, just call the callback with the current hub\n    return callback();\n  }\n\n  const local = domain.create() ;\n\n  const parentHub = activeDomain ? getHubFromCarrier(activeDomain) : undefined;\n  const newHub = createNewHub(parentHub);\n  setHubOnCarrier(local, newHub);\n\n  return local.bind(() => {\n    return callback();\n  })();\n}\n\n/**\n * Sets the async context strategy to use Node.js domains.\n */\nfunction setDomainAsyncContextStrategy() {\n  setAsyncContextStrategy({ getCurrentHub, runWithAsyncContext });\n}\n\nexport { setDomainAsyncContextStrategy };\n//# sourceMappingURL=domain.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport { setAsyncContextStrategy, ensureHubOnCarrier, getHubFromCarrier } from '@sentry/core';\nimport * as async_hooks from 'async_hooks';\n\nlet asyncStorage;\n\n/**\n * Sets the async context strategy to use AsyncLocalStorage which requires Node v12.17.0 or v13.10.0.\n */\nfunction setHooksAsyncContextStrategy() {\n  if (!asyncStorage) {\n    asyncStorage = new (async_hooks ).AsyncLocalStorage();\n  }\n\n  function getCurrentHub() {\n    return asyncStorage.getStore();\n  }\n\n  function createNewHub(parent) {\n    const carrier = {};\n    ensureHubOnCarrier(carrier, parent);\n    return getHubFromCarrier(carrier);\n  }\n\n  function runWithAsyncContext(callback, options) {\n    const existingHub = getCurrentHub();\n\n    if (existingHub && _optionalChain([options, 'optionalAccess', _ => _.reuseExisting])) {\n      // We're already in an async context, so we don't need to create a new one\n      // just call the callback with the current hub\n      return callback();\n    }\n\n    const newHub = createNewHub(existingHub);\n\n    return asyncStorage.run(newHub, () => {\n      return callback();\n    });\n  }\n\n  setAsyncContextStrategy({ getCurrentHub, runWithAsyncContext });\n}\n\nexport { setHooksAsyncContextStrategy };\n//# sourceMappingURL=hooks.js.map\n","import { NODE_VERSION } from '../nodeVersion.js';\nimport { setDomainAsyncContextStrategy } from './domain.js';\nimport { setHooksAsyncContextStrategy } from './hooks.js';\n\n/**\n * Sets the correct async context strategy for Node.js\n *\n * Node.js >= 14 uses AsyncLocalStorage\n * Node.js < 14 uses domains\n */\nfunction setNodeAsyncContextStrategy() {\n  if (NODE_VERSION.major >= 14) {\n    setHooksAsyncContextStrategy();\n  } else {\n    setDomainAsyncContextStrategy();\n  }\n}\n\nexport { setNodeAsyncContextStrategy };\n//# sourceMappingURL=index.js.map\n","/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n","import { makeDsn, dsnToString, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions = {} ,\n) {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","import { getSdkMetadataForEnvelopeHeader, dsnToString, createEnvelope, createEventEnvelopeHeaders } from '@sentry/utils';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjut a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem = [{ type: eventType }, event];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\nexport { createEventEnvelope, createSessionEnvelope };\n//# sourceMappingURL=envelope.js.map\n","const COUNTER_METRIC_TYPE = 'c' ;\nconst GAUGE_METRIC_TYPE = 'g' ;\nconst SET_METRIC_TYPE = 's' ;\nconst DISTRIBUTION_METRIC_TYPE = 'd' ;\n\n/**\n * Normalization regex for metric names and metric tag names.\n *\n * This enforces that names and tag keys only contain alphanumeric characters,\n * underscores, forward slashes, periods, and dashes.\n *\n * See: https://develop.sentry.dev/sdk/metrics/#normalization\n */\nconst NAME_AND_TAG_KEY_NORMALIZATION_REGEX = /[^a-zA-Z0-9_/.-]+/g;\n\n/**\n * Normalization regex for metric tag values.\n *\n * This enforces that values only contain words, digits, or the following\n * special characters: _:/@.{}[\\]$-\n *\n * See: https://develop.sentry.dev/sdk/metrics/#normalization\n */\nconst TAG_VALUE_NORMALIZATION_REGEX = /[^\\w\\d\\s_:/@.{}[\\]$-]+/g;\n\n/**\n * This does not match spec in https://develop.sentry.dev/sdk/metrics\n * but was chosen to optimize for the most common case in browser environments.\n */\nconst DEFAULT_BROWSER_FLUSH_INTERVAL = 5000;\n\n/**\n * SDKs are required to bucket into 10 second intervals (rollup in seconds)\n * which is the current lower bound of metric accuracy.\n */\nconst DEFAULT_FLUSH_INTERVAL = 10000;\n\n/**\n * The maximum number of metrics that should be stored in memory.\n */\nconst MAX_WEIGHT = 10000;\n\nexport { COUNTER_METRIC_TYPE, DEFAULT_BROWSER_FLUSH_INTERVAL, DEFAULT_FLUSH_INTERVAL, DISTRIBUTION_METRIC_TYPE, GAUGE_METRIC_TYPE, MAX_WEIGHT, NAME_AND_TAG_KEY_NORMALIZATION_REGEX, SET_METRIC_TYPE, TAG_VALUE_NORMALIZATION_REGEX };\n//# sourceMappingURL=constants.js.map\n","import { dropUndefinedKeys } from '@sentry/utils';\nimport { NAME_AND_TAG_KEY_NORMALIZATION_REGEX, TAG_VALUE_NORMALIZATION_REGEX } from './constants.js';\n\n/**\n * Generate bucket key from metric properties.\n */\nfunction getBucketKey(\n  metricType,\n  name,\n  unit,\n  tags,\n) {\n  const stringifiedTags = Object.entries(dropUndefinedKeys(tags)).sort((a, b) => a[0].localeCompare(b[0]));\n  return `${metricType}${name}${unit}${stringifiedTags}`;\n}\n\n/* eslint-disable no-bitwise */\n/**\n * Simple hash function for strings.\n */\nfunction simpleHash(s) {\n  let rv = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n    rv = (rv << 5) - rv + c;\n    rv &= rv;\n  }\n  return rv >>> 0;\n}\n/* eslint-enable no-bitwise */\n\n/**\n * Serialize metrics buckets into a string based on statsd format.\n *\n * Example of format:\n * metric.name@second:1:1.2|d|#a:value,b:anothervalue|T12345677\n * Segments:\n * name: metric.name\n * unit: second\n * value: [1, 1.2]\n * type of metric: d (distribution)\n * tags: { a: value, b: anothervalue }\n * timestamp: 12345677\n */\nfunction serializeMetricBuckets(metricBucketItems) {\n  let out = '';\n  for (const item of metricBucketItems) {\n    const tagEntries = Object.entries(item.tags);\n    const maybeTags = tagEntries.length > 0 ? `|#${tagEntries.map(([key, value]) => `${key}:${value}`).join(',')}` : '';\n    out += `${item.name}@${item.unit}:${item.metric}|${item.metricType}${maybeTags}|T${item.timestamp}\\n`;\n  }\n  return out;\n}\n\n/**\n * Sanitizes tags.\n */\nfunction sanitizeTags(unsanitizedTags) {\n  const tags = {};\n  for (const key in unsanitizedTags) {\n    if (Object.prototype.hasOwnProperty.call(unsanitizedTags, key)) {\n      const sanitizedKey = key.replace(NAME_AND_TAG_KEY_NORMALIZATION_REGEX, '_');\n      tags[sanitizedKey] = String(unsanitizedTags[key]).replace(TAG_VALUE_NORMALIZATION_REGEX, '');\n    }\n  }\n  return tags;\n}\n\nexport { getBucketKey, sanitizeTags, serializeMetricBuckets, simpleHash };\n//# sourceMappingURL=utils.js.map\n","import { dsnToString, createEnvelope } from '@sentry/utils';\nimport { serializeMetricBuckets } from './utils.js';\n\n/**\n * Create envelope from a metric aggregate.\n */\nfunction createMetricEnvelope(\n  metricBucketItems,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const headers = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const item = createMetricEnvelopeItem(metricBucketItems);\n  return createEnvelope(headers, [item]);\n}\n\nfunction createMetricEnvelopeItem(metricBucketItems) {\n  const payload = serializeMetricBuckets(metricBucketItems);\n  const metricHeaders = {\n    type: 'statsd',\n    length: payload.length,\n  };\n  return [metricHeaders, payload];\n}\n\nexport { createMetricEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { makeDsn, logger, checkOrSetAlreadyCaught, isParameterizedString, isPrimitive, resolvedSyncPromise, addItemToEnvelope, createAttachmentEnvelopeItem, SyncPromise, rejectedSyncPromise, SentryError, isThenable, isPlainObject } from '@sentry/utils';\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { getClient } from './exports.js';\nimport { getIsolationScope } from './hub.js';\nimport { setupIntegration, afterSetupIntegrations, setupIntegrations } from './integration.js';\nimport { createMetricEnvelope } from './metrics/envelope.js';\nimport { updateSession } from './session.js';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext.js';\nimport { prepareEvent } from './utils/prepareEvent.js';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /**\n   * A reference to a metrics aggregator\n   *\n   * @experimental Note this is alpha API. It may experience breaking changes in the future.\n   */\n\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n\n  /** Indicates whether this client's integrations have been set up. */\n\n  /** Number of calls being processed */\n\n  /** Holds flushable  */\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {\n    this._options = options;\n    this._integrations = {};\n    this._integrationsInitialized = false;\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(\n      this._captureEvent(event, hint, capturedSpanScope || scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!(typeof session.release === 'string')) {\n      DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      if (this.metricsAggregator) {\n        this.metricsAggregator.flush();\n      }\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      if (this.metricsAggregator) {\n        this.metricsAggregator.close();\n      }\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n   getEventProcessors() {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n   addEventProcessor(eventProcessor) {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * This is an internal function to setup all integrations that should run on the client.\n   * @deprecated Use `client.init()` instead.\n   */\n   setupIntegrations(forceInitialize) {\n    if ((forceInitialize && !this._integrationsInitialized) || (this._isEnabled() && !this._integrationsInitialized)) {\n      this._setupIntegrations();\n    }\n  }\n\n  /** @inheritdoc */\n   init() {\n    if (this._isEnabled()) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n   getIntegrationById(integrationId) {\n    return this.getIntegrationByName(integrationId);\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n   getIntegrationByName(integrationName) {\n    return this._integrations[integrationName] ;\n  }\n\n  /**\n   * Returns the client's instance of the given integration class, it any.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addIntegration(integration) {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(\n        env,\n        createAttachmentEnvelopeItem(\n          attachment,\n          this._options.transportOptions && this._options.transportOptions.textEncoder,\n        ),\n      );\n    }\n\n    const promise = this._sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category, _event) {\n    // Note: we use `event` in replay, where we overwrite this hook.\n\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureAggregateMetrics(metricBucketItems) {\n    DEBUG_BUILD && logger.log(`Flushing aggregated metrics, number of metrics: ${metricBucketItems.length}`);\n    const metricsEnvelope = createMetricEnvelope(\n      metricBucketItems,\n      this._dsn,\n      this._options._metadata,\n      this._options.tunnel,\n    );\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(metricsEnvelope);\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   on(hook, callback) {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   emit(hook, ...rest) {\n    if (this._hooks[hook]) {\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n   _setupIntegrations() {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n\n    // TODO v8: We don't need this flag anymore\n    this._integrationsInitialized = true;\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(\n    event,\n    hint,\n    scope,\n    isolationScope = getIsolationScope(),\n  ) {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    return prepareEvent(options, event, hint, scope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      const propagationContext = {\n        ...isolationScope.getPropagationContext(),\n        ...(scope ? scope.getPropagationContext() : undefined),\n      };\n\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason ;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, scope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      DEBUG_BUILD && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\n/**\n * Add an event processor to the current client.\n * This event processor will run for all events processed by this client.\n */\nfunction addEventProcessor(callback) {\n  const client = getClient();\n\n  if (!client || !client.addEventProcessor) {\n    return;\n  }\n\n  client.addEventProcessor(callback);\n}\n\nexport { BaseClient, addEventProcessor };\n//# sourceMappingURL=baseclient.js.map\n","import { dsnToString, dropUndefinedKeys, createEnvelope } from '@sentry/utils';\n\n/**\n * Create envelope from check in item.\n */\nfunction createCheckInEnvelope(\n  checkIn,\n  dynamicSamplingContext,\n  metadata,\n  tunnel,\n  dsn,\n) {\n  const headers = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && !!dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  if (dynamicSamplingContext) {\n    headers.trace = dropUndefinedKeys(dynamicSamplingContext) ;\n  }\n\n  const item = createCheckInEnvelopeItem(checkIn);\n  return createEnvelope(headers, [item]);\n}\n\nfunction createCheckInEnvelopeItem(checkIn) {\n  const checkInHeaders = {\n    type: 'check_in',\n  };\n  return [checkInHeaders, checkIn];\n}\n\nexport { createCheckInEnvelope };\n//# sourceMappingURL=checkin.js.map\n","import { COUNTER_METRIC_TYPE, GAUGE_METRIC_TYPE, DISTRIBUTION_METRIC_TYPE, SET_METRIC_TYPE } from './constants.js';\nimport { simpleHash } from './utils.js';\n\n/**\n * A metric instance representing a counter.\n */\nclass CounterMetric  {\n   constructor( _value) {this._value = _value;}\n\n  /** @inheritDoc */\n   get weight() {\n    return 1;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._value += value;\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return `${this._value}`;\n  }\n}\n\n/**\n * A metric instance representing a gauge.\n */\nclass GaugeMetric  {\n\n   constructor(value) {\n    this._last = value;\n    this._min = value;\n    this._max = value;\n    this._sum = value;\n    this._count = 1;\n  }\n\n  /** @inheritDoc */\n   get weight() {\n    return 5;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._last = value;\n    if (value < this._min) {\n      this._min = value;\n    }\n    if (value > this._max) {\n      this._max = value;\n    }\n    this._sum += value;\n    this._count++;\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return `${this._last}:${this._min}:${this._max}:${this._sum}:${this._count}`;\n  }\n}\n\n/**\n * A metric instance representing a distribution.\n */\nclass DistributionMetric  {\n\n   constructor(first) {\n    this._value = [first];\n  }\n\n  /** @inheritDoc */\n   get weight() {\n    return this._value.length;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._value.push(value);\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return this._value.join(':');\n  }\n}\n\n/**\n * A metric instance representing a set.\n */\nclass SetMetric  {\n\n   constructor( first) {this.first = first;\n    this._value = new Set([first]);\n  }\n\n  /** @inheritDoc */\n   get weight() {\n    return this._value.size;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._value.add(value);\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return Array.from(this._value)\n      .map(val => (typeof val === 'string' ? simpleHash(val) : val))\n      .join(':');\n  }\n}\n\nconst METRIC_MAP = {\n  [COUNTER_METRIC_TYPE]: CounterMetric,\n  [GAUGE_METRIC_TYPE]: GaugeMetric,\n  [DISTRIBUTION_METRIC_TYPE]: DistributionMetric,\n  [SET_METRIC_TYPE]: SetMetric,\n};\n\nexport { CounterMetric, DistributionMetric, GaugeMetric, METRIC_MAP, SetMetric };\n//# sourceMappingURL=instance.js.map\n","import { timestampInSeconds } from '@sentry/utils';\nimport { DEFAULT_FLUSH_INTERVAL, NAME_AND_TAG_KEY_NORMALIZATION_REGEX, SET_METRIC_TYPE, MAX_WEIGHT } from './constants.js';\nimport { METRIC_MAP } from './instance.js';\nimport { updateMetricSummaryOnActiveSpan } from './metric-summary.js';\nimport { sanitizeTags, getBucketKey } from './utils.js';\n\n/**\n * A metrics aggregator that aggregates metrics in memory and flushes them periodically.\n */\nclass MetricsAggregator  {\n  // TODO(@anonrig): Use FinalizationRegistry to have a proper way of flushing the buckets\n  // when the aggregator is garbage collected.\n  // Ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\n\n  // Different metrics have different weights. We use this to limit the number of metrics\n  // that we store in memory.\n\n  // SDKs are required to shift the flush interval by random() * rollup_in_seconds.\n  // That shift is determined once per startup to create jittering.\n\n  // An SDK is required to perform force flushing ahead of scheduled time if the memory\n  // pressure is too high. There is no rule for this other than that SDKs should be tracking\n  // abstract aggregation complexity (eg: a counter only carries a single float, whereas a\n  // distribution is a float per emission).\n  //\n  // Force flush is used on either shutdown, flush() or when we exceed the max weight.\n\n   constructor(  _client) {this._client = _client;\n    this._buckets = new Map();\n    this._bucketsTotalWeight = 0;\n    this._interval = setInterval(() => this._flush(), DEFAULT_FLUSH_INTERVAL);\n    this._flushShift = Math.floor((Math.random() * DEFAULT_FLUSH_INTERVAL) / 1000);\n    this._forceFlush = false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   add(\n    metricType,\n    unsanitizedName,\n    value,\n    unit = 'none',\n    unsanitizedTags = {},\n    maybeFloatTimestamp = timestampInSeconds(),\n  ) {\n    const timestamp = Math.floor(maybeFloatTimestamp);\n    const name = unsanitizedName.replace(NAME_AND_TAG_KEY_NORMALIZATION_REGEX, '_');\n    const tags = sanitizeTags(unsanitizedTags);\n\n    const bucketKey = getBucketKey(metricType, name, unit, tags);\n\n    let bucketItem = this._buckets.get(bucketKey);\n    // If this is a set metric, we need to calculate the delta from the previous weight.\n    const previousWeight = bucketItem && metricType === SET_METRIC_TYPE ? bucketItem.metric.weight : 0;\n\n    if (bucketItem) {\n      bucketItem.metric.add(value);\n      // TODO(abhi): Do we need this check?\n      if (bucketItem.timestamp < timestamp) {\n        bucketItem.timestamp = timestamp;\n      }\n    } else {\n      bucketItem = {\n        // @ts-expect-error we don't need to narrow down the type of value here, saves bundle size.\n        metric: new METRIC_MAP[metricType](value),\n        timestamp,\n        metricType,\n        name,\n        unit,\n        tags,\n      };\n      this._buckets.set(bucketKey, bucketItem);\n    }\n\n    // If value is a string, it's a set metric so calculate the delta from the previous weight.\n    const val = typeof value === 'string' ? bucketItem.metric.weight - previousWeight : value;\n    updateMetricSummaryOnActiveSpan(metricType, name, val, unit, unsanitizedTags, bucketKey);\n\n    // We need to keep track of the total weight of the buckets so that we can\n    // flush them when we exceed the max weight.\n    this._bucketsTotalWeight += bucketItem.metric.weight;\n\n    if (this._bucketsTotalWeight >= MAX_WEIGHT) {\n      this.flush();\n    }\n  }\n\n  /**\n   * Flushes the current metrics to the transport via the transport.\n   */\n   flush() {\n    this._forceFlush = true;\n    this._flush();\n  }\n\n  /**\n   * Shuts down metrics aggregator and clears all metrics.\n   */\n   close() {\n    this._forceFlush = true;\n    clearInterval(this._interval);\n    this._flush();\n  }\n\n  /**\n   * Flushes the buckets according to the internal state of the aggregator.\n   * If it is a force flush, which happens on shutdown, it will flush all buckets.\n   * Otherwise, it will only flush buckets that are older than the flush interval,\n   * and according to the flush shift.\n   *\n   * This function mutates `_forceFlush` and `_bucketsTotalWeight` properties.\n   */\n   _flush() {\n    // TODO(@anonrig): Add Atomics for locking to avoid having force flush and regular flush\n    // running at the same time.\n    // Ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics\n\n    // This path eliminates the need for checking for timestamps since we're forcing a flush.\n    // Remember to reset the flag, or it will always flush all metrics.\n    if (this._forceFlush) {\n      this._forceFlush = false;\n      this._bucketsTotalWeight = 0;\n      this._captureMetrics(this._buckets);\n      this._buckets.clear();\n      return;\n    }\n    const cutoffSeconds = Math.floor(timestampInSeconds()) - DEFAULT_FLUSH_INTERVAL / 1000 - this._flushShift;\n    // TODO(@anonrig): Optimization opportunity.\n    // Convert this map to an array and store key in the bucketItem.\n    const flushedBuckets = new Map();\n    for (const [key, bucket] of this._buckets) {\n      if (bucket.timestamp <= cutoffSeconds) {\n        flushedBuckets.set(key, bucket);\n        this._bucketsTotalWeight -= bucket.metric.weight;\n      }\n    }\n\n    for (const [key] of flushedBuckets) {\n      this._buckets.delete(key);\n    }\n\n    this._captureMetrics(flushedBuckets);\n  }\n\n  /**\n   * Only captures a subset of the buckets passed to this function.\n   * @param flushedBuckets\n   */\n   _captureMetrics(flushedBuckets) {\n    if (flushedBuckets.size > 0 && this._client.captureAggregateMetrics) {\n      // TODO(@anonrig): Optimization opportunity.\n      // This copy operation can be avoided if we store the key in the bucketItem.\n      const buckets = Array.from(flushedBuckets).map(([, bucketItem]) => bucketItem);\n      this._client.captureAggregateMetrics(buckets);\n    }\n  }\n}\n\nexport { MetricsAggregator };\n//# sourceMappingURL=aggregator.js.map\n","import { dropUndefinedKeys } from '@sentry/utils';\nimport { getCurrentScope } from './exports.js';\n\n/**\n * @inheritdoc\n */\nclass SessionFlusher  {\n\n   constructor(client, attrs) {\n    this._client = client;\n    this.flushTimeout = 60;\n    this._pendingAggregates = {};\n    this._isEnabled = true;\n\n    // Call to setInterval, so that flush is called every 60 seconds\n    this._intervalId = setInterval(() => this.flush(), this.flushTimeout * 1000);\n    this._sessionAttrs = attrs;\n  }\n\n  /** Checks if `pendingAggregates` has entries, and if it does flushes them by calling `sendSession` */\n   flush() {\n    const sessionAggregates = this.getSessionAggregates();\n    if (sessionAggregates.aggregates.length === 0) {\n      return;\n    }\n    this._pendingAggregates = {};\n    this._client.sendSession(sessionAggregates);\n  }\n\n  /** Massages the entries in `pendingAggregates` and returns aggregated sessions */\n   getSessionAggregates() {\n    const aggregates = Object.keys(this._pendingAggregates).map((key) => {\n      return this._pendingAggregates[parseInt(key)];\n    });\n\n    const sessionAggregates = {\n      attrs: this._sessionAttrs,\n      aggregates,\n    };\n    return dropUndefinedKeys(sessionAggregates);\n  }\n\n  /** JSDoc */\n   close() {\n    clearInterval(this._intervalId);\n    this._isEnabled = false;\n    this.flush();\n  }\n\n  /**\n   * Wrapper function for _incrementSessionStatusCount that checks if the instance of SessionFlusher is enabled then\n   * fetches the session status of the request from `Scope.getRequestSession().status` on the scope and passes them to\n   * `_incrementSessionStatusCount` along with the start date\n   */\n   incrementSessionStatusCount() {\n    if (!this._isEnabled) {\n      return;\n    }\n    const scope = getCurrentScope();\n    const requestSession = scope.getRequestSession();\n\n    if (requestSession && requestSession.status) {\n      this._incrementSessionStatusCount(requestSession.status, new Date());\n      // This is not entirely necessarily but is added as a safe guard to indicate the bounds of a request and so in\n      // case captureRequestSession is called more than once to prevent double count\n      scope.setRequestSession(undefined);\n      /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n    }\n  }\n\n  /**\n   * Increments status bucket in pendingAggregates buffer (internal state) corresponding to status of\n   * the session received\n   */\n   _incrementSessionStatusCount(status, date) {\n    // Truncate minutes and seconds on Session Started attribute to have one minute bucket keys\n    const sessionStartedTrunc = new Date(date).setSeconds(0, 0);\n    this._pendingAggregates[sessionStartedTrunc] = this._pendingAggregates[sessionStartedTrunc] || {};\n\n    // corresponds to aggregated sessions in one specific minute bucket\n    // for example, {\"started\":\"2021-03-16T08:00:00.000Z\",\"exited\":4, \"errored\": 1}\n    const aggregationCounts = this._pendingAggregates[sessionStartedTrunc];\n    if (!aggregationCounts.started) {\n      aggregationCounts.started = new Date(sessionStartedTrunc).toISOString();\n    }\n\n    switch (status) {\n      case 'errored':\n        aggregationCounts.errored = (aggregationCounts.errored || 0) + 1;\n        return aggregationCounts.errored;\n      case 'ok':\n        aggregationCounts.exited = (aggregationCounts.exited || 0) + 1;\n        return aggregationCounts.exited;\n      default:\n        aggregationCounts.crashed = (aggregationCounts.crashed || 0) + 1;\n        return aggregationCounts.crashed;\n    }\n  }\n}\n\nexport { SessionFlusher };\n//# sourceMappingURL=sessionflusher.js.map\n","import { resolvedSyncPromise, eventFromUnknownInput, eventFromMessage, logger, uuid4 } from '@sentry/utils';\nimport { BaseClient } from './baseclient.js';\nimport { createCheckInEnvelope } from './checkin.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { getClient } from './exports.js';\nimport { MetricsAggregator } from './metrics/aggregator.js';\nimport { SessionFlusher } from './sessionflusher.js';\nimport { addTracingExtensions } from './tracing/hubextensions.js';\nimport { spanToTraceContext } from './utils/spanUtils.js';\nimport { getRootSpan } from './utils/getRootSpan.js';\nimport './tracing/spanstatus.js';\nimport { getDynamicSamplingContextFromSpan, getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext.js';\n\n/**\n * The Sentry Server Runtime Client SDK.\n */\nclass ServerRuntimeClient\n\n extends BaseClient {\n\n  /**\n   * Creates a new Edge SDK instance.\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    // Server clients always support tracing\n    addTracingExtensions();\n\n    super(options);\n\n    if (options._experiments && options._experiments['metricsAggregator']) {\n      this.metricsAggregator = new MetricsAggregator(this);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return resolvedSyncPromise(eventFromUnknownInput(getClient(), this._options.stackParser, exception, hint));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level = 'info',\n    hint,\n  ) {\n    return resolvedSyncPromise(\n      eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace),\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint, scope) {\n    // Check if the flag `autoSessionTracking` is enabled, and if `_sessionFlusher` exists because it is initialised only\n    // when the `requestHandler` middleware is used, and hence the expectation is to have SessionAggregates payload\n    // sent to the Server only when the `requestHandler` middleware is used\n    if (this._options.autoSessionTracking && this._sessionFlusher && scope) {\n      const requestSession = scope.getRequestSession();\n\n      // Necessary checks to ensure this is code block is executed only within a request\n      // Should override the status only if `requestSession.status` is `Ok`, which is its initial stage\n      if (requestSession && requestSession.status === 'ok') {\n        requestSession.status = 'errored';\n      }\n    }\n\n    return super.captureException(exception, hint, scope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // Check if the flag `autoSessionTracking` is enabled, and if `_sessionFlusher` exists because it is initialised only\n    // when the `requestHandler` middleware is used, and hence the expectation is to have SessionAggregates payload\n    // sent to the Server only when the `requestHandler` middleware is used\n    if (this._options.autoSessionTracking && this._sessionFlusher && scope) {\n      const eventType = event.type || 'exception';\n      const isException =\n        eventType === 'exception' && event.exception && event.exception.values && event.exception.values.length > 0;\n\n      // If the event is of type Exception, then a request session should be captured\n      if (isException) {\n        const requestSession = scope.getRequestSession();\n\n        // Ensure that this is happening within the bounds of a request, and make sure not to override\n        // Session Status if Errored / Crashed\n        if (requestSession && requestSession.status === 'ok') {\n          requestSession.status = 'errored';\n        }\n      }\n    }\n\n    return super.captureEvent(event, hint, scope);\n  }\n\n  /**\n   *\n   * @inheritdoc\n   */\n   close(timeout) {\n    if (this._sessionFlusher) {\n      this._sessionFlusher.close();\n    }\n    return super.close(timeout);\n  }\n\n  /** Method that initialises an instance of SessionFlusher on Client */\n   initSessionFlusher() {\n    const { release, environment } = this._options;\n    if (!release) {\n      DEBUG_BUILD && logger.warn('Cannot initialise an instance of SessionFlusher if no release is provided!');\n    } else {\n      this._sessionFlusher = new SessionFlusher(this, {\n        release,\n        environment,\n      });\n    }\n  }\n\n  /**\n   * Create a cron monitor check in and send it to Sentry.\n   *\n   * @param checkIn An object that describes a check in.\n   * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n   * to create a monitor automatically when sending a check in.\n   */\n   captureCheckIn(checkIn, monitorConfig, scope) {\n    const id = 'checkInId' in checkIn && checkIn.checkInId ? checkIn.checkInId : uuid4();\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture checkin.');\n      return id;\n    }\n\n    const options = this.getOptions();\n    const { release, environment, tunnel } = options;\n\n    const serializedCheckIn = {\n      check_in_id: id,\n      monitor_slug: checkIn.monitorSlug,\n      status: checkIn.status,\n      release,\n      environment,\n    };\n\n    if ('duration' in checkIn) {\n      serializedCheckIn.duration = checkIn.duration;\n    }\n\n    if (monitorConfig) {\n      serializedCheckIn.monitor_config = {\n        schedule: monitorConfig.schedule,\n        checkin_margin: monitorConfig.checkinMargin,\n        max_runtime: monitorConfig.maxRuntime,\n        timezone: monitorConfig.timezone,\n      };\n    }\n\n    const [dynamicSamplingContext, traceContext] = this._getTraceInfoFromScope(scope);\n    if (traceContext) {\n      serializedCheckIn.contexts = {\n        trace: traceContext,\n      };\n    }\n\n    const envelope = createCheckInEnvelope(\n      serializedCheckIn,\n      dynamicSamplingContext,\n      this.getSdkMetadata(),\n      tunnel,\n      this.getDsn(),\n    );\n\n    DEBUG_BUILD && logger.info('Sending checkin:', checkIn.monitorSlug, checkIn.status);\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n\n    return id;\n  }\n\n  /**\n   * Method responsible for capturing/ending a request session by calling `incrementSessionStatusCount` to increment\n   * appropriate session aggregates bucket\n   */\n   _captureRequestSession() {\n    if (!this._sessionFlusher) {\n      DEBUG_BUILD && logger.warn('Discarded request mode session because autoSessionTracking option was disabled');\n    } else {\n      this._sessionFlusher.incrementSessionStatusCount();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(\n    event,\n    hint,\n    scope,\n    isolationScope,\n  ) {\n    if (this._options.platform) {\n      event.platform = event.platform || this._options.platform;\n    }\n\n    if (this._options.runtime) {\n      event.contexts = {\n        ...event.contexts,\n        runtime: (event.contexts || {}).runtime || this._options.runtime,\n      };\n    }\n\n    if (this._options.serverName) {\n      event.server_name = event.server_name || this._options.serverName;\n    }\n\n    return super._prepareEvent(event, hint, scope, isolationScope);\n  }\n\n  /** Extract trace information from scope */\n   _getTraceInfoFromScope(\n    scope,\n  ) {\n    if (!scope) {\n      return [undefined, undefined];\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    const span = scope.getSpan();\n    if (span) {\n      const samplingContext = getRootSpan(span) ? getDynamicSamplingContextFromSpan(span) : undefined;\n      return [samplingContext, spanToTraceContext(span)];\n    }\n\n    const { traceId, spanId, parentSpanId, dsc } = scope.getPropagationContext();\n    const traceContext = {\n      trace_id: traceId,\n      span_id: spanId,\n      parent_span_id: parentSpanId,\n    };\n    if (dsc) {\n      return [dsc, traceContext];\n    }\n\n    return [getDynamicSamplingContextFromClient(traceId, this, scope), traceContext];\n  }\n}\n\nexport { ServerRuntimeClient };\n//# sourceMappingURL=server-runtime-client.js.map\n","import * as os from 'os';\nimport { TextEncoder } from 'util';\nimport { ServerRuntimeClient, applySdkMetadata } from '@sentry/core';\n\n/**\n * The Sentry Node SDK Client.\n *\n * @see NodeClientOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass NodeClient extends ServerRuntimeClient {\n  /**\n   * Creates a new Node SDK instance.\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    applySdkMetadata(options, 'node');\n\n    // Until node supports global TextEncoder in all versions we support, we are forced to pass it from util\n    options.transportOptions = {\n      textEncoder: new TextEncoder(),\n      ...options.transportOptions,\n    };\n\n    const clientOptions = {\n      ...options,\n      platform: 'node',\n      runtime: { name: 'node', version: global.process.version },\n      serverName: options.serverName || global.process.env.SENTRY_NAME || os.hostname(),\n    };\n\n    super(clientOptions);\n  }\n}\n\nexport { NodeClient };\n//# sourceMappingURL=client.js.map\n","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\nexport { _nullishCoalesce };\n//# sourceMappingURL=_nullishCoalesce.js.map\n","import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, category) {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now = Date.now()) {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","import { makePromiseBuffer, forEachEnvelopeItem, envelopeItemTypeToDataCategory, isRateLimited, resolvedSyncPromise, createEnvelope, SentryError, logger, serializeEnvelope, updateRateLimits } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const envelopeItemDataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, envelopeItemDataCategory)) {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item, type) {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item )[1] : undefined;\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","import { _nullishCoalesce } from '@sentry/utils';\nimport * as http from 'http';\nimport 'https';\n\n/**\n* This code was originally forked from https://github.com/TooTallNate/proxy-agents/tree/b133295fd16f6475578b6b15bd9b4e33ecb0d0b7\n* With the following licence:\n*\n* (The MIT License)\n*\n* Copyright (c) 2013 Nathan Rajlich <nathan@tootallnate.net>*\n*\n* Permission is hereby granted, free of charge, to any person obtaining\n* a copy of this software and associated documentation files (the\n* 'Software'), to deal in the Software without restriction, including\n* without limitation the rights to use, copy, modify, merge, publish,\n* distribute, sublicense, and/or sell copies of the Software, and to\n* permit persons to whom the Software is furnished to do so, subject to\n* the following conditions:*\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.*\n*\n* THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n* IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n* CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n* TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n* SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nconst INTERNAL = Symbol('AgentBaseInternalState');\n\nclass Agent extends http.Agent {\n\n  // Set by `http.Agent` - missing from `@types/node`\n\n  constructor(opts) {\n    super(opts);\n    this[INTERNAL] = {};\n  }\n\n  /**\n   * Determine whether this is an `http` or `https` request.\n   */\n  isSecureEndpoint(options) {\n    if (options) {\n      // First check the `secureEndpoint` property explicitly, since this\n      // means that a parent `Agent` is \"passing through\" to this instance.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      if (typeof (options ).secureEndpoint === 'boolean') {\n        return options.secureEndpoint;\n      }\n\n      // If no explicit `secure` endpoint, check if `protocol` property is\n      // set. This will usually be the case since using a full string URL\n      // or `URL` instance should be the most common usage.\n      if (typeof options.protocol === 'string') {\n        return options.protocol === 'https:';\n      }\n    }\n\n    // Finally, if no `protocol` property was set, then fall back to\n    // checking the stack trace of the current call stack, and try to\n    // detect the \"https\" module.\n    const { stack } = new Error();\n    if (typeof stack !== 'string') return false;\n    return stack.split('\\n').some(l => l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);\n  }\n\n  createSocket(req, options, cb) {\n    const connectOpts = {\n      ...options,\n      secureEndpoint: this.isSecureEndpoint(options),\n    };\n    Promise.resolve()\n      .then(() => this.connect(req, connectOpts))\n      .then(socket => {\n        if (socket instanceof http.Agent) {\n          // @ts-expect-error `addRequest()` isn't defined in `@types/node`\n          return socket.addRequest(req, connectOpts);\n        }\n        this[INTERNAL].currentSocket = socket;\n        // @ts-expect-error `createSocket()` isn't defined in `@types/node`\n        super.createSocket(req, options, cb);\n      }, cb);\n  }\n\n  createConnection() {\n    const socket = this[INTERNAL].currentSocket;\n    this[INTERNAL].currentSocket = undefined;\n    if (!socket) {\n      throw new Error('No socket was returned in the `connect()` function');\n    }\n    return socket;\n  }\n\n  get defaultPort() {\n    return _nullishCoalesce(this[INTERNAL].defaultPort, () => ( (this.protocol === 'https:' ? 443 : 80)));\n  }\n\n  set defaultPort(v) {\n    if (this[INTERNAL]) {\n      this[INTERNAL].defaultPort = v;\n    }\n  }\n\n  get protocol() {\n    return _nullishCoalesce(this[INTERNAL].protocol, () => ( (this.isSecureEndpoint() ? 'https:' : 'http:')));\n  }\n\n  set protocol(v) {\n    if (this[INTERNAL]) {\n      this[INTERNAL].protocol = v;\n    }\n  }\n}\n\nexport { Agent };\n//# sourceMappingURL=base.js.map\n","import { logger } from '@sentry/utils';\n\nfunction debug(...args) {\n  logger.log('[https-proxy-agent:parse-proxy-response]', ...args);\n}\n\nfunction parseProxyResponse(socket) {\n  return new Promise((resolve, reject) => {\n    // we need to buffer any HTTP traffic that happens with the proxy before we get\n    // the CONNECT response, so that if the response is anything other than an \"200\"\n    // response code, then we can re-play the \"data\" events on the socket once the\n    // HTTP parser is hooked up...\n    let buffersLength = 0;\n    const buffers = [];\n\n    function read() {\n      const b = socket.read();\n      if (b) ondata(b);\n      else socket.once('readable', read);\n    }\n\n    function cleanup() {\n      socket.removeListener('end', onend);\n      socket.removeListener('error', onerror);\n      socket.removeListener('readable', read);\n    }\n\n    function onend() {\n      cleanup();\n      debug('onend');\n      reject(new Error('Proxy connection ended before receiving CONNECT response'));\n    }\n\n    function onerror(err) {\n      cleanup();\n      debug('onerror %o', err);\n      reject(err);\n    }\n\n    function ondata(b) {\n      buffers.push(b);\n      buffersLength += b.length;\n\n      const buffered = Buffer.concat(buffers, buffersLength);\n      const endOfHeaders = buffered.indexOf('\\r\\n\\r\\n');\n\n      if (endOfHeaders === -1) {\n        // keep buffering\n        debug('have not received end of HTTP headers yet...');\n        read();\n        return;\n      }\n\n      const headerParts = buffered.slice(0, endOfHeaders).toString('ascii').split('\\r\\n');\n      const firstLine = headerParts.shift();\n      if (!firstLine) {\n        socket.destroy();\n        return reject(new Error('No header received from proxy CONNECT response'));\n      }\n      const firstLineParts = firstLine.split(' ');\n      const statusCode = +firstLineParts[1];\n      const statusText = firstLineParts.slice(2).join(' ');\n      const headers = {};\n      for (const header of headerParts) {\n        if (!header) continue;\n        const firstColon = header.indexOf(':');\n        if (firstColon === -1) {\n          socket.destroy();\n          return reject(new Error(`Invalid header from proxy CONNECT response: \"${header}\"`));\n        }\n        const key = header.slice(0, firstColon).toLowerCase();\n        const value = header.slice(firstColon + 1).trimStart();\n        const current = headers[key];\n        if (typeof current === 'string') {\n          headers[key] = [current, value];\n        } else if (Array.isArray(current)) {\n          current.push(value);\n        } else {\n          headers[key] = value;\n        }\n      }\n      debug('got proxy server response: %o %o', firstLine, headers);\n      cleanup();\n      resolve({\n        connect: {\n          statusCode,\n          statusText,\n          headers,\n        },\n        buffered,\n      });\n    }\n\n    socket.on('error', onerror);\n    socket.on('end', onend);\n\n    read();\n  });\n}\n\nexport { parseProxyResponse };\n//# sourceMappingURL=parse-proxy-response.js.map\n","import { _nullishCoalesce, _optionalChain } from '@sentry/utils';\nimport * as net from 'net';\nimport * as tls from 'tls';\nimport { URL } from 'url';\nimport { logger } from '@sentry/utils';\nimport { Agent } from './base.js';\nimport { parseProxyResponse } from './parse-proxy-response.js';\n\nfunction debug(...args) {\n  logger.log('[https-proxy-agent]', ...args);\n}\n\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to\n * the specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * Outgoing HTTP requests are first tunneled through the proxy server using the\n * `CONNECT` HTTP request method to establish a connection to the proxy server,\n * and then the proxy server connects to the destination target and issues the\n * HTTP request from the proxy server.\n *\n * `https:` requests have their socket connection upgraded to TLS once\n * the connection to the proxy server has been established.\n */\nclass HttpsProxyAgent extends Agent {\n  static __initStatic() {this.protocols = ['http', 'https']; }\n\n  constructor(proxy, opts) {\n    super(opts);\n    this.options = {};\n    this.proxy = typeof proxy === 'string' ? new URL(proxy) : proxy;\n    this.proxyHeaders = _nullishCoalesce(_optionalChain([opts, 'optionalAccess', _2 => _2.headers]), () => ( {}));\n    debug('Creating new HttpsProxyAgent instance: %o', this.proxy.href);\n\n    // Trim off the brackets from IPv6 addresses\n    const host = (this.proxy.hostname || this.proxy.host).replace(/^\\[|\\]$/g, '');\n    const port = this.proxy.port ? parseInt(this.proxy.port, 10) : this.proxy.protocol === 'https:' ? 443 : 80;\n    this.connectOpts = {\n      // Attempt to negotiate http/1.1 for proxy servers that support http/2\n      ALPNProtocols: ['http/1.1'],\n      ...(opts ? omit(opts, 'headers') : null),\n      host,\n      port,\n    };\n  }\n\n  /**\n   * Called when the node-core HTTP client library is creating a\n   * new HTTP request.\n   */\n  async connect(req, opts) {\n    const { proxy } = this;\n\n    if (!opts.host) {\n      throw new TypeError('No \"host\" provided');\n    }\n\n    // Create a socket connection to the proxy server.\n    let socket;\n    if (proxy.protocol === 'https:') {\n      debug('Creating `tls.Socket`: %o', this.connectOpts);\n      const servername = this.connectOpts.servername || this.connectOpts.host;\n      socket = tls.connect({\n        ...this.connectOpts,\n        servername: servername && net.isIP(servername) ? undefined : servername,\n      });\n    } else {\n      debug('Creating `net.Socket`: %o', this.connectOpts);\n      socket = net.connect(this.connectOpts);\n    }\n\n    const headers =\n      typeof this.proxyHeaders === 'function' ? this.proxyHeaders() : { ...this.proxyHeaders };\n    const host = net.isIPv6(opts.host) ? `[${opts.host}]` : opts.host;\n    let payload = `CONNECT ${host}:${opts.port} HTTP/1.1\\r\\n`;\n\n    // Inject the `Proxy-Authorization` header if necessary.\n    if (proxy.username || proxy.password) {\n      const auth = `${decodeURIComponent(proxy.username)}:${decodeURIComponent(proxy.password)}`;\n      headers['Proxy-Authorization'] = `Basic ${Buffer.from(auth).toString('base64')}`;\n    }\n\n    headers.Host = `${host}:${opts.port}`;\n\n    if (!headers['Proxy-Connection']) {\n      headers['Proxy-Connection'] = this.keepAlive ? 'Keep-Alive' : 'close';\n    }\n    for (const name of Object.keys(headers)) {\n      payload += `${name}: ${headers[name]}\\r\\n`;\n    }\n\n    const proxyResponsePromise = parseProxyResponse(socket);\n\n    socket.write(`${payload}\\r\\n`);\n\n    const { connect, buffered } = await proxyResponsePromise;\n    req.emit('proxyConnect', connect);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore Not EventEmitter in Node types\n    this.emit('proxyConnect', connect, req);\n\n    if (connect.statusCode === 200) {\n      req.once('socket', resume);\n\n      if (opts.secureEndpoint) {\n        // The proxy is connecting to a TLS server, so upgrade\n        // this socket connection to a TLS connection.\n        debug('Upgrading socket connection to TLS');\n        const servername = opts.servername || opts.host;\n        return tls.connect({\n          ...omit(opts, 'host', 'path', 'port'),\n          socket,\n          servername: net.isIP(servername) ? undefined : servername,\n        });\n      }\n\n      return socket;\n    }\n\n    // Some other status code that's not 200... need to re-play the HTTP\n    // header \"data\" events onto the socket once the HTTP machinery is\n    // attached so that the node core `http` can parse and handle the\n    // error status code.\n\n    // Close the original socket, and a new \"fake\" socket is returned\n    // instead, so that the proxy doesn't get the HTTP request\n    // written to it (which may contain `Authorization` headers or other\n    // sensitive data).\n    //\n    // See: https://hackerone.com/reports/541502\n    socket.destroy();\n\n    const fakeSocket = new net.Socket({ writable: false });\n    fakeSocket.readable = true;\n\n    // Need to wait for the \"socket\" event to re-play the \"data\" events.\n    req.once('socket', (s) => {\n      debug('Replaying proxy buffer for failed request');\n      // Replay the \"buffered\" Buffer onto the fake `socket`, since at\n      // this point the HTTP module machinery has been hooked up for\n      // the user.\n      s.push(buffered);\n      s.push(null);\n    });\n\n    return fakeSocket;\n  }\n}HttpsProxyAgent.__initStatic();\n\nfunction resume(socket) {\n  socket.resume();\n}\n\nfunction omit(\n  obj,\n  ...keys\n)\n\n {\n  const ret = {}\n\n;\n  let key;\n  for (key in obj) {\n    if (!keys.includes(key)) {\n      ret[key] = obj[key];\n    }\n  }\n  return ret;\n}\n\nexport { HttpsProxyAgent };\n//# sourceMappingURL=index.js.map\n","import { _nullishCoalesce } from '@sentry/utils';\nimport * as http from 'http';\nimport * as https from 'https';\nimport { Readable } from 'stream';\nimport { URL } from 'url';\nimport { createGzip } from 'zlib';\nimport { createTransport } from '@sentry/core';\nimport { consoleSandbox } from '@sentry/utils';\nimport { HttpsProxyAgent } from '../proxy/index.js';\n\n// Estimated maximum size for reasonable standalone event\nconst GZIP_THRESHOLD = 1024 * 32;\n\n/**\n * Gets a stream from a Uint8Array or string\n * Readable.from is ideal but was added in node.js v12.3.0 and v10.17.0\n */\nfunction streamFromBody(body) {\n  return new Readable({\n    read() {\n      this.push(body);\n      this.push(null);\n    },\n  });\n}\n\n/**\n * Creates a Transport that uses native the native 'http' and 'https' modules to send events to Sentry.\n */\nfunction makeNodeTransport(options) {\n  let urlSegments;\n\n  try {\n    urlSegments = new URL(options.url);\n  } catch (e) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sentry/node]: Invalid dsn or tunnel option, will not send any events. The tunnel option must be a full URL when used.',\n      );\n    });\n    return createTransport(options, () => Promise.resolve({}));\n  }\n\n  const isHttps = urlSegments.protocol === 'https:';\n\n  // Proxy prioritization: http => `options.proxy` | `process.env.http_proxy`\n  // Proxy prioritization: https => `options.proxy` | `process.env.https_proxy` | `process.env.http_proxy`\n  const proxy = applyNoProxyOption(\n    urlSegments,\n    options.proxy || (isHttps ? process.env.https_proxy : undefined) || process.env.http_proxy,\n  );\n\n  const nativeHttpModule = isHttps ? https : http;\n  const keepAlive = options.keepAlive === undefined ? false : options.keepAlive;\n\n  // TODO(v7): Evaluate if we can set keepAlive to true. This would involve testing for memory leaks in older node\n  // versions(>= 8) as they had memory leaks when using it: #2555\n  const agent = proxy\n    ? (new HttpsProxyAgent(proxy) )\n    : new nativeHttpModule.Agent({ keepAlive, maxSockets: 30, timeout: 2000 });\n\n  const requestExecutor = createRequestExecutor(options, _nullishCoalesce(options.httpModule, () => ( nativeHttpModule)), agent);\n  return createTransport(options, requestExecutor);\n}\n\n/**\n * Honors the `no_proxy` env variable with the highest priority to allow for hosts exclusion.\n *\n * @param transportUrl The URL the transport intends to send events to.\n * @param proxy The client configured proxy.\n * @returns A proxy the transport should use.\n */\nfunction applyNoProxyOption(transportUrlSegments, proxy) {\n  const { no_proxy } = process.env;\n\n  const urlIsExemptFromProxy =\n    no_proxy &&\n    no_proxy\n      .split(',')\n      .some(\n        exemption => transportUrlSegments.host.endsWith(exemption) || transportUrlSegments.hostname.endsWith(exemption),\n      );\n\n  if (urlIsExemptFromProxy) {\n    return undefined;\n  } else {\n    return proxy;\n  }\n}\n\n/**\n * Creates a RequestExecutor to be used with `createTransport`.\n */\nfunction createRequestExecutor(\n  options,\n  httpModule,\n  agent,\n) {\n  const { hostname, pathname, port, protocol, search } = new URL(options.url);\n  return function makeRequest(request) {\n    return new Promise((resolve, reject) => {\n      let body = streamFromBody(request.body);\n\n      const headers = { ...options.headers };\n\n      if (request.body.length > GZIP_THRESHOLD) {\n        headers['content-encoding'] = 'gzip';\n        body = body.pipe(createGzip());\n      }\n\n      const req = httpModule.request(\n        {\n          method: 'POST',\n          agent,\n          headers,\n          hostname,\n          path: `${pathname}${search}`,\n          port,\n          protocol,\n          ca: options.caCerts,\n        },\n        res => {\n          res.on('data', () => {\n            // Drain socket\n          });\n\n          res.on('end', () => {\n            // Drain socket\n          });\n\n          res.setEncoding('utf8');\n\n          // \"Key-value pairs of header names and values. Header names are lower-cased.\"\n          // https://nodejs.org/api/http.html#http_message_headers\n          const retryAfterHeader = _nullishCoalesce(res.headers['retry-after'], () => ( null));\n          const rateLimitsHeader = _nullishCoalesce(res.headers['x-sentry-rate-limits'], () => ( null));\n\n          resolve({\n            statusCode: res.statusCode,\n            headers: {\n              'retry-after': retryAfterHeader,\n              'x-sentry-rate-limits': Array.isArray(rateLimitsHeader) ? rateLimitsHeader[0] : rateLimitsHeader,\n            },\n          });\n        },\n      );\n\n      req.on('error', reject);\n      body.pipe(req);\n    });\n  };\n}\n\nexport { makeNodeTransport };\n//# sourceMappingURL=http.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport { inboundFiltersIntegration, functionToStringIntegration, linkedErrorsIntegration, requestDataIntegration, getMainCarrier, getIntegrationsToSetup, initAndBind, getClient, startSession, getIsolationScope, endSession, getCurrentScope } from '@sentry/core';\nimport { createStackParser, nodeStackLineParser, stackParserFromStackParserOptions, GLOBAL_OBJ, propagationContextFromHeaders } from '@sentry/utils';\nimport { setNodeAsyncContextStrategy } from './async/index.js';\nimport { NodeClient } from './client.js';\nimport { consoleIntegration } from './integrations/console.js';\nimport { nodeContextIntegration } from './integrations/context.js';\nimport { contextLinesIntegration } from './integrations/contextlines.js';\nimport { httpIntegration } from './integrations/http.js';\nimport { localVariablesIntegration } from './integrations/local-variables/index.js';\nimport { modulesIntegration } from './integrations/modules.js';\nimport { onUncaughtExceptionIntegration } from './integrations/onuncaughtexception.js';\nimport { onUnhandledRejectionIntegration } from './integrations/onunhandledrejection.js';\nimport { spotlightIntegration } from './integrations/spotlight.js';\nimport { nativeNodeFetchintegration } from './integrations/undici/index.js';\nimport { createGetModuleFromFilename } from './module.js';\nimport { makeNodeTransport } from './transports/http.js';\n\n/* eslint-disable max-lines */\n\n/** @deprecated Use `getDefaultIntegrations(options)` instead. */\nconst defaultIntegrations = [\n  // Common\n  inboundFiltersIntegration(),\n  functionToStringIntegration(),\n  linkedErrorsIntegration(),\n  requestDataIntegration(),\n  // Native Wrappers\n  consoleIntegration(),\n  httpIntegration(),\n  nativeNodeFetchintegration(),\n  // Global Handlers\n  onUncaughtExceptionIntegration(),\n  onUnhandledRejectionIntegration(),\n  // Event Info\n  contextLinesIntegration(),\n  localVariablesIntegration(),\n  nodeContextIntegration(),\n  modulesIntegration(),\n];\n\n/** Get the default integrations for the Node SDK. */\nfunction getDefaultIntegrations(_options) {\n  const carrier = getMainCarrier();\n\n  const autoloadedIntegrations = _optionalChain([carrier, 'access', _ => _.__SENTRY__, 'optionalAccess', _2 => _2.integrations]) || [];\n\n  return [\n    // eslint-disable-next-line deprecation/deprecation\n    ...defaultIntegrations,\n    ...autoloadedIntegrations,\n  ];\n}\n\n/**\n * The Sentry Node SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible in the\n * main entry module. To set context information or send manual events, use the\n * provided methods.\n *\n * @example\n * ```\n *\n * const { init } = require('@sentry/node');\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * const { configureScope } = require('@sentry/node');\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * const { addBreadcrumb } = require('@sentry/node');\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * const Sentry = require('@sentry/node');\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link NodeOptions} for documentation on configuration options.\n */\n// eslint-disable-next-line complexity\nfunction init(options = {}) {\n  setNodeAsyncContextStrategy();\n\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = getDefaultIntegrations();\n  }\n\n  if (options.dsn === undefined && process.env.SENTRY_DSN) {\n    options.dsn = process.env.SENTRY_DSN;\n  }\n\n  const sentryTracesSampleRate = process.env.SENTRY_TRACES_SAMPLE_RATE;\n  if (options.tracesSampleRate === undefined && sentryTracesSampleRate) {\n    const tracesSampleRate = parseFloat(sentryTracesSampleRate);\n    if (isFinite(tracesSampleRate)) {\n      options.tracesSampleRate = tracesSampleRate;\n    }\n  }\n\n  if (options.release === undefined) {\n    const detectedRelease = getSentryRelease();\n    if (detectedRelease !== undefined) {\n      options.release = detectedRelease;\n    } else {\n      // If release is not provided, then we should disable autoSessionTracking\n      options.autoSessionTracking = false;\n    }\n  }\n\n  if (options.environment === undefined && process.env.SENTRY_ENVIRONMENT) {\n    options.environment = process.env.SENTRY_ENVIRONMENT;\n  }\n\n  if (options.autoSessionTracking === undefined && options.dsn !== undefined) {\n    options.autoSessionTracking = true;\n  }\n\n  if (options.instrumenter === undefined) {\n    options.instrumenter = 'sentry';\n  }\n\n  // TODO(v7): Refactor this to reduce the logic above\n  const clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || makeNodeTransport,\n  };\n\n  initAndBind(options.clientClass || NodeClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n\n  updateScopeFromEnvVariables();\n\n  if (options.spotlight) {\n    const client = getClient();\n    if (client && client.addIntegration) {\n      // force integrations to be setup even if no DSN was set\n      // If they have already been added before, they will be ignored anyhow\n      const integrations = client.getOptions().integrations;\n      for (const integration of integrations) {\n        client.addIntegration(integration);\n      }\n      client.addIntegration(\n        spotlightIntegration({ sidecarUrl: typeof options.spotlight === 'string' ? options.spotlight : undefined }),\n      );\n    }\n  }\n}\n\n/**\n * Function that takes an instance of NodeClient and checks if autoSessionTracking option is enabled for that client\n */\nfunction isAutoSessionTrackingEnabled(client) {\n  if (client === undefined) {\n    return false;\n  }\n  const clientOptions = client && client.getOptions();\n  if (clientOptions && clientOptions.autoSessionTracking !== undefined) {\n    return clientOptions.autoSessionTracking;\n  }\n  return false;\n}\n\n/**\n * Returns a release dynamically from environment variables.\n */\nfunction getSentryRelease(fallback) {\n  // Always read first as Sentry takes this as precedence\n  if (process.env.SENTRY_RELEASE) {\n    return process.env.SENTRY_RELEASE;\n  }\n\n  // This supports the variable that sentry-webpack-plugin injects\n  if (GLOBAL_OBJ.SENTRY_RELEASE && GLOBAL_OBJ.SENTRY_RELEASE.id) {\n    return GLOBAL_OBJ.SENTRY_RELEASE.id;\n  }\n\n  return (\n    // GitHub Actions - https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables#default-environment-variables\n    process.env.GITHUB_SHA ||\n    // Netlify - https://docs.netlify.com/configure-builds/environment-variables/#build-metadata\n    process.env.COMMIT_REF ||\n    // Vercel - https://vercel.com/docs/v2/build-step#system-environment-variables\n    process.env.VERCEL_GIT_COMMIT_SHA ||\n    process.env.VERCEL_GITHUB_COMMIT_SHA ||\n    process.env.VERCEL_GITLAB_COMMIT_SHA ||\n    process.env.VERCEL_BITBUCKET_COMMIT_SHA ||\n    // Zeit (now known as Vercel)\n    process.env.ZEIT_GITHUB_COMMIT_SHA ||\n    process.env.ZEIT_GITLAB_COMMIT_SHA ||\n    process.env.ZEIT_BITBUCKET_COMMIT_SHA ||\n    // Cloudflare Pages - https://developers.cloudflare.com/pages/platform/build-configuration/#environment-variables\n    process.env.CF_PAGES_COMMIT_SHA ||\n    fallback\n  );\n}\n\n/** Node.js stack parser */\nconst defaultStackParser = createStackParser(nodeStackLineParser(createGetModuleFromFilename()));\n\n/**\n * Enable automatic Session Tracking for the node process.\n */\nfunction startSessionTracking() {\n  startSession();\n  // Emitted in the case of healthy sessions, error of `mechanism.handled: true` and unhandledrejections because\n  // The 'beforeExit' event is not emitted for conditions causing explicit termination,\n  // such as calling process.exit() or uncaught exceptions.\n  // Ref: https://nodejs.org/api/process.html#process_event_beforeexit\n  process.on('beforeExit', () => {\n    const session = getIsolationScope().getSession();\n    const terminalStates = ['exited', 'crashed'];\n    // Only call endSession, if the Session exists on Scope and SessionStatus is not a\n    // Terminal Status i.e. Exited or Crashed because\n    // \"When a session is moved away from ok it must not be updated anymore.\"\n    // Ref: https://develop.sentry.dev/sdk/sessions/\n    if (session && !terminalStates.includes(session.status)) {\n      endSession();\n    }\n  });\n}\n\n/**\n * Update scope and propagation context based on environmental variables.\n *\n * See https://github.com/getsentry/rfcs/blob/main/text/0071-continue-trace-over-process-boundaries.md\n * for more details.\n */\nfunction updateScopeFromEnvVariables() {\n  const sentryUseEnvironment = (process.env.SENTRY_USE_ENVIRONMENT || '').toLowerCase();\n  if (!['false', 'n', 'no', 'off', '0'].includes(sentryUseEnvironment)) {\n    const sentryTraceEnv = process.env.SENTRY_TRACE;\n    const baggageEnv = process.env.SENTRY_BAGGAGE;\n    const propagationContext = propagationContextFromHeaders(sentryTraceEnv, baggageEnv);\n    getCurrentScope().setPropagationContext(propagationContext);\n  }\n}\n\nexport { defaultIntegrations, defaultStackParser, getDefaultIntegrations, getSentryRelease, init, isAutoSessionTrackingEnabled };\n//# sourceMappingURL=sdk.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","/**\n * Returns an environment setting value determined by Vercel's `VERCEL_ENV` environment variable.\n *\n * @param isClient Flag to indicate whether to use the `NEXT_PUBLIC_` prefixed version of the environment variable.\n */\nfunction getVercelEnv(isClient) {\n  const vercelEnvVar = isClient ? process.env.NEXT_PUBLIC_VERCEL_ENV : process.env.VERCEL_ENV;\n  return vercelEnvVar ? `vercel-${vercelEnvVar}` : undefined;\n}\n\nexport { getVercelEnv };\n//# sourceMappingURL=getVercelEnv.js.map\n","export * from \"../shared/lib/constants\";\n\n//# sourceMappingURL=constants.js.map","import { PHASE_PRODUCTION_BUILD } from 'next/constants';\n\n/**\n * Decide if the currently running process is part of the build phase or happening at runtime.\n */\nfunction isBuild() {\n  return process.env.NEXT_PHASE === PHASE_PRODUCTION_BUILD;\n}\n\nexport { isBuild };\n//# sourceMappingURL=isBuild.js.map\n","import { Integrations } from '@sentry/node';\n\n/**\n * A custom HTTP integration where we always enable tracing.\n */\nclass Http extends Integrations.Http {\n   constructor(options) {\n    super({\n      ...options,\n      tracing: true,\n    });\n  }\n}\n\nexport { Http };\n//# sourceMappingURL=httpIntegration.js.map\n","import { Integrations } from '@sentry/node';\n\n/**\n * A custom OnUncaughtException integration that does not exit by default.\n */\nclass OnUncaughtException extends Integrations.OnUncaughtException {\n   constructor(options) {\n    super({\n      exitEvenIfOtherHandlersAreRegistered: false,\n      ...options,\n    });\n  }\n}\n\nexport { OnUncaughtException };\n//# sourceMappingURL=onUncaughtExceptionIntegration.js.map\n","import { defineIntegration, convertIntegrationFnToClass } from '@sentry/core';\nimport { relative, basename } from '@sentry/utils';\n\nconst INTEGRATION_NAME = 'RewriteFrames';\n\nconst _rewriteFramesIntegration = ((options = {}) => {\n  const root = options.root;\n  const prefix = options.prefix || 'app:///';\n\n  const iteratee =\n    options.iteratee ||\n    ((frame) => {\n      if (!frame.filename) {\n        return frame;\n      }\n      // Determine if this is a Windows frame by checking for a Windows-style prefix such as `C:\\`\n      const isWindowsFrame =\n        /^[a-zA-Z]:\\\\/.test(frame.filename) ||\n        // or the presence of a backslash without a forward slash (which are not allowed on Windows)\n        (frame.filename.includes('\\\\') && !frame.filename.includes('/'));\n      // Check if the frame filename begins with `/`\n      const startsWithSlash = /^\\//.test(frame.filename);\n      if (isWindowsFrame || startsWithSlash) {\n        const filename = isWindowsFrame\n          ? frame.filename\n              .replace(/^[a-zA-Z]:/, '') // remove Windows-style prefix\n              .replace(/\\\\/g, '/') // replace all `\\\\` instances with `/`\n          : frame.filename;\n        const base = root ? relative(root, filename) : basename(filename);\n        frame.filename = `${prefix}${base}`;\n      }\n      return frame;\n    });\n\n  /** Process an exception event. */\n  function _processExceptionsEvent(event) {\n    try {\n      return {\n        ...event,\n        exception: {\n          ...event.exception,\n          // The check for this is performed inside `process` call itself, safe to skip here\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          values: event.exception.values.map(value => ({\n            ...value,\n            ...(value.stacktrace && { stacktrace: _processStacktrace(value.stacktrace) }),\n          })),\n        },\n      };\n    } catch (_oO) {\n      return event;\n    }\n  }\n\n  /** Process a stack trace. */\n  function _processStacktrace(stacktrace) {\n    return {\n      ...stacktrace,\n      frames: stacktrace && stacktrace.frames && stacktrace.frames.map(f => iteratee(f)),\n    };\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(originalEvent) {\n      let processedEvent = originalEvent;\n\n      if (originalEvent.exception && Array.isArray(originalEvent.exception.values)) {\n        processedEvent = _processExceptionsEvent(processedEvent);\n      }\n\n      return processedEvent;\n    },\n  };\n}) ;\n\nconst rewriteFramesIntegration = defineIntegration(_rewriteFramesIntegration);\n\n/**\n * Rewrite event frames paths.\n * @deprecated Use `rewriteFramesIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst RewriteFrames = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  rewriteFramesIntegration,\n)\n\n;\n\nexport { RewriteFrames, rewriteFramesIntegration };\n//# sourceMappingURL=rewriteframes.js.map\n","// Based on https://github.com/sindresorhus/escape-string-regexp but with modifications to:\n//   a) reduce the size by skipping the runtime type - checking\n//   b) ensure it gets down - compiled for old versions of Node(the published package only supports Node 12+).\n//\n// MIT License\n//\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files(the \"Software\"), to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software, and\n// to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of\n// the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO\n// THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nfunction escapeStringForRegex(regexString) {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n\nexport { escapeStringForRegex };\n//# sourceMappingURL=escapeStringForRegex.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport * as path from 'path';\nimport { defineIntegration } from '@sentry/core';\nimport { rewriteFramesIntegration as rewriteFramesIntegration$1, RewriteFrames } from '@sentry/integrations';\nimport { escapeStringForRegex, GLOBAL_OBJ } from '@sentry/utils';\n\nconst globalWithInjectedValues = GLOBAL_OBJ\n\n;\n\nconst customRewriteFramesIntegration = ((options) => {\n  // This value is injected at build time, based on the output directory specified in the build config. Though a default\n  // is set there, we set it here as well, just in case something has gone wrong with the injection.\n  const distDirName = globalWithInjectedValues.__rewriteFramesDistDir__;\n\n  if (distDirName) {\n    // nextjs always puts the build directory at the project root level, which is also where you run `next start` from, so\n    // we can read in the project directory from the currently running process\n    const distDirAbsPath = path.resolve(distDirName).replace(/(\\/|\\\\)$/, ''); // We strip trailing slashes because \"app:///_next\" also doesn't have one\n    // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- user input is escaped\n    const SOURCEMAP_FILENAME_REGEX = new RegExp(escapeStringForRegex(distDirAbsPath));\n\n    return rewriteFramesIntegration$1({\n      iteratee: frame => {\n        frame.filename = _optionalChain([frame, 'access', _ => _.filename, 'optionalAccess', _2 => _2.replace, 'call', _3 => _3(SOURCEMAP_FILENAME_REGEX, 'app:///_next')]);\n        return frame;\n      },\n      ...options,\n    });\n  }\n\n  // Do nothing if we can't find a distDirName\n  return {\n    // eslint-disable-next-line deprecation/deprecation\n    name: RewriteFrames.id,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    setupOnce: () => {},\n    processEvent: event => event,\n  };\n}) ;\n\nconst rewriteFramesIntegration = defineIntegration(customRewriteFramesIntegration);\n\nexport { customRewriteFramesIntegration, rewriteFramesIntegration };\n//# sourceMappingURL=rewriteFramesIntegration.js.map\n","import { addTracingExtensions, applySdkMetadata, getClient } from '@sentry/core';\nimport { Integrations as Integrations$1, getDefaultIntegrations, init as init$1, getCurrentScope } from '@sentry/node';\nexport * from '@sentry/node';\nimport { logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../common/debug-build.js';\nimport { devErrorSymbolicationEventProcessor } from '../common/devErrorSymbolicationEventProcessor.js';\nimport { getVercelEnv } from '../common/getVercelEnv.js';\nimport { isBuild } from '../common/utils/isBuild.js';\nimport { Http } from './httpIntegration.js';\nimport { OnUncaughtException } from './onUncaughtExceptionIntegration.js';\nimport { rewriteFramesIntegration } from './rewriteFramesIntegration.js';\nexport { rewriteFramesIntegration } from './rewriteFramesIntegration.js';\nexport { captureUnderscoreErrorException } from '../common/_error.js';\nexport { withSentryGetStaticProps, wrapGetStaticPropsWithSentry } from '../common/wrapGetStaticPropsWithSentry.js';\nexport { withSentryServerSideGetInitialProps, wrapGetInitialPropsWithSentry } from '../common/wrapGetInitialPropsWithSentry.js';\nexport { withSentryServerSideAppGetInitialProps, wrapAppGetInitialPropsWithSentry } from '../common/wrapAppGetInitialPropsWithSentry.js';\nexport { withSentryServerSideDocumentGetInitialProps, wrapDocumentGetInitialPropsWithSentry } from '../common/wrapDocumentGetInitialPropsWithSentry.js';\nexport { withSentryServerSideErrorGetInitialProps, wrapErrorGetInitialPropsWithSentry } from '../common/wrapErrorGetInitialPropsWithSentry.js';\nexport { withSentryGetServerSideProps, wrapGetServerSidePropsWithSentry } from '../common/wrapGetServerSidePropsWithSentry.js';\nexport { wrapServerComponentWithSentry } from '../common/wrapServerComponentWithSentry.js';\nexport { wrapRouteHandlerWithSentry } from '../common/wrapRouteHandlerWithSentry.js';\nexport { wrapApiHandlerWithSentryVercelCrons } from '../common/wrapApiHandlerWithSentryVercelCrons.js';\nexport { wrapMiddlewareWithSentry } from '../common/wrapMiddlewareWithSentry.js';\nexport { wrapPageComponentWithSentry } from '../common/wrapPageComponentWithSentry.js';\nexport { wrapGenerationFunctionWithSentry } from '../common/wrapGenerationFunctionWithSentry.js';\nexport { withServerActionInstrumentation } from '../common/withServerActionInstrumentation.js';\nexport { withSentry, withSentryAPI, wrapApiHandlerWithSentry } from '../common/wrapApiHandlerWithSentry.js';\n\nconst Integrations = {\n  ...Integrations$1,\n  Http,\n  OnUncaughtException,\n};\n\n/**\n * A passthrough error boundary for the server that doesn't depend on any react. Error boundaries don't catch SSR errors\n * so they should simply be a passthrough.\n */\nconst ErrorBoundary = (props) => {\n  if (!props.children) {\n    return null;\n  }\n\n  if (typeof props.children === 'function') {\n    return (props.children )();\n  }\n\n  // since Next.js >= 10 requires React ^16.6.0 we are allowed to return children like this here\n  return props.children ;\n};\n\n/**\n * A passthrough redux enhancer for the server that doesn't depend on anything from the `@sentry/react` package.\n */\nfunction createReduxEnhancer() {\n  return (createStore) => createStore;\n}\n\n/**\n * A passthrough error boundary wrapper for the server that doesn't depend on any react. Error boundaries don't catch\n * SSR errors so they should simply be a passthrough.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withErrorBoundary(\n  WrappedComponent,\n) {\n  return WrappedComponent ;\n}\n\n/**\n * Just a passthrough since we're on the server and showing the report dialog on the server doesn't make any sense.\n */\nfunction showReportDialog() {\n  return;\n}\n\n// TODO (v8): Remove this\n/**\n * @deprecated This constant will be removed in the next major update.\n */\nconst IS_BUILD = isBuild();\n\nconst IS_VERCEL = !!process.env.VERCEL;\n\n/** Inits the Sentry NextJS SDK on node. */\nfunction init(options) {\n  addTracingExtensions();\n\n  if (isBuild()) {\n    return;\n  }\n\n  const customDefaultIntegrations = [\n    ...getDefaultIntegrations(options).filter(\n      integration => !['Http', 'OnUncaughtException'].includes(integration.name),\n    ),\n    rewriteFramesIntegration(),\n    new Http(),\n    new OnUncaughtException(),\n  ];\n\n  const opts = {\n    environment: process.env.SENTRY_ENVIRONMENT || getVercelEnv(false) || process.env.NODE_ENV,\n    defaultIntegrations: customDefaultIntegrations,\n    ...options,\n    // Right now we only capture frontend sessions for Next.js\n    autoSessionTracking: false,\n  };\n\n  if (DEBUG_BUILD && opts.debug) {\n    logger.enable();\n  }\n\n  DEBUG_BUILD && logger.log('Initializing SDK...');\n\n  if (sdkAlreadyInitialized()) {\n    DEBUG_BUILD && logger.log('SDK already initialized');\n    return;\n  }\n\n  applySdkMetadata(opts, 'nextjs', ['nextjs', 'node']);\n\n  init$1(opts);\n\n  const filterTransactions = event => {\n    return event.type === 'transaction' && event.transaction === '/404' ? null : event;\n  };\n\n  filterTransactions.id = 'NextServer404TransactionFilter';\n\n  const scope = getCurrentScope();\n  scope.setTag('runtime', 'node');\n  if (IS_VERCEL) {\n    scope.setTag('vercel', true);\n  }\n\n  scope.addEventProcessor(filterTransactions);\n\n  if (process.env.NODE_ENV === 'development') {\n    scope.addEventProcessor(devErrorSymbolicationEventProcessor);\n  }\n\n  DEBUG_BUILD && logger.log('SDK successfully initialized');\n}\n\nfunction sdkAlreadyInitialized() {\n  return !!getClient();\n}\n\n// TODO (v8): Remove this\n/**\n * @deprecated This constant will be removed in the next major update.\n */\nconst deprecatedIsBuild = () => isBuild();\n\nexport { ErrorBoundary, IS_BUILD, Integrations, createReduxEnhancer, init, deprecatedIsBuild as isBuild, showReportDialog, withErrorBoundary };\n//# sourceMappingURL=index.js.map\n","import { _optionalChain } from './_optionalChain.js';\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, in cases where the value of the expression is to be deleted.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The return value of the `delete` operator: `true`, unless the deletion target is an own, non-configurable\n * property (one which can't be deleted or turned into an accessor, and whose enumerability can't be changed), in which\n * case `false`.\n */\nfunction _optionalChainDelete(ops) {\n  const result = _optionalChain(ops) ;\n  // If `result` is `null`, it means we didn't get to the end of the chain and so nothing was deleted (in which case,\n  // return `true` since that's what `delete` does when it no-ops). If it's non-null, we know the delete happened, in\n  // which case we return whatever the `delete` returned, which will be a boolean.\n  return result == null ? true : result;\n}\n\n// Sucrase version:\n// function _optionalChainDelete(ops) {\n//   const result = _optionalChain(ops);\n//   // by checking for loose equality to `null`, we catch both `null` and `undefined`\n//   return result == null ? true : result;\n// }\n\nexport { _optionalChainDelete };\n//# sourceMappingURL=_optionalChainDelete.js.map\n","/*! @sentry/node 7.109.0 (4a9a207) | https://github.com/getsentry/sentry-javascript */\nexport const base64WorkerScript=\"\";\n","import { _optionalChain, _optionalChainDelete } from '@sentry/utils';\nimport { URL } from 'url';\nimport { defineIntegration, convertIntegrationFnToClass, getGlobalScope, mergeScopeData, getIsolationScope, getCurrentScope } from '@sentry/core';\nimport { logger, GLOBAL_OBJ, dynamicRequire } from '@sentry/utils';\nimport { NODE_VERSION } from '../../nodeVersion.js';\nimport { base64WorkerScript } from './worker-script.js';\n\nconst DEFAULT_INTERVAL = 50;\nconst DEFAULT_HANG_THRESHOLD = 5000;\n\nfunction log(message, ...args) {\n  logger.log(`[ANR] ${message}`, ...args);\n}\n\nfunction globalWithScopeFetchFn() {\n  return GLOBAL_OBJ;\n}\n\n/** Fetches merged scope data */\nfunction getScopeData() {\n  const scope = getGlobalScope().getScopeData();\n  mergeScopeData(scope, getIsolationScope().getScopeData());\n  mergeScopeData(scope, getCurrentScope().getScopeData());\n\n  // We remove attachments because they likely won't serialize well as json\n  scope.attachments = [];\n  // We can't serialize event processor functions\n  scope.eventProcessors = [];\n\n  return scope;\n}\n\n/**\n * We need to use dynamicRequire because worker_threads is not available in node < v12 and webpack error will when\n * targeting those versions\n */\nfunction getWorkerThreads() {\n  return dynamicRequire(module, 'worker_threads');\n}\n\n/**\n * Gets contexts by calling all event processors. This relies on being called after all integrations are setup\n */\nasync function getContexts(client) {\n  let event = { message: 'ANR' };\n  const eventHint = {};\n\n  for (const processor of client.getEventProcessors()) {\n    if (event === null) break;\n    event = await processor(event, eventHint);\n  }\n\n  return _optionalChain([event, 'optionalAccess', _2 => _2.contexts]) || {};\n}\n\nconst INTEGRATION_NAME = 'Anr';\n\nconst _anrIntegration = ((options = {}) => {\n  if (NODE_VERSION.major < 16 || (NODE_VERSION.major === 16 && NODE_VERSION.minor < 17)) {\n    throw new Error('ANR detection requires Node 16.17.0 or later');\n  }\n\n  let worker;\n  let client;\n\n  // Hookup the scope fetch function to the global object so that it can be called from the worker thread via the\n  // debugger when it pauses\n  const gbl = globalWithScopeFetchFn();\n  gbl.__SENTRY_GET_SCOPES__ = getScopeData;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    startWorker: () => {\n      if (worker) {\n        return;\n      }\n\n      if (client) {\n        worker = _startWorker(client, options);\n      }\n    },\n    stopWorker: () => {\n      if (worker) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        worker.then(stop => {\n          stop();\n          worker = undefined;\n        });\n      }\n    },\n    setup(initClient) {\n      client = initClient;\n\n      // setImmediate is used to ensure that all other integrations have had their setup called first.\n      // This allows us to call into all integrations to fetch the full context\n      setImmediate(() => this.startWorker());\n    },\n  } ;\n}) ;\n\nconst anrIntegration = defineIntegration(_anrIntegration) ;\n\n/**\n * Starts a thread to detect App Not Responding (ANR) events\n *\n * ANR detection requires Node 16.17.0 or later\n *\n * @deprecated Use `anrIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Anr = convertIntegrationFnToClass(INTEGRATION_NAME, anrIntegration)\n\n;\n\n// eslint-disable-next-line deprecation/deprecation\n\n/**\n * Starts the ANR worker thread\n */\nasync function _startWorker(\n  client,\n  integrationOptions,\n) {\n  const dsn = client.getDsn();\n\n  if (!dsn) {\n    return () => {\n      //\n    };\n  }\n\n  const contexts = await getContexts(client);\n\n  // These will not be accurate if sent later from the worker thread\n   _optionalChainDelete([contexts, 'access', _3 => _3.app, 'optionalAccess', _4 => delete _4.app_memory]);\n   _optionalChainDelete([contexts, 'access', _5 => _5.device, 'optionalAccess', _6 => delete _6.free_memory]);\n\n  const initOptions = client.getOptions();\n\n  const sdkMetadata = client.getSdkMetadata() || {};\n  if (sdkMetadata.sdk) {\n    sdkMetadata.sdk.integrations = initOptions.integrations.map(i => i.name);\n  }\n\n  const options = {\n    debug: logger.isEnabled(),\n    dsn,\n    environment: initOptions.environment || 'production',\n    release: initOptions.release,\n    dist: initOptions.dist,\n    sdkMetadata,\n    appRootPath: integrationOptions.appRootPath,\n    pollInterval: integrationOptions.pollInterval || DEFAULT_INTERVAL,\n    anrThreshold: integrationOptions.anrThreshold || DEFAULT_HANG_THRESHOLD,\n    captureStackTrace: !!integrationOptions.captureStackTrace,\n    staticTags: integrationOptions.staticTags || {},\n    contexts,\n  };\n\n  if (options.captureStackTrace) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const inspector = require('inspector');\n    if (!inspector.url()) {\n      inspector.open(0);\n    }\n  }\n\n  const { Worker } = getWorkerThreads();\n\n  const worker = new Worker(new URL(`data:application/javascript;base64,${base64WorkerScript}`), {\n    workerData: options,\n  });\n\n  process.on('exit', () => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    worker.terminate();\n  });\n\n  const timer = setInterval(() => {\n    try {\n      const currentSession = getCurrentScope().getSession();\n      // We need to copy the session object and remove the toJSON method so it can be sent to the worker\n      // serialized without making it a SerializedSession\n      const session = currentSession ? { ...currentSession, toJSON: undefined } : undefined;\n      // message the worker to tell it the main event loop is still running\n      worker.postMessage({ session });\n    } catch (_) {\n      //\n    }\n  }, options.pollInterval);\n  // Timer should not block exit\n  timer.unref();\n\n  worker.on('message', (msg) => {\n    if (msg === 'session-ended') {\n      log('ANR event sent from ANR worker. Clearing session in this thread.');\n      getCurrentScope().setSession(undefined);\n    }\n  });\n\n  worker.once('error', (err) => {\n    clearInterval(timer);\n    log('ANR worker error', err);\n  });\n\n  worker.once('exit', (code) => {\n    clearInterval(timer);\n    log('ANR worker exit', code);\n  });\n\n  // Ensure this thread can't block app exit\n  worker.unref();\n\n  return () => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    worker.terminate();\n    clearInterval(timer);\n  };\n}\n\nexport { Anr, anrIntegration };\n//# sourceMappingURL=index.js.map\n","import { parseSemver } from '@sentry/utils';\n\nconst NODE_VERSION = parseSemver(process.versions.node) ;\n\nexport { NODE_VERSION };\n//# sourceMappingURL=nodeVersion.js.map\n","/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexport { _optionalChain };\n//# sourceMappingURL=_optionalChain.js.map\n","import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    MODERN_BROWSERSLIST_TARGET: null,\n    COMPILER_NAMES: null,\n    INTERNAL_HEADERS: null,\n    COMPILER_INDEXES: null,\n    PHASE_EXPORT: null,\n    PHASE_PRODUCTION_BUILD: null,\n    PHASE_PRODUCTION_SERVER: null,\n    PHASE_DEVELOPMENT_SERVER: null,\n    PHASE_TEST: null,\n    PHASE_INFO: null,\n    PAGES_MANIFEST: null,\n    APP_PATHS_MANIFEST: null,\n    APP_PATH_ROUTES_MANIFEST: null,\n    BUILD_MANIFEST: null,\n    APP_BUILD_MANIFEST: null,\n    FUNCTIONS_CONFIG_MANIFEST: null,\n    SUBRESOURCE_INTEGRITY_MANIFEST: null,\n    NEXT_FONT_MANIFEST: null,\n    EXPORT_MARKER: null,\n    EXPORT_DETAIL: null,\n    PRERENDER_MANIFEST: null,\n    ROUTES_MANIFEST: null,\n    IMAGES_MANIFEST: null,\n    SERVER_FILES_MANIFEST: null,\n    DEV_CLIENT_PAGES_MANIFEST: null,\n    MIDDLEWARE_MANIFEST: null,\n    DEV_MIDDLEWARE_MANIFEST: null,\n    REACT_LOADABLE_MANIFEST: null,\n    FONT_MANIFEST: null,\n    SERVER_DIRECTORY: null,\n    CONFIG_FILES: null,\n    BUILD_ID_FILE: null,\n    BLOCKED_PAGES: null,\n    CLIENT_PUBLIC_FILES_PATH: null,\n    CLIENT_STATIC_FILES_PATH: null,\n    STRING_LITERAL_DROP_BUNDLE: null,\n    NEXT_BUILTIN_DOCUMENT: null,\n    BARREL_OPTIMIZATION_PREFIX: null,\n    CLIENT_REFERENCE_MANIFEST: null,\n    SERVER_REFERENCE_MANIFEST: null,\n    MIDDLEWARE_BUILD_MANIFEST: null,\n    MIDDLEWARE_REACT_LOADABLE_MANIFEST: null,\n    CLIENT_STATIC_FILES_RUNTIME_MAIN: null,\n    CLIENT_STATIC_FILES_RUNTIME_MAIN_APP: null,\n    APP_CLIENT_INTERNALS: null,\n    CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH: null,\n    CLIENT_STATIC_FILES_RUNTIME_AMP: null,\n    CLIENT_STATIC_FILES_RUNTIME_WEBPACK: null,\n    CLIENT_STATIC_FILES_RUNTIME_POLYFILLS: null,\n    CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL: null,\n    EDGE_RUNTIME_WEBPACK: null,\n    STATIC_PROPS_ID: null,\n    SERVER_PROPS_ID: null,\n    GOOGLE_FONT_PROVIDER: null,\n    OPTIMIZED_FONT_PROVIDERS: null,\n    DEFAULT_SERIF_FONT: null,\n    DEFAULT_SANS_SERIF_FONT: null,\n    STATIC_STATUS_PAGES: null,\n    TRACE_OUTPUT_VERSION: null,\n    TURBO_TRACE_DEFAULT_MEMORY_LIMIT: null,\n    RSC_MODULE_TYPES: null,\n    EDGE_UNSUPPORTED_NODE_APIS: null,\n    SYSTEM_ENTRYPOINTS: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    MODERN_BROWSERSLIST_TARGET: function() {\n        return _modernbrowserslisttarget.default;\n    },\n    COMPILER_NAMES: function() {\n        return COMPILER_NAMES;\n    },\n    INTERNAL_HEADERS: function() {\n        return INTERNAL_HEADERS;\n    },\n    COMPILER_INDEXES: function() {\n        return COMPILER_INDEXES;\n    },\n    PHASE_EXPORT: function() {\n        return PHASE_EXPORT;\n    },\n    PHASE_PRODUCTION_BUILD: function() {\n        return PHASE_PRODUCTION_BUILD;\n    },\n    PHASE_PRODUCTION_SERVER: function() {\n        return PHASE_PRODUCTION_SERVER;\n    },\n    PHASE_DEVELOPMENT_SERVER: function() {\n        return PHASE_DEVELOPMENT_SERVER;\n    },\n    PHASE_TEST: function() {\n        return PHASE_TEST;\n    },\n    PHASE_INFO: function() {\n        return PHASE_INFO;\n    },\n    PAGES_MANIFEST: function() {\n        return PAGES_MANIFEST;\n    },\n    APP_PATHS_MANIFEST: function() {\n        return APP_PATHS_MANIFEST;\n    },\n    APP_PATH_ROUTES_MANIFEST: function() {\n        return APP_PATH_ROUTES_MANIFEST;\n    },\n    BUILD_MANIFEST: function() {\n        return BUILD_MANIFEST;\n    },\n    APP_BUILD_MANIFEST: function() {\n        return APP_BUILD_MANIFEST;\n    },\n    FUNCTIONS_CONFIG_MANIFEST: function() {\n        return FUNCTIONS_CONFIG_MANIFEST;\n    },\n    SUBRESOURCE_INTEGRITY_MANIFEST: function() {\n        return SUBRESOURCE_INTEGRITY_MANIFEST;\n    },\n    NEXT_FONT_MANIFEST: function() {\n        return NEXT_FONT_MANIFEST;\n    },\n    EXPORT_MARKER: function() {\n        return EXPORT_MARKER;\n    },\n    EXPORT_DETAIL: function() {\n        return EXPORT_DETAIL;\n    },\n    PRERENDER_MANIFEST: function() {\n        return PRERENDER_MANIFEST;\n    },\n    ROUTES_MANIFEST: function() {\n        return ROUTES_MANIFEST;\n    },\n    IMAGES_MANIFEST: function() {\n        return IMAGES_MANIFEST;\n    },\n    SERVER_FILES_MANIFEST: function() {\n        return SERVER_FILES_MANIFEST;\n    },\n    DEV_CLIENT_PAGES_MANIFEST: function() {\n        return DEV_CLIENT_PAGES_MANIFEST;\n    },\n    MIDDLEWARE_MANIFEST: function() {\n        return MIDDLEWARE_MANIFEST;\n    },\n    DEV_MIDDLEWARE_MANIFEST: function() {\n        return DEV_MIDDLEWARE_MANIFEST;\n    },\n    REACT_LOADABLE_MANIFEST: function() {\n        return REACT_LOADABLE_MANIFEST;\n    },\n    FONT_MANIFEST: function() {\n        return FONT_MANIFEST;\n    },\n    SERVER_DIRECTORY: function() {\n        return SERVER_DIRECTORY;\n    },\n    CONFIG_FILES: function() {\n        return CONFIG_FILES;\n    },\n    BUILD_ID_FILE: function() {\n        return BUILD_ID_FILE;\n    },\n    BLOCKED_PAGES: function() {\n        return BLOCKED_PAGES;\n    },\n    CLIENT_PUBLIC_FILES_PATH: function() {\n        return CLIENT_PUBLIC_FILES_PATH;\n    },\n    CLIENT_STATIC_FILES_PATH: function() {\n        return CLIENT_STATIC_FILES_PATH;\n    },\n    STRING_LITERAL_DROP_BUNDLE: function() {\n        return STRING_LITERAL_DROP_BUNDLE;\n    },\n    NEXT_BUILTIN_DOCUMENT: function() {\n        return NEXT_BUILTIN_DOCUMENT;\n    },\n    BARREL_OPTIMIZATION_PREFIX: function() {\n        return BARREL_OPTIMIZATION_PREFIX;\n    },\n    CLIENT_REFERENCE_MANIFEST: function() {\n        return CLIENT_REFERENCE_MANIFEST;\n    },\n    SERVER_REFERENCE_MANIFEST: function() {\n        return SERVER_REFERENCE_MANIFEST;\n    },\n    MIDDLEWARE_BUILD_MANIFEST: function() {\n        return MIDDLEWARE_BUILD_MANIFEST;\n    },\n    MIDDLEWARE_REACT_LOADABLE_MANIFEST: function() {\n        return MIDDLEWARE_REACT_LOADABLE_MANIFEST;\n    },\n    CLIENT_STATIC_FILES_RUNTIME_MAIN: function() {\n        return CLIENT_STATIC_FILES_RUNTIME_MAIN;\n    },\n    CLIENT_STATIC_FILES_RUNTIME_MAIN_APP: function() {\n        return CLIENT_STATIC_FILES_RUNTIME_MAIN_APP;\n    },\n    APP_CLIENT_INTERNALS: function() {\n        return APP_CLIENT_INTERNALS;\n    },\n    CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH: function() {\n        return CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH;\n    },\n    CLIENT_STATIC_FILES_RUNTIME_AMP: function() {\n        return CLIENT_STATIC_FILES_RUNTIME_AMP;\n    },\n    CLIENT_STATIC_FILES_RUNTIME_WEBPACK: function() {\n        return CLIENT_STATIC_FILES_RUNTIME_WEBPACK;\n    },\n    CLIENT_STATIC_FILES_RUNTIME_POLYFILLS: function() {\n        return CLIENT_STATIC_FILES_RUNTIME_POLYFILLS;\n    },\n    CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL: function() {\n        return CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL;\n    },\n    EDGE_RUNTIME_WEBPACK: function() {\n        return EDGE_RUNTIME_WEBPACK;\n    },\n    STATIC_PROPS_ID: function() {\n        return STATIC_PROPS_ID;\n    },\n    SERVER_PROPS_ID: function() {\n        return SERVER_PROPS_ID;\n    },\n    GOOGLE_FONT_PROVIDER: function() {\n        return GOOGLE_FONT_PROVIDER;\n    },\n    OPTIMIZED_FONT_PROVIDERS: function() {\n        return OPTIMIZED_FONT_PROVIDERS;\n    },\n    DEFAULT_SERIF_FONT: function() {\n        return DEFAULT_SERIF_FONT;\n    },\n    DEFAULT_SANS_SERIF_FONT: function() {\n        return DEFAULT_SANS_SERIF_FONT;\n    },\n    STATIC_STATUS_PAGES: function() {\n        return STATIC_STATUS_PAGES;\n    },\n    TRACE_OUTPUT_VERSION: function() {\n        return TRACE_OUTPUT_VERSION;\n    },\n    TURBO_TRACE_DEFAULT_MEMORY_LIMIT: function() {\n        return TURBO_TRACE_DEFAULT_MEMORY_LIMIT;\n    },\n    RSC_MODULE_TYPES: function() {\n        return RSC_MODULE_TYPES;\n    },\n    EDGE_UNSUPPORTED_NODE_APIS: function() {\n        return EDGE_UNSUPPORTED_NODE_APIS;\n    },\n    SYSTEM_ENTRYPOINTS: function() {\n        return SYSTEM_ENTRYPOINTS;\n    }\n});\nconst _interop_require_default = require(\"@swc/helpers/_/_interop_require_default\");\nconst _modernbrowserslisttarget = /*#__PURE__*/ _interop_require_default._(require(\"./modern-browserslist-target\"));\nconst COMPILER_NAMES = {\n    client: \"client\",\n    server: \"server\",\n    edgeServer: \"edge-server\"\n};\nconst INTERNAL_HEADERS = [\n    \"x-invoke-error\",\n    \"x-invoke-output\",\n    \"x-invoke-path\",\n    \"x-invoke-query\",\n    \"x-invoke-status\",\n    \"x-middleware-invoke\"\n];\nconst COMPILER_INDEXES = {\n    [COMPILER_NAMES.client]: 0,\n    [COMPILER_NAMES.server]: 1,\n    [COMPILER_NAMES.edgeServer]: 2\n};\nconst PHASE_EXPORT = \"phase-export\";\nconst PHASE_PRODUCTION_BUILD = \"phase-production-build\";\nconst PHASE_PRODUCTION_SERVER = \"phase-production-server\";\nconst PHASE_DEVELOPMENT_SERVER = \"phase-development-server\";\nconst PHASE_TEST = \"phase-test\";\nconst PHASE_INFO = \"phase-info\";\nconst PAGES_MANIFEST = \"pages-manifest.json\";\nconst APP_PATHS_MANIFEST = \"app-paths-manifest.json\";\nconst APP_PATH_ROUTES_MANIFEST = \"app-path-routes-manifest.json\";\nconst BUILD_MANIFEST = \"build-manifest.json\";\nconst APP_BUILD_MANIFEST = \"app-build-manifest.json\";\nconst FUNCTIONS_CONFIG_MANIFEST = \"functions-config-manifest.json\";\nconst SUBRESOURCE_INTEGRITY_MANIFEST = \"subresource-integrity-manifest\";\nconst NEXT_FONT_MANIFEST = \"next-font-manifest\";\nconst EXPORT_MARKER = \"export-marker.json\";\nconst EXPORT_DETAIL = \"export-detail.json\";\nconst PRERENDER_MANIFEST = \"prerender-manifest.json\";\nconst ROUTES_MANIFEST = \"routes-manifest.json\";\nconst IMAGES_MANIFEST = \"images-manifest.json\";\nconst SERVER_FILES_MANIFEST = \"required-server-files.json\";\nconst DEV_CLIENT_PAGES_MANIFEST = \"_devPagesManifest.json\";\nconst MIDDLEWARE_MANIFEST = \"middleware-manifest.json\";\nconst DEV_MIDDLEWARE_MANIFEST = \"_devMiddlewareManifest.json\";\nconst REACT_LOADABLE_MANIFEST = \"react-loadable-manifest.json\";\nconst FONT_MANIFEST = \"font-manifest.json\";\nconst SERVER_DIRECTORY = \"server\";\nconst CONFIG_FILES = [\n    \"next.config.js\",\n    \"next.config.mjs\"\n];\nconst BUILD_ID_FILE = \"BUILD_ID\";\nconst BLOCKED_PAGES = [\n    \"/_document\",\n    \"/_app\",\n    \"/_error\"\n];\nconst CLIENT_PUBLIC_FILES_PATH = \"public\";\nconst CLIENT_STATIC_FILES_PATH = \"static\";\nconst STRING_LITERAL_DROP_BUNDLE = \"__NEXT_DROP_CLIENT_FILE__\";\nconst NEXT_BUILTIN_DOCUMENT = \"__NEXT_BUILTIN_DOCUMENT__\";\nconst BARREL_OPTIMIZATION_PREFIX = \"__barrel_optimize__\";\nconst CLIENT_REFERENCE_MANIFEST = \"client-reference-manifest\";\nconst SERVER_REFERENCE_MANIFEST = \"server-reference-manifest\";\nconst MIDDLEWARE_BUILD_MANIFEST = \"middleware-build-manifest\";\nconst MIDDLEWARE_REACT_LOADABLE_MANIFEST = \"middleware-react-loadable-manifest\";\nconst CLIENT_STATIC_FILES_RUNTIME_MAIN = \"main\";\nconst CLIENT_STATIC_FILES_RUNTIME_MAIN_APP = \"\" + CLIENT_STATIC_FILES_RUNTIME_MAIN + \"-app\";\nconst APP_CLIENT_INTERNALS = \"app-pages-internals\";\nconst CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = \"react-refresh\";\nconst CLIENT_STATIC_FILES_RUNTIME_AMP = \"amp\";\nconst CLIENT_STATIC_FILES_RUNTIME_WEBPACK = \"webpack\";\nconst CLIENT_STATIC_FILES_RUNTIME_POLYFILLS = \"polyfills\";\nconst CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = Symbol(CLIENT_STATIC_FILES_RUNTIME_POLYFILLS);\nconst EDGE_RUNTIME_WEBPACK = \"edge-runtime-webpack\";\nconst STATIC_PROPS_ID = \"__N_SSG\";\nconst SERVER_PROPS_ID = \"__N_SSP\";\nconst GOOGLE_FONT_PROVIDER = \"https://fonts.googleapis.com/\";\nconst OPTIMIZED_FONT_PROVIDERS = [\n    {\n        url: GOOGLE_FONT_PROVIDER,\n        preconnect: \"https://fonts.gstatic.com\"\n    },\n    {\n        url: \"https://use.typekit.net\",\n        preconnect: \"https://use.typekit.net\"\n    }\n];\nconst DEFAULT_SERIF_FONT = {\n    name: \"Times New Roman\",\n    xAvgCharWidth: 821,\n    azAvgWidth: 854.3953488372093,\n    unitsPerEm: 2048\n};\nconst DEFAULT_SANS_SERIF_FONT = {\n    name: \"Arial\",\n    xAvgCharWidth: 904,\n    azAvgWidth: 934.5116279069767,\n    unitsPerEm: 2048\n};\nconst STATIC_STATUS_PAGES = [\n    \"/500\"\n];\nconst TRACE_OUTPUT_VERSION = 1;\nconst TURBO_TRACE_DEFAULT_MEMORY_LIMIT = 6000;\nconst RSC_MODULE_TYPES = {\n    client: \"client\",\n    server: \"server\"\n};\nconst EDGE_UNSUPPORTED_NODE_APIS = [\n    \"clearImmediate\",\n    \"setImmediate\",\n    \"BroadcastChannel\",\n    \"ByteLengthQueuingStrategy\",\n    \"CompressionStream\",\n    \"CountQueuingStrategy\",\n    \"DecompressionStream\",\n    \"DomException\",\n    \"MessageChannel\",\n    \"MessageEvent\",\n    \"MessagePort\",\n    \"ReadableByteStreamController\",\n    \"ReadableStreamBYOBRequest\",\n    \"ReadableStreamDefaultController\",\n    \"TransformStreamDefaultController\",\n    \"WritableStreamDefaultController\"\n];\nconst SYSTEM_ENTRYPOINTS = new Set([\n    CLIENT_STATIC_FILES_RUNTIME_MAIN,\n    CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n    CLIENT_STATIC_FILES_RUNTIME_AMP,\n    CLIENT_STATIC_FILES_RUNTIME_MAIN_APP\n]);\n\nif ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', { value: true });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}\n\n//# sourceMappingURL=constants.js.map","// Note: This file is JS because it's used by the taskfile-swc.js file, which is JS.\n// Keep file changes in sync with the corresponding `.d.ts` files.\n/**\n * These are the browser versions that support all of the following:\n * static import: https://caniuse.com/es6-module\n * dynamic import: https://caniuse.com/es6-module-dynamic-import\n * import.meta: https://caniuse.com/mdn-javascript_operators_import_meta\n */ \"use strict\";\nconst MODERN_BROWSERSLIST_TARGET = [\n    \"chrome 64\",\n    \"edge 79\",\n    \"firefox 67\",\n    \"opera 51\",\n    \"safari 12\"\n];\nmodule.exports = MODERN_BROWSERSLIST_TARGET;\n\n//# sourceMappingURL=modern-browserslist-target.js.map"],"names":["installedIntegrations","getIntegrationsToSetup","options","defaultIntegrations","userIntegrations","integrations","forEach","integration","isDefaultInstance","finalIntegrations","filterDuplicates","integrationsByName","currentInstance","name","existingInstance","Object","keys","map","k","Array","isArray","_sentry_utils__WEBPACK_IMPORTED_MODULE_0__","lE","debugIndex","findIndex","arr","callback","i","length","debugInstance","splice","push","setupIntegrations","client","integrationIndex","setupIntegration","afterSetupIntegrations","afterAllSetup","_debug_build_js__WEBPACK_IMPORTED_MODULE_1__","X","_sentry_utils__WEBPACK_IMPORTED_MODULE_2__","kg","log","indexOf","setupOnce","_eventProcessors_js__WEBPACK_IMPORTED_MODULE_3__","cc","_hub_js__WEBPACK_IMPORTED_MODULE_4__","Gd","setup","on","preprocessEvent","bind","event","hint","addEventProcessor","processEvent","processor","assign","id","convertIntegrationFnToClass","fn","args","defineIntegration","SPAN_METRIC_SUMMARY","originalFunctionToString","moduleCache","asyncStorage","SpanStatus","ChannelName","handlers","instrumented","addHandler","type","handler","maybeInstrument","instrumentFn","triggerHandlers","data","typeHandlers","e","esm_debug_build","esm_logger","error","stacktrace","$P","_oldOnErrorHandler","instrumentError","worldwide","GLOBAL_OBJ","onerror","msg","url","line","column","__SENTRY_LOADER__","apply","arguments","__SENTRY_INSTRUMENTED__","_oldOnUnhandledRejectionHandler","instrumentUnhandledRejection","onunhandledrejection","getActiveTransaction","maybeHub","scope","esm_hub","getScope","getTransaction","errorsInstrumented","errorCallback","activeTransaction","status","debug_build","setStatus","tag","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE","SEMANTIC_ATTRIBUTE_SENTRY_OP","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN","hasTracingEnabled_hasTracingEnabled","maybeOptions","__SENTRY_TRACING__","esm_exports","s3","getOptions","enableTracing","getActiveSpan","nZ","getSpan","continueTrace","sentryTrace","baggage","currentScope","traceparentData","dynamicSamplingContext","propagationContext","tracing","KA","setPropagationContext","traceId","transactionContext","metadata","object","Jr","Ok","SCOPE_ON_START_SPAN_FIELD","ISOLATION_SCOPE_ON_START_SPAN_FIELD","getMetricStorageForSpan","span","get","undefined","getMetricSummaryJsonForSpan","storage","output","exportKey","summary","setHttpStatus","httpStatus","setTag","String","setData","spanStatus","getSpanStatusFromHttpCode","SpanRecorder","constructor","maxlen","_maxlen","spans","add","spanRecorder","Span","spanContext","_traceId","misc","DM","_spanId","spanId","substring","_startTime","startTimestamp","time","ph","tags","instrumenter","_attributes","setAttributes","origin","op","attributes","_name","description","parentSpanId","_parentSpanId","_sampled","sampled","_status","endTimestamp","_endTime","exclusiveTime","_exclusiveTime","_measurements","measurements","updateName","string","startTime","endTime","setAttribute","traceFlags","spanUtils","i0","ve","startChild","childSpan","rootSpan","getRootSpan","G","transaction","opStr","nameStr","XU","idStr","logMessage","_logMessage","key","value","setName","isSuccess","finish","end","replace","$k","toTraceparent","Hb","toContext","_getData","updateWithContext","getTraceContext","wy","getSpanJSON","parent_span_id","span_id","start_timestamp","timestamp","trace_id","_metrics_summary","profile_id","exclusive_time","isRecording","toJSON","hasData","hasAttributes","Transaction","hub","_contexts","_hub","_metadata","_trimEnd","trimEnd","incomingDynamicSamplingContext","_frozenDynamicSamplingContext","newName","source","spanMetadata","sampleRate","initSpanRecorder","setContext","context","setMeasurement","unit","setMetadata","newMetadata","timestampInS","_finishTransaction","captureEvent","getDynamicSamplingContext","tracing_dynamicSamplingContext","j","setHub","getProfileId","warn","getClient","emit","recordDroppedEvent","finishedSpans","filter","endTimes","Boolean","reduce","prev","current","capturedSpanScope","isolationScope","capturedSpanIsolationScope","contexts","trace","sdkProcessingMetadata","transaction_info","JSON","stringify","traceHeaders","_startTransaction","customSamplingContext","samplingContext","rate","configInstrumenter","transactionInstrumenter","parentSampled","Number","tracesSampler","tracesSampleRate","is","i2","Math","random","_experiments","maxSpans","addTracingExtensions","carrier","cu","__SENTRY__","extensions","startTransaction","addGlobalErrorInstrumentationHandler","addGlobalUnhandledRejectionInstrumentationHandler","applySdkMetadata","names","sdk","packages","version","J","INTEGRATION_NAME","SETUP_CLIENTS","WeakMap","functionToStringIntegration","esm_integration","_I","Function","prototype","toString","originalFunction","HK","has","set","FunctionToString","RN","DEFAULT_IGNORE_ERRORS","DEFAULT_IGNORE_TRANSACTIONS","inboundfilters_INTEGRATION_NAME","inboundFiltersIntegration","_hint","_shouldDropEvent","ignoreErrors","ignoreInternal","_isSentryError","exception","values","jH","_getPossibleEventMessages","lastException","possibleMessages","message","some","U0","_isIgnoredTransaction","ignoreTransactions","_isDeniedUrl","denyUrls","_getEventFilterUrl","_isAllowedUrl","allowUrls","_mergeOptions","internalOptions","clientOptions","disableErrorDefaults","disableTransactionDefaults","InboundFilters","frames","_getLastValidUrl","frame","filename","oO","applyExceptionGroupFieldsForParentException","exceptionId","mechanism","handled","is_exception_group","exception_id","applyExceptionGroupFieldsForChildException","parentId","parent_id","parseStackFrames","stackParser","stack","exceptionFromError","linkederrors_INTEGRATION_NAME","linkedErrorsIntegration","limit","applyAggregateErrorsToEvent","exceptionFromErrorImplementation","parser","maxValueLimit","V9","originalException","Error","exceptions","aggregateExceptionsFromError","prevExceptions","newExceptions","newException","newExceptionId","errors","childError","$G","maxValueLength","LinkedErrors","splitPathRe","splitPath","truncated","slice","parts","exec","resolve","resolvedPath","resolvedAbsolute","path","charAt","normalizeArray","allowAboveRoot","up","last","unshift","split","p","join","trim","start","normalizeWindowsPath","createGetModuleFromFilename","basePath","process","argv","dirname","result","root","dir","cwd","isWindows","external_path_","sep","normalizedBase","normalizedFilename","base","file","ext","posix","parse","n","lastIndexOf","startsWith","moduleName","instrumentConsole","RU","level","console","hl","originalConsoleMethod","LD","validSeverityLevels","console_INTEGRATION_NAME","consoleIntegration","addConsoleInstrumentationHandler","n_","category","includes","external_util_","format","input","Console","isSentryRequestUrl","hubOrClient","dsn","getDsn","tunnel","host","removeTrailingSlash","str","LRUMap","_maxSize","_cache","Map","size","delete","next","remove","clear","from","extractUrl","requestOptions","protocol","hostname","port","parseRequestOptions","pathname","authority","auth","redactAuthority","user","password","cleanSpanDescription","request","method","requestUrl","_optionalChain","x","_","agent","_2","_3","_4","urlToOptions","hash","search","href","username","test","httpIntegration","breadcrumbs","shouldCreateSpanForRequest","Http","enableIfHasTracingEnabled","__initStatic","__init","call","_breadcrumbs","_tracing","_addGlobalEventProcessor","setupOnceGetCurrentHub","tracingOptions","_5","shouldCreateSpans","_11","_12","tracePropagationTargets","_6","_7","_8","httpModule","__webpack_require__","wrappedHttpHandlerMaker","_createWrappedRequestMethodFactory","nodeVersion","V","major","httpsModule","wrappedHttpsHandlerMaker","breadcrumbsEnabled","createSpanUrlMap","headersUrlMap","shouldCreateSpan","cachedDecision","decision","shouldAttachTraceData","addRequestBreadcrumb","requestSpanData","req","res","getIntegration","status_code","statusCode","response","originalRequestMethod","requestArgs","normalizeRequestArgs","pop","external_url_","URL","parsed","globalAgent","_defaultAgent","_9","_10","rawRequestUrl","extractRawUrl","aF","parentSpan","getRequestSpanData","requestSpan","dsc","getPropagationContext","addHeadersToRequestOptions","sentryTraceHeader","sentryBaggageHeader","headers","$p","IQ","once","logAndExitProcess","Cf","global","exit","timeout","shutdownTimeout","close","then","onuncaughtexception_INTEGRATION_NAME","onUncaughtExceptionIntegration","_options","exitEvenIfOtherHandlersAreRegistered","makeErrorHandler","firstError","caughtFirstError","caughtSecondError","calledFatalError","onFatalError","userProvidedListenersCount","listeners","acc","listener","_errorHandler","shouldApplyFatalHandlingLogic","setTimeout","Tb","captureContext","OnUncaughtException","onunhandledrejection_INTEGRATION_NAME","onUnhandledRejectionIntegration","mode","reason","promise","extra","unhandledPromiseRejection","handleRejection","rejectionWarning","OnUnhandledRejection","modules_INTEGRATION_NAME","modulesIntegration","modules","collectModules","mainPaths","c","s","paths","getPaths","infos","seen","updir","orig","pkgfile","external_fs_","existsSync","info","readFileSync","_oO","Modules","FILE_CONTENT_CACHE","contextlines_INTEGRATION_NAME","contextLinesIntegration","contextLines","frameContextLines","addSourceContext","ContextLines","enqueuedReadSourceFileTasks","readSourceFileTasks","_readSourceFile","Promise","all","addSourceContextToFrames","context_line","sourceFileLines","go","cachedFile","content","rawFileContents","reject","readFile","err","readFileAsync","promisify","readDirAsync","readdir","context_INTEGRATION_NAME","nodeContextIntegration","cachedContext","app","os","device","culture","cloudResource","addContext","_getContexts","updatedContext","app_memory","memoryUsage","rss","_13","_14","free_memory","external_os_","freemem","cloud_resource","getOsContext","getAppContext","app_start_time","Date","now","uptime","toISOString","getDeviceContext","deviceOpt","boot_time","arch","memory","memory_size","totalmem","cpu","cpuInfo","cpus","firstCpu","processor_count","cpu_description","model","processor_frequency","speed","getCultureContext","versions","icu","january","spanish","Intl","DateTimeFormat","month","resolvedOptions","locale","timezone","timeZone","getCloudResourceContext","env","VERCEL","VERCEL_REGION","AWS_REGION","AWS_EXECUTION_ENV","GCP_PROJECT","ALIYUN_REGION_ID","WEBSITE_SITE_NAME","REGION_NAME","IBM_CLOUD_REGION","TENCENTCLOUD_REGION","TENCENTCLOUD_APPID","TENCENTCLOUD_ZONE","NETLIFY","FLY_REGION","DYNO","Context","platformId","platform","getDarwinInfo","getLinuxInfo","PLATFORM_NAMES","release","aix","freebsd","openbsd","sunos","win32","LINUX_DISTROS","distros","LINUX_VERSIONS","alpine","matchFirst","centos","debian","fedora","mint","red","suse","ubuntu","regex","text","match","darwinInfo","kernel_version","external_child_process_","execFile","stdout","build","getLinuxDistroId","toLowerCase","linuxInfo","etcFiles","distroFile","find","distroPath","contents","encoding","d","stripUrlQueryAndFragment","urlPath","getNumberOfUrlSegments","DEFAULT_INCLUDES","ip","DEFAULT_REQUEST_INCLUDES","DEFAULT_USER_INCLUDES","extractPathForTransaction","toUpperCase","customRoute","route","baseUrl","originalUrl","extractRequestData","include","deps","requestData","socket","encrypted","absoluteUrl","cookie","cookies","parseCookie","obj","index","eqIdx","endIdx","val","charCodeAt","decodeURIComponent","query_string","extractQueryParams","query","e2","body","HD","normalize","Fv","hasOwnProperty","DEFAULT_OPTIONS","email","transactionNamingScheme","requestdata_INTEGRATION_NAME","requestDataIntegration","processedEvent","_addRequestData","extractedRequestData","extractedUser","PO","extractUserData","remoteAddress","ip_address","extractTransaction","_reconstructedRoute","requestDataOptionsFromExpressHandler","requestDataOptionsFromGCPWrapper","convertReqDataIntegrationOptsToAddReqDataOpts","integrationOptions","addReqDataUserOpt","requestIncludeKeys","entries","userIncludeKeys","reqWithTransaction","_sentryTransaction","transactionValue","getSDKName","RequestData","isAnonymous","hashFrames","function","lineno","colno","createCallbackList","complete","callbacks","completedCalled","checkedComplete","popped","AsyncSession","Session","_session","configureAndConnect","onPause","captureAll","connect","post","state","setPauseOnExceptions","getLocalVariables","objectId","_getProperties","props","prop","className","vars","_unrollArray","_unrollObject","_unrollOther","ownProperties","params","v","isNaN","parseInt","sort","a","b","_15","_16","_17","_18","_19","_20","_21","_22","_23","tryNewAsyncSession","local_variables_sync_INTEGRATION_NAME","localVariablesSyncIntegration","session","rateLimiter","cachedFrames","shouldProcessEvent","_36","_37","_38","includeLocalVariables","captureAllExceptions","ev","handlePaused","callFrames","_24","exceptionHash","hashFromStack","_25","min","scopeChain","functionName","this","localScope","_26","_27","_28","_29","maxPerSecond","enable","disable","count","retrySeconds","disabledTimeout","maxExceptionsPerSecond","_39","_40","seconds","_41","_42","setInterval","unref","addLocalVariablesToEvent","_34","_35","addLocalVariablesToException","_30","_31","cachedFrame","_32","_33","frameIndex","in_app","_getCachedFramesCount","_getFirstCachedFrame","LocalVariables","nativeNodeFetchintegration","Undici","__init2","_createSpanUrlMap","__init3","_headersUrlMap","__init4","__init5","__init6","ds","subscribe","RequestCreate","_onRequestCreate","RequestEnd","_onRequestEnd","RequestError","_onRequestError","_shouldCreateSpan","stringUrl","__sentry_span__","createRequestSpan","activeSpan","parseUrl","fragment","relative","getSanitizedUrlString","filteredHost","headerLine","headerLines","addHeader","DSN_REGEX","dsn_dsnToString","withPassword","pass","projectId","publicKey","dsnFromComponents","components","createEnvelope","items","forEachEnvelopeItem","envelope","envelopeItem","envelopeItemType","encodeUTF8","textEncoder","utf8","TextEncoder","encode","serializeEnvelope","envHeaders","append","item","itemHeaders","payload","Uint8Array","stringifiedPayload","concatBuffers","buffers","totalLength","buf","merged","offset","buffer","ITEM_TYPE_TO_DATA_CATEGORY_MAP","sessions","attachment","client_report","user_report","profile","replay_event","replay_recording","check_in","feedback","statsd","getSdkMetadataForEnvelopeHeader","metadataOrEvent","spotlight_INTEGRATION_NAME","spotlightIntegration","sidecarUrl","connectToSpotlight","spotlightUrl","parseSidecarUrl","failedRequests","serializedEnvelope","external_http_","__sentry_original__","setEncoding","write","Spotlight","isResponseObject","hapiErrorPlugin","register","serverArg","server","events","errorData","hapiTracingPlugin","h","Yr","setSpan","continue","header","hapi_INTEGRATION_NAME","hapiIntegration","originalStart","Hapi","shouldDisableAutoInstrumentation","getCurrentHub","Apollo","useNestjs","_useNest","loadDependency","_module","node","$y","pkg","GraphQLFactory","resolversExplorerService","instrumentResolvers","ApolloServerBase","config","resolvers","resolverGroupName","resolverName","rv","J8","Express","_router","router","_methods","methods","concat","instrumentMiddlewares","patchMiddleware","originalCallback","arg","wrap","instrumentRouter","appOrRouter","isApp","lazyrouter","routerProto","getPrototypeOf","originalProcessParams","process_params","layer","called","done","layerRoutePath","isRegex","numExtraSegments","getLayerRoutePathInfo","lrp","Kj","extractOriginalRoute","regexp","max","getNumberOfArrayUrlSegments","accNumSegments","currentRoute","r","_hasParameters","finalPartialRoute","partialRoute","preventDuplicateSegments","reconstructedRoute","layerPath","normalizeURL","originalUrlSplit","tempCounter","currentOffset","segment","urlLength","__sentry_transaction","finalRoute","arity","orderedKeys","execResult","pathRegex","flags","indices","paramIndices","resultPath","indexShift","startOffset","endOffset","substr1","replacement","GraphQL","OPERATIONS","OPERATION_SIGNATURES","bulkWrite","countDocuments","createIndex","createIndexes","deleteMany","deleteOne","distinct","dropIndex","findOne","findOneAndDelete","findOneAndReplace","findOneAndUpdate","indexExists","insertMany","insertOne","mapReduce","rename","replaceOne","updateMany","updateOne","Mongo","_operations","operations","_describeOperations","describeOperations","_useMongoose","useMongoose","_instrumentOperations","Collection","collection","_patchOperation","operation","getSpanContext","_getSpanContextFromOperationArguments","lastArg","sendDefaultPii","maybePromiseOrCursor","maybeCursor","cursor","dbName","collectionName","signature","shouldDescribe","Mysql","mySqlConfig","Proxy","wrappingTarget","thisArg","sql","fields","finishSpan","Postgres","_usePgNative","usePgNative","module","Client","native","database","Prisma","isValidPrismaClient","possibleClient","_sentryInstrumented","xp","clientData","engineConfig","_engineConfig","activeProvider","clientVersion","$use","action","startSpan","normalizeContext","ctx","$e","shouldSkipSpan","onlyIfParent","createChildSpanOrTransaction","forceTransaction","Tt","handleCallbackErrors_handleCallbackErrors","onError","onFinally","maybePromiseResult","esm_Integrations","integrations_namespaceObject","esm_integrations_namespaceObject","tracing_integrations_namespaceObject","domain_getCurrentHub","activeDomain","external_domain_","active","uZ","vi","domain_runWithAsyncContext","reuseExisting","local","create","newHub","createNewHub","parent","j0","SentryError","logLevel","setPrototypeOf","NAME_AND_TAG_KEY_NORMALIZATION_REGEX","TAG_VALUE_NORMALIZATION_REGEX","ALREADY_SEEN_ERROR","BaseClient","_integrations","_integrationsInitialized","_numProcessing","_outcomes","_hooks","_eventProcessors","_dsn","dsn_makeDsn","dsnFromString","lastPath","projectMatch","validateDsn","requiredComponents","component","getEnvelopeEndpointWithUrlEncodedAuth","tunnelOrOptions","sdkInfo","getBaseApiEndpoint","_j","sentry_key","sentry_version","sentry_client","_transport","transport","transportOptions","captureException","YO","eventId","event_id","_process","eventFromException","_captureEvent","captureMessage","eventMessage","Le","promisedEvent","pt","eventFromMessage","captureSession","sendSession","esm_session","CT","init","getSdkMetadata","getTransport","flush","metricsAggregator","_isClientDoneProcessing","clientFinished","transportFlushed","syncpromise","WD","enabled","getEventProcessors","eventProcessor","forceInitialize","_isEnabled","_setupIntegrations","getIntegrationById","integrationId","getIntegrationByName","integrationName","addIntegration","isAlreadyInstalled","m7","uf","sendEvent","createEventEnvelope","eventType","envelopeHeaders","createEventEnvelopeHeaders","sent_at","attachments","addItemToEnvelope","newItem","createAttachmentEnvelopeItem","content_type","contentType","attachment_type","attachmentType","_sendEnvelope","sendResponse","createSessionEnvelope","_event","sendClientReports","captureAggregateMetrics","metricBucketItems","metricsEnvelope","createMetricEnvelope","createMetricEnvelopeItem","serializeMetricBuckets","out","tagEntries","maybeTags","metric","metricType","hook","rest","q4","_updateSessionFromEvent","crashed","errored","ex","sessionNonTerminal","cW","ticked","interval","clearInterval","_prepareEvent","prepareEvent","R","evt","_processEvent","finalEvent","sentryError","isTransaction","isTransactionEvent","isError","baseclient_isErrorEvent","beforeSendLabel","$2","dataCategory","prepared","__sentry__","_validateBeforeSendResult","beforeSendResult","invalidValueError","processBeforeSend","beforeSend","beforeSendTransaction","getSession","transactionInfo","send","_clearOutcomes","outcomes","quantity","CounterMetric","_value","weight","GaugeMetric","_last","_min","_max","_sum","_count","DistributionMetric","first","SetMetric","Set","simpleHash","METRIC_MAP","MetricsAggregator","_client","_buckets","_bucketsTotalWeight","_interval","_flush","_flushShift","floor","_forceFlush","unsanitizedName","unsanitizedTags","maybeFloatTimestamp","sanitizeTags","bucketKey","getBucketKey","stringifiedTags","localeCompare","bucketItem","previousWeight","updateMetricSummaryOnActiveSpan","sanitizedName","sum","_captureMetrics","cutoffSeconds","DEFAULT_FLUSH_INTERVAL","flushedBuckets","bucket","buckets","SessionFlusher","attrs","flushTimeout","_pendingAggregates","_intervalId","_sessionAttrs","sessionAggregates","getSessionAggregates","aggregates","incrementSessionStatusCount","requestSession","getRequestSession","_incrementSessionStatusCount","setRequestSession","date","sessionStartedTrunc","setSeconds","aggregationCounts","started","exited","ServerRuntimeClient","eventFromUnknownInput","getHubOrClient","extras","providedMechanism","VZ","normalizeDepth","Qy","getMessageForObject","zf","syntheticException","synthetic","Db","EG","attachStacktrace","__sentry_template_string__","__sentry_template_values__","logentry","autoSessionTracking","_sessionFlusher","initSessionFlusher","environment","captureCheckIn","checkIn","monitorConfig","checkInId","serializedCheckIn","check_in_id","monitor_slug","monitorSlug","duration","monitor_config","schedule","checkin_margin","checkinMargin","max_runtime","maxRuntime","traceContext","_getTraceInfoFromScope","createCheckInEnvelope","_captureRequestSession","runtime","serverName","server_name","NodeClient","SENTRY_NAME","_nullishCoalesce","lhs","rhsFn","createTransport","makeRequest","makePromiseBuffer","task","$","taskProducer","drain","counter","capturedSetTimeout","clearTimeout","bufferSize","rateLimits","filteredEnvelopeItems","envelopeItemDataCategory","isRateLimited","limits","disabledUntil","getEventForEnvelopeItem","filteredEnvelope","recordEnvelopeLoss","updateRateLimits","updatedRateLimits","rateLimitHeader","retryAfterHeader","retryAfter","categories","headerDelay","delay","parseRetryAfterHeader","headerDate","__sentry__baseTransport__","INTERNAL","Symbol","Agent","opts","isSecureEndpoint","secureEndpoint","l","createSocket","cb","connectOpts","addRequest","currentSocket","createConnection","defaultPort","debug","proxy_debug","HttpsProxyAgent","protocols","proxy","proxyHeaders","ALPNProtocols","omit","servername","external_tls_","external_net_","isIP","isIPv6","Buffer","Host","keepAlive","proxyResponsePromise","buffersLength","read","ondata","buffered","endOfHeaders","headerParts","firstLine","shift","destroy","firstLineParts","statusText","firstColon","trimStart","cleanup","removeListener","onend","resume","fakeSocket","Socket","writable","readable","ret","makeNodeTransport","urlSegments","isHttps","applyNoProxyOption","transportUrlSegments","no_proxy","exemption","endsWith","https_proxy","http_proxy","nativeHttpModule","external_https_","maxSockets","requestExecutor","createRequestExecutor","external_stream_","Readable","pipe","external_zlib_","createGzip","ca","caCerts","rateLimitsHeader","localVariablesIntegration","getDefaultIntegrations","defaultStackParser","pE","Ep","isBuild_isBuild","NEXT_PHASE","constants","PHASE_PRODUCTION_BUILD","httpIntegration_Http","onUncaughtExceptionIntegration_OnUncaughtException","rewriteframes_INTEGRATION_NAME","rewriteFramesIntegration","prefix","iteratee","isWindowsFrame","startsWithSlash","to","fromParts","toParts","samePartsLength","outputParts","basename","f","originalEvent","_processExceptionsEvent","RewriteFrames","globalWithInjectedValues","rewriteFramesIntegration_rewriteFramesIntegration","distDirName","__rewriteFramesDistDir__","SOURCEMAP_FILENAME_REGEX","RegExp","regexString","IS_VERCEL","server_init","customDefaultIntegrations","SENTRY_ENVIRONMENT","getVercelEnv","isClient","vercelEnvVar","NEXT_PUBLIC_VERCEL_ENV","VERCEL_ENV","setHooksAsyncContextStrategy","getStore","external_async_hooks_","AsyncLocalStorage","$b","runWithAsyncContext","existingHub","run","SENTRY_DSN","sentryTracesSampleRate","SENTRY_TRACES_SAMPLE_RATE","parseFloat","isFinite","detectedRelease","SENTRY_RELEASE","GITHUB_SHA","COMMIT_REF","VERCEL_GIT_COMMIT_SHA","VERCEL_GITHUB_COMMIT_SHA","VERCEL_GITLAB_COMMIT_SHA","VERCEL_BITBUCKET_COMMIT_SHA","ZEIT_GITHUB_COMMIT_SHA","ZEIT_GITLAB_COMMIT_SHA","ZEIT_BITBUCKET_COMMIT_SHA","CF_PAGES_COMMIT_SHA","fallback","Sq","m8","initAndBind","clientClass","update","initialScope","setCurrentClient","top","getStackTop","setClient","yj","terminalStates","TM","updateScopeFromEnvVariables","SENTRY_USE_ENVIRONMENT","sentryTraceEnv","SENTRY_TRACE","baggageEnv","SENTRY_BAGGAGE","pT","spotlight","filterTransactions","_optionalChainDelete","ops","logger","getScopeData","esm_scope","lW","applyScopeDataToEvent","yo","eventProcessors","getContexts","eventHint","anrIntegration","worker","minor","gbl","__SENTRY_GET_SCOPES__","startWorker","_startWorker","stopWorker","stop","initClient","setImmediate","Anr","initOptions","sdkMetadata","isEnabled","dist","appRootPath","pollInterval","anrThreshold","captureStackTrace","staticTags","inspector","open","Worker","l$","workerData","terminate","timer","currentSession","postMessage","setSession","code","NODE_VERSION","J4","lastAccessLHS","dynamicRequire","mod","require","loadModule","_export","target","defineProperty","enumerable","exports","MODERN_BROWSERSLIST_TARGET","_modernbrowserslisttarget","default","COMPILER_NAMES","INTERNAL_HEADERS","COMPILER_INDEXES","PHASE_EXPORT","PHASE_PRODUCTION_SERVER","PHASE_DEVELOPMENT_SERVER","PHASE_TEST","PHASE_INFO","PAGES_MANIFEST","APP_PATHS_MANIFEST","APP_PATH_ROUTES_MANIFEST","BUILD_MANIFEST","APP_BUILD_MANIFEST","FUNCTIONS_CONFIG_MANIFEST","SUBRESOURCE_INTEGRITY_MANIFEST","NEXT_FONT_MANIFEST","EXPORT_MARKER","EXPORT_DETAIL","PRERENDER_MANIFEST","ROUTES_MANIFEST","IMAGES_MANIFEST","SERVER_FILES_MANIFEST","DEV_CLIENT_PAGES_MANIFEST","MIDDLEWARE_MANIFEST","DEV_MIDDLEWARE_MANIFEST","REACT_LOADABLE_MANIFEST","FONT_MANIFEST","SERVER_DIRECTORY","CONFIG_FILES","BUILD_ID_FILE","BLOCKED_PAGES","CLIENT_PUBLIC_FILES_PATH","CLIENT_STATIC_FILES_PATH","STRING_LITERAL_DROP_BUNDLE","NEXT_BUILTIN_DOCUMENT","BARREL_OPTIMIZATION_PREFIX","CLIENT_REFERENCE_MANIFEST","SERVER_REFERENCE_MANIFEST","MIDDLEWARE_BUILD_MANIFEST","MIDDLEWARE_REACT_LOADABLE_MANIFEST","CLIENT_STATIC_FILES_RUNTIME_MAIN","CLIENT_STATIC_FILES_RUNTIME_MAIN_APP","APP_CLIENT_INTERNALS","CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH","CLIENT_STATIC_FILES_RUNTIME_AMP","CLIENT_STATIC_FILES_RUNTIME_WEBPACK","CLIENT_STATIC_FILES_RUNTIME_POLYFILLS","CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL","EDGE_RUNTIME_WEBPACK","STATIC_PROPS_ID","SERVER_PROPS_ID","GOOGLE_FONT_PROVIDER","OPTIMIZED_FONT_PROVIDERS","DEFAULT_SERIF_FONT","DEFAULT_SANS_SERIF_FONT","STATIC_STATUS_PAGES","TRACE_OUTPUT_VERSION","TURBO_TRACE_DEFAULT_MEMORY_LIMIT","RSC_MODULE_TYPES","EDGE_UNSUPPORTED_NODE_APIS","SYSTEM_ENTRYPOINTS","_interop_require_default","edgeServer","preconnect","xAvgCharWidth","azAvgWidth","unitsPerEm","__esModule"],"sourceRoot":""}