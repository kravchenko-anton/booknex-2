"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ts-deepmerge";
exports.ids = ["vendor-chunks/ts-deepmerge"];
exports.modules = {

/***/ "(ssr)/../../node_modules/ts-deepmerge/cjs/index.js":
/*!****************************************************!*\
  !*** ../../node_modules/ts-deepmerge/cjs/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n// istanbul ignore next\nconst isObject = (obj) => {\n    if (typeof obj === \"object\" && obj !== null) {\n        if (typeof Object.getPrototypeOf === \"function\") {\n            const prototype = Object.getPrototypeOf(obj);\n            return prototype === Object.prototype || prototype === null;\n        }\n        return Object.prototype.toString.call(obj) === \"[object Object]\";\n    }\n    return false;\n};\nconst merge = (...objects) => objects.reduce((result, current) => {\n    if (Array.isArray(current)) {\n        throw new TypeError(\"Arguments provided to ts-deepmerge must be objects, not arrays.\");\n    }\n    Object.keys(current).forEach((key) => {\n        if ([\"__proto__\", \"constructor\", \"prototype\"].includes(key)) {\n            return;\n        }\n        if (Array.isArray(result[key]) && Array.isArray(current[key])) {\n            result[key] = merge.options.mergeArrays\n                ? merge.options.uniqueArrayItems\n                    ? Array.from(new Set(result[key].concat(current[key])))\n                    : [...result[key], ...current[key]]\n                : current[key];\n        }\n        else if (isObject(result[key]) && isObject(current[key])) {\n            result[key] = merge(result[key], current[key]);\n        }\n        else {\n            result[key] =\n                current[key] === undefined\n                    ? merge.options.allowUndefinedOverrides\n                        ? current[key]\n                        : result[key]\n                    : current[key];\n        }\n    });\n    return result;\n}, {});\nconst defaultOptions = {\n    allowUndefinedOverrides: true,\n    mergeArrays: true,\n    uniqueArrayItems: true,\n};\nmerge.options = defaultOptions;\nmerge.withOptions = (options, ...objects) => {\n    merge.options = Object.assign(Object.assign({}, defaultOptions), options);\n    const result = merge(...objects);\n    merge.options = defaultOptions;\n    return result;\n};\nexports[\"default\"] = merge;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3RzLWRlZXBtZXJnZS9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDLElBQUk7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uLy4uL25vZGVfbW9kdWxlcy90cy1kZWVwbWVyZ2UvY2pzL2luZGV4LmpzPzkxM2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuY29uc3QgaXNPYmplY3QgPSAob2JqKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBvYmogPT09IFwib2JqZWN0XCIgJiYgb2JqICE9PSBudWxsKSB7XG4gICAgICAgIGlmICh0eXBlb2YgT2JqZWN0LmdldFByb3RvdHlwZU9mID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGNvbnN0IHByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmopO1xuICAgICAgICAgICAgcmV0dXJuIHByb3RvdHlwZSA9PT0gT2JqZWN0LnByb3RvdHlwZSB8fCBwcm90b3R5cGUgPT09IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopID09PSBcIltvYmplY3QgT2JqZWN0XVwiO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59O1xuY29uc3QgbWVyZ2UgPSAoLi4ub2JqZWN0cykgPT4gb2JqZWN0cy5yZWR1Y2UoKHJlc3VsdCwgY3VycmVudCkgPT4ge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGN1cnJlbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJBcmd1bWVudHMgcHJvdmlkZWQgdG8gdHMtZGVlcG1lcmdlIG11c3QgYmUgb2JqZWN0cywgbm90IGFycmF5cy5cIik7XG4gICAgfVxuICAgIE9iamVjdC5rZXlzKGN1cnJlbnQpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICBpZiAoW1wiX19wcm90b19fXCIsIFwiY29uc3RydWN0b3JcIiwgXCJwcm90b3R5cGVcIl0uaW5jbHVkZXMoa2V5KSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHJlc3VsdFtrZXldKSAmJiBBcnJheS5pc0FycmF5KGN1cnJlbnRba2V5XSkpIHtcbiAgICAgICAgICAgIHJlc3VsdFtrZXldID0gbWVyZ2Uub3B0aW9ucy5tZXJnZUFycmF5c1xuICAgICAgICAgICAgICAgID8gbWVyZ2Uub3B0aW9ucy51bmlxdWVBcnJheUl0ZW1zXG4gICAgICAgICAgICAgICAgICAgID8gQXJyYXkuZnJvbShuZXcgU2V0KHJlc3VsdFtrZXldLmNvbmNhdChjdXJyZW50W2tleV0pKSlcbiAgICAgICAgICAgICAgICAgICAgOiBbLi4ucmVzdWx0W2tleV0sIC4uLmN1cnJlbnRba2V5XV1cbiAgICAgICAgICAgICAgICA6IGN1cnJlbnRba2V5XTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc09iamVjdChyZXN1bHRba2V5XSkgJiYgaXNPYmplY3QoY3VycmVudFtrZXldKSkge1xuICAgICAgICAgICAgcmVzdWx0W2tleV0gPSBtZXJnZShyZXN1bHRba2V5XSwgY3VycmVudFtrZXldKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdFtrZXldID1cbiAgICAgICAgICAgICAgICBjdXJyZW50W2tleV0gPT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICA/IG1lcmdlLm9wdGlvbnMuYWxsb3dVbmRlZmluZWRPdmVycmlkZXNcbiAgICAgICAgICAgICAgICAgICAgICAgID8gY3VycmVudFtrZXldXG4gICAgICAgICAgICAgICAgICAgICAgICA6IHJlc3VsdFtrZXldXG4gICAgICAgICAgICAgICAgICAgIDogY3VycmVudFtrZXldO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn0sIHt9KTtcbmNvbnN0IGRlZmF1bHRPcHRpb25zID0ge1xuICAgIGFsbG93VW5kZWZpbmVkT3ZlcnJpZGVzOiB0cnVlLFxuICAgIG1lcmdlQXJyYXlzOiB0cnVlLFxuICAgIHVuaXF1ZUFycmF5SXRlbXM6IHRydWUsXG59O1xubWVyZ2Uub3B0aW9ucyA9IGRlZmF1bHRPcHRpb25zO1xubWVyZ2Uud2l0aE9wdGlvbnMgPSAob3B0aW9ucywgLi4ub2JqZWN0cykgPT4ge1xuICAgIG1lcmdlLm9wdGlvbnMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRPcHRpb25zKSwgb3B0aW9ucyk7XG4gICAgY29uc3QgcmVzdWx0ID0gbWVyZ2UoLi4ub2JqZWN0cyk7XG4gICAgbWVyZ2Uub3B0aW9ucyA9IGRlZmF1bHRPcHRpb25zO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gbWVyZ2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ts-deepmerge/cjs/index.js\n");

/***/ })

};
;