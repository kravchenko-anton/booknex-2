export declare const calculateProgress = "\n\t let currentScrollPosition = document.body.scrollTop;\n\t let chapters = document.querySelectorAll('section');\n\t chapters = Array.from(chapters).filter(chapter => chapter.id);\n\t\t\t let currentChapterProgress = 0;\n\t\t\t let currentChapter = 0;\n\t\t\t  let currentChapterLink = '';\n\t\t\t  \n\t\t\t  chapters.forEach((chapter, index) => {\n         const chapterStart = chapter.offsetTop - 1;\n         const chapterEnd = chapterStart + chapter.clientHeight;\n         const chapterProgress = (currentScrollPosition - chapterStart) / (chapterEnd - chapterStart) * 100;\n         \n         if (chapterProgress >= 0 && chapterProgress <= 100) {\n          currentChapterProgress = chapterProgress;\n          currentChapter = index;\n          currentChapterLink = chapter.id;\n         }\n        });\n\t\n   window.ReactNativeWebView.postMessage(JSON.stringify({\n     type: \"scroll\",\n     payload: {\n       scrollTop: currentScrollPosition,\n       progress: (currentScrollPosition / (document.body.scrollHeight - document.body.clientHeight) * 100),\n       chapter: {\n        chapterLink: chapters[currentChapter].id,\n        chapterProgress: currentChapterProgress\n       }\n     }\n   }));\n";
export declare const scrollCalculateProgress = "\nlet timerId;\n\n  \nwindow.addEventListener('scroll', function() {\n clearTimeout(timerId);\n\n timerId = setTimeout(() => {\n  \n\t let currentScrollPosition = document.body.scrollTop;\n\t let chapters = document.querySelectorAll('section');\n\t chapters = Array.from(chapters).filter(chapter => chapter.id);\n\t\t\t let currentChapterProgress = 0;\n\t\t\t let currentChapter = 0;\n\t\t\t  let currentChapterLink = '';\n\t\t\t  \n\t\t\t  chapters.forEach((chapter, index) => {\n         const chapterStart = chapter.offsetTop - 1;\n         const chapterEnd = chapterStart + chapter.clientHeight;\n         const chapterProgress = (currentScrollPosition - chapterStart) / (chapterEnd - chapterStart) * 100;\n         \n         if (chapterProgress >= 0 && chapterProgress <= 100) {\n          currentChapterProgress = chapterProgress;\n          currentChapter = index;\n          currentChapterLink = chapter.id;\n         }\n        });\n\t\n   window.ReactNativeWebView.postMessage(JSON.stringify({\n     type: \"scroll\",\n     payload: {\n       scrollTop: currentScrollPosition,\n       progress: (currentScrollPosition / (document.body.scrollHeight - document.body.clientHeight) * 100),\n       chapter: {\n        chapterLink: chapters[currentChapter].id,\n        chapterProgress: currentChapterProgress\n       }\n     }\n   }));\n\n }, 700);\n});\n";
