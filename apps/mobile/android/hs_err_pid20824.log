#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 368656 bytes for Chunk::new
# Possible reasons:
#   The system is out of physical RAM or swap space
#   The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Zero Based Compressed Oops mode in which the Java heap is
#     placed in the first 32GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 32GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (arena.cpp:184), pid=20824, tid=12648
#
# JRE version:  (18.0.2.1+1) (build )
# Java VM: Java HotSpot(TM) 64-Bit Server VM (18.0.2.1+1-1, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#

---------------  S U M M A R Y ------------

Command Line: org.jetbrains.kotlin.cli.jvm.K2JVMCompiler @D:\projects\booknex-2\apps\mobile\node_modules\react-native-screens\android\build\20231222_4887957388887253428.compiler.options

Host: AMD Ryzen 7 5800H with Radeon Graphics         , 16 cores, 15G,  Windows 11 , 64 bit Build 22621 (10.0.22621.2506)
Time: Fri Dec 22 16:28:21 2023  Windows 11 , 64 bit Build 22621 (10.0.22621.2506) elapsed time: 0.295840 seconds (0d 0h 0m 0s)

---------------  T H R E A D  ---------------

Current thread (0x000001ffcefa3b30):  JavaThread "Unknown thread" [_thread_in_vm, id=12648, stack(0x000000f636300000,0x000000f636400000)]

Stack: [0x000000f636300000,0x000000f636400000]
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x6993aa]
V  [jvm.dll+0x7f46dd]
V  [jvm.dll+0x7f5fee]
V  [jvm.dll+0x7f66a3]
V  [jvm.dll+0x25cf1f]
V  [jvm.dll+0xb8c2f]
V  [jvm.dll+0xb89b4]
V  [jvm.dll+0x762f81]
V  [jvm.dll+0x7c3445]
V  [jvm.dll+0x38be61]
V  [jvm.dll+0x7a2023]
V  [jvm.dll+0x40dc3f]
